{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/stage.js\",\n  _s2 = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport studio from '@theatre/studio';\nimport { initialConfig } from '../constants';\nimport useDrag from '../hooks/use-drag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  /* background: grey; */\n`;\n_c = Wrapper;\nconst FontElement = styled.div``;\n_c2 = FontElement;\nexport default function Stage(_ref) {\n  _s2();\n  let {\n    previousData,\n    sheet\n  } = _ref;\n  const fontElementRefs = useRef([]);\n  const handleFontElementRef = (index, ref) => {\n    fontElementRefs.current[index] = ref;\n  };\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    previousData.forEach(_s((data, index) => {\n      _s();\n      const dragOpts = {\n        onDragStart: () => {\n          studio.scrub();\n        },\n        onDrag: (x, y) => {\n          const obj = sheet.object(data.id, initialConfig.FONT);\n          studio.updateObject(obj, {\n            position: {\n              x: data.style.left + x,\n              y: data.style.top + y\n            }\n          });\n        },\n        onDragEnd: dragHappened => {\n          if (dragHappened) {\n            studio.commit();\n          } else {\n            studio.discard();\n          }\n        },\n        lockCursorTo: 'move'\n      };\n      const fontElementRef = fontElementRefs.current[index];\n      if (fontElementRef) {\n        const divElement = fontElementRef.querySelector('div');\n        if (divElement) {\n          useDrag(divElement, dragOpts);\n        }\n      }\n    }, \"k2HmERllxSqN3sSmLXCIqtWULEs=\", false, function () {\n      return [useDrag];\n    }));\n  }, [previousData]);\n  const fontElements = previousData.map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(FontElement, {\n      id: data.id,\n      style: data.style,\n      onClick: () => {\n        const obj = sheet.object(data.id, initialConfig.FONT);\n        studio.setSelection([obj]);\n      },\n      ref: ref => handleFontElementRef(index, ref),\n      children: data.content\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: \"theatre-stage\",\n    children: fontElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 10\n  }, this);\n}\n_s2(Stage, \"XIO84Y/asmcTpaqcoL5t+Z8ct/U=\");\n_c3 = Stage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"FontElement\");\n$RefreshReg$(_c3, \"Stage\");","map":{"version":3,"names":["React","useRef","useEffect","styled","studio","initialConfig","useDrag","jsxDEV","_jsxDEV","Wrapper","div","_c","FontElement","_c2","Stage","_ref","_s2","previousData","sheet","fontElementRefs","handleFontElementRef","index","ref","current","_s","$RefreshSig$","forEach","data","dragOpts","onDragStart","scrub","onDrag","x","y","obj","object","id","FONT","updateObject","position","style","left","top","onDragEnd","dragHappened","commit","discard","lockCursorTo","fontElementRef","divElement","querySelector","fontElements","map","onClick","setSelection","children","content","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/stage.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport studio from '@theatre/studio';\nimport { initialConfig } from '../constants';\nimport useDrag from '../hooks/use-drag';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  /* background: grey; */\n`;\n\nconst FontElement = styled.div``;\n\nexport default function Stage({ previousData, sheet }) {\n  const fontElementRefs = useRef([]);\n\n  const handleFontElementRef = (index, ref) => {\n    fontElementRefs.current[index] = ref;\n  };\n\n  useEffect(() => {\n    previousData.forEach((data, index) => {\n      const dragOpts = {\n        onDragStart: () => {\n          studio.scrub();\n        },\n        onDrag: (x, y) => {\n          const obj = sheet.object(data.id, initialConfig.FONT);\n          studio.updateObject(obj, {\n            position: { x: data.style.left + x, y: data.style.top + y },\n          });\n        },\n        onDragEnd: (dragHappened) => {\n          if (dragHappened) {\n            studio.commit();\n          } else {\n            studio.discard();\n          }\n        },\n        lockCursorTo: 'move',\n      };\n\n      const fontElementRef = fontElementRefs.current[index];\n      if (fontElementRef) {\n        const divElement = fontElementRef.querySelector('div');\n        if (divElement) {\n          useDrag(divElement, dragOpts);\n        }\n      }\n    });\n  }, [previousData]);\n\n  const fontElements = previousData.map((data, index) => {\n    return (\n      <FontElement\n        key={index}\n        id={data.id}\n        style={data.style}\n        onClick={() => {\n          const obj = sheet.object(data.id, initialConfig.FONT);\n          studio.setSelection([obj]);\n        }}\n        ref={(ref) => handleFontElementRef(index, ref)}\n      >\n        {data.content}\n      </FontElement>\n    );\n  });\n  return <Wrapper id='theatre-stage'>{fontElements}</Wrapper>;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}