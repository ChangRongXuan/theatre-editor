{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/elements/font.js\",\n  _s = $RefreshSig$();\nimport studio from '@theatre/studio';\nimport React, { useMemo, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport useDrag from '../../hooks/use-drag';\nimport { initialConfig } from '../../constants';\nimport { defaultFontStyle } from '../../shared-style';\nimport useWindowDimensions from '../../hooks/use-window-dimensions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FontWrapper = styled.div`\n  ${defaultFontStyle}\n`;\n_c = FontWrapper;\nexport default function FontElement(_ref) {\n  _s();\n  let {\n    id,\n    sheet\n  } = _ref;\n  const object = sheet.object(id, {\n    ...initialConfig.FONT\n  });\n\n  // Drag setting ----------------------\n\n  const {\n    width: containerWidth,\n    height: containerHeight\n  } = useWindowDimensions();\n  const [divRef, setDivRef] = useState(null);\n  const dragOpts = useMemo(() => {\n    let scrub;\n    let initial;\n    let firstOnDragCalled = false;\n    return {\n      onDragStart() {\n        scrub = studio.scrub();\n        initial = object.value;\n        firstOnDragCalled = false;\n      },\n      // x, y 是移動數值，\n      onDrag(x, y) {\n        const convertedX = x / containerWidth * 100;\n        // const convertedY = (y / height) * 100;\n\n        console.log('convertedX', convertedX);\n        console.log('x', x);\n        // console.log('convertedY', convertedY);\n\n        if (!firstOnDragCalled) {\n          studio.setSelection([object]);\n          firstOnDragCalled = true;\n        }\n        scrub.capture(_ref2 => {\n          let {\n            set\n          } = _ref2;\n          set(object.props, {\n            ...initial,\n            position: {\n              x: x + initial.position.x,\n              y: y + initial.position.y\n            }\n          });\n        });\n      },\n      onDragEnd(dragHappened) {\n        if (dragHappened) {\n          scrub.commit();\n        } else {\n          scrub.discard();\n        }\n      },\n      lockCursorTo: 'move'\n    };\n  }, []);\n  useDrag(divRef, dragOpts);\n\n  // Style setting ----------------------\n\n  const [style, setStyle] = useState({});\n  useEffect(() => {\n    object.onValuesChange(newValue => {\n      console.log(newValue.position.x);\n      setStyle({\n        left: `${newValue.position.x / containerWidth * 100} % `,\n        top: `${newValue.position.y}px`,\n        background: `${newValue.bgColor}`,\n        color: `${newValue.font.color}`,\n        opacity: ` ${newValue.opacity}`,\n        padding: `${newValue.padding}px`,\n        display: `${newValue.visible ? 'block' : 'none'}`,\n        width: `${newValue.size.width}px`,\n        fontSize: `${newValue.font.size}px`,\n        borderRadius: `${newValue.border.radius}px`,\n        border: `${newValue.border.size}px solid ${newValue.border.color}`,\n        fontWeight: `${newValue.font.weight}`,\n        letterSpacing: `{newValue.font.spacing}px`,\n        lineHeight: `{newValue.lineHeight}px`,\n        textAlign: `${newValue.textAlign}`,\n        zIndex: `${newValue.zIndex}`,\n        transform: `scale(${newValue.scale})`\n      });\n    });\n  }, [object]);\n  return /*#__PURE__*/_jsxDEV(FontWrapper, {\n    onClick: () => {\n      studio.setSelection([object]);\n    },\n    ref: setDivRef,\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(FontElement, \"xmROZP5ODoXojhcIi7Ign/SUlQw=\", false, function () {\n  return [useWindowDimensions, useDrag];\n});\n_c2 = FontElement;\nvar _c, _c2;\n$RefreshReg$(_c, \"FontWrapper\");\n$RefreshReg$(_c2, \"FontElement\");","map":{"version":3,"names":["studio","React","useMemo","useState","useEffect","styled","useDrag","initialConfig","defaultFontStyle","useWindowDimensions","jsxDEV","_jsxDEV","FontWrapper","div","_c","FontElement","_ref","_s","id","sheet","object","FONT","width","containerWidth","height","containerHeight","divRef","setDivRef","dragOpts","scrub","initial","firstOnDragCalled","onDragStart","value","onDrag","x","y","convertedX","console","log","setSelection","capture","_ref2","set","props","position","onDragEnd","dragHappened","commit","discard","lockCursorTo","style","setStyle","onValuesChange","newValue","left","top","background","bgColor","color","font","opacity","padding","display","visible","size","fontSize","borderRadius","border","radius","fontWeight","weight","letterSpacing","lineHeight","textAlign","zIndex","transform","scale","onClick","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/elements/font.js"],"sourcesContent":["import studio from '@theatre/studio';\nimport React, { useMemo, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport useDrag from '../../hooks/use-drag';\nimport { initialConfig } from '../../constants';\nimport { defaultFontStyle } from '../../shared-style';\nimport useWindowDimensions from '../../hooks/use-window-dimensions';\n\nconst FontWrapper = styled.div`\n  ${defaultFontStyle}\n`;\n\nexport default function FontElement({ id, sheet }) {\n  const object = sheet.object(id, {\n    ...initialConfig.FONT,\n  });\n\n  // Drag setting ----------------------\n\n  const { width: containerWidth, height: containerHeight } =\n    useWindowDimensions();\n\n  const [divRef, setDivRef] = useState(null);\n\n  const dragOpts = useMemo(() => {\n    let scrub;\n    let initial;\n    let firstOnDragCalled = false;\n    return {\n      onDragStart() {\n        scrub = studio.scrub();\n        initial = object.value;\n        firstOnDragCalled = false;\n      },\n\n      // x, y 是移動數值，\n      onDrag(x, y) {\n        const convertedX = (x / containerWidth) * 100;\n        // const convertedY = (y / height) * 100;\n\n        console.log('convertedX', convertedX);\n        console.log('x', x);\n        // console.log('convertedY', convertedY);\n\n        if (!firstOnDragCalled) {\n          studio.setSelection([object]);\n          firstOnDragCalled = true;\n        }\n        scrub.capture(({ set }) => {\n          set(object.props, {\n            ...initial,\n            position: {\n              x: x + initial.position.x,\n              y: y + initial.position.y,\n            },\n          });\n        });\n      },\n      onDragEnd(dragHappened) {\n        if (dragHappened) {\n          scrub.commit();\n        } else {\n          scrub.discard();\n        }\n      },\n      lockCursorTo: 'move',\n    };\n  }, []);\n\n  useDrag(divRef, dragOpts);\n\n  // Style setting ----------------------\n\n  const [style, setStyle] = useState({});\n\n  useEffect(() => {\n    object.onValuesChange((newValue) => {\n      console.log(newValue.position.x);\n      setStyle({\n        left: `${(newValue.position.x / containerWidth) * 100} % `,\n        top: `${newValue.position.y}px`,\n        background: `${newValue.bgColor}`,\n        color: `${newValue.font.color}`,\n        opacity: ` ${newValue.opacity}`,\n        padding: `${newValue.padding}px`,\n        display: `${newValue.visible ? 'block' : 'none'}`,\n        width: `${newValue.size.width}px`,\n        fontSize: `${newValue.font.size}px`,\n        borderRadius: `${newValue.border.radius}px`,\n        border: `${newValue.border.size}px solid ${newValue.border.color}`,\n        fontWeight: `${newValue.font.weight}`,\n        letterSpacing: `{newValue.font.spacing}px`,\n        lineHeight: `{newValue.lineHeight}px`,\n        textAlign: `${newValue.textAlign}`,\n        zIndex: `${newValue.zIndex}`,\n        transform: `scale(${newValue.scale})`,\n      });\n    });\n  }, [object]);\n\n  return (\n    <FontWrapper\n      onClick={() => {\n        studio.setSelection([object]);\n      }}\n      ref={setDivRef}\n      style={style}\n    />\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}