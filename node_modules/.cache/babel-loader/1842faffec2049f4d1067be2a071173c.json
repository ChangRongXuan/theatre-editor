{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/control-panel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ElementButtons from './button/element-button';\nimport SettingButtons from './button/setting-button';\nimport FontLightBox from './lightbox/add-font';\nimport JSONLightBox from './lightbox/add-json';\nimport BgLightBox from './lightbox/add-bg';\nimport ImageLightBox from './lightbox/add-image';\nimport styled from 'styled-components';\nimport { getLocalStorageData } from '../utils/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LightBoxWrapper = styled.div`\n  position: relative;\n`;\n_c = LightBoxWrapper;\nconst ButtonWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: space-between;\n  z-index: 100;\n`;\n_c2 = ButtonWrapper;\nexport default function ControlPanel(_ref) {\n  _s();\n  var _JSON$parse, _JSON$parse$historic, _JSON$parse$historic$, _JSON$parse$historic$2;\n  let {\n    sheet,\n    setStoredData,\n    storedData\n  } = _ref;\n  const [showFontLightBox, setShowFontLightBox] = useState(false);\n  const [showJSONLightBox, setShowJSONLightBox] = useState(false);\n  const [showImageLightBox, setShowImageLightBox] = useState(false);\n  const [showBgLightBox, setShowBgLightBox] = useState(false);\n  const [elementJSON, setElementJSON] = useState(getLocalStorageData('theatre-data'));\n  const animateData = localStorage.getItem('theatre-0.4.persistent');\n  console.log('animate', animate);\n  console.log('detail', (_JSON$parse = JSON.parse(animateData)) === null || _JSON$parse === void 0 ? void 0 : (_JSON$parse$historic = _JSON$parse.historic) === null || _JSON$parse$historic === void 0 ? void 0 : (_JSON$parse$historic$ = _JSON$parse$historic.innerState) === null || _JSON$parse$historic$ === void 0 ? void 0 : (_JSON$parse$historic$2 = _JSON$parse$historic$.coreByProject) === null || _JSON$parse$historic$2 === void 0 ? void 0 : _JSON$parse$historic$2.Project); //innerState.coreByProject.Project\n\n  const [animateJSON, setAnimateJSON] = useState(getLocalStorageData('theatre-0.4.persistent'));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LightBoxWrapper, {\n      id: \"lightbox-wrapper\",\n      children: [showFontLightBox && /*#__PURE__*/_jsxDEV(FontLightBox, {\n        setShowFontLightBox: setShowFontLightBox,\n        setStoredData: setStoredData,\n        storedData: storedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), showImageLightBox && /*#__PURE__*/_jsxDEV(ImageLightBox, {\n        setShowImageLightBox: setShowImageLightBox,\n        storedData: storedData,\n        setStoredData: setStoredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), showBgLightBox && /*#__PURE__*/_jsxDEV(BgLightBox, {\n        setShowBgLightBox: setShowBgLightBox,\n        storedData: storedData,\n        setStoredData: setStoredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), showJSONLightBox && /*#__PURE__*/_jsxDEV(JSONLightBox, {\n        setShowJSONLightBox: setShowJSONLightBox,\n        setAnimateJSON: setAnimateJSON,\n        animateJSON: animateJSON,\n        elementJSON: elementJSON,\n        setElementJSON: setElementJSON\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(SettingButtons, {\n        sheet: sheet,\n        setShowJSONLightBox: setShowJSONLightBox,\n        setElementJSON: setElementJSON,\n        setAnimateJSON: setAnimateJSON\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ElementButtons, {\n        setShowFontLightBox: setShowFontLightBox,\n        setShowImageLightBox: setShowImageLightBox,\n        setShowBgLightBox: setShowBgLightBox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ControlPanel, \"9pmHYRyguqscaQ4HIqyT63AWDRk=\");\n_c3 = ControlPanel;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LightBoxWrapper\");\n$RefreshReg$(_c2, \"ButtonWrapper\");\n$RefreshReg$(_c3, \"ControlPanel\");","map":{"version":3,"names":["React","useState","ElementButtons","SettingButtons","FontLightBox","JSONLightBox","BgLightBox","ImageLightBox","styled","getLocalStorageData","jsxDEV","_jsxDEV","Fragment","_Fragment","LightBoxWrapper","div","_c","ButtonWrapper","_c2","ControlPanel","_ref","_s","_JSON$parse","_JSON$parse$historic","_JSON$parse$historic$","_JSON$parse$historic$2","sheet","setStoredData","storedData","showFontLightBox","setShowFontLightBox","showJSONLightBox","setShowJSONLightBox","showImageLightBox","setShowImageLightBox","showBgLightBox","setShowBgLightBox","elementJSON","setElementJSON","animateData","localStorage","getItem","console","log","animate","JSON","parse","historic","innerState","coreByProject","Project","animateJSON","setAnimateJSON","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/control-panel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ElementButtons from './button/element-button';\nimport SettingButtons from './button/setting-button';\nimport FontLightBox from './lightbox/add-font';\nimport JSONLightBox from './lightbox/add-json';\nimport BgLightBox from './lightbox/add-bg';\nimport ImageLightBox from './lightbox/add-image';\nimport styled from 'styled-components';\nimport { getLocalStorageData } from '../utils/index';\n\nconst LightBoxWrapper = styled.div`\n  position: relative;\n`;\n\nconst ButtonWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: space-between;\n  z-index: 100;\n`;\n\nexport default function ControlPanel({ sheet, setStoredData, storedData }) {\n  const [showFontLightBox, setShowFontLightBox] = useState(false);\n  const [showJSONLightBox, setShowJSONLightBox] = useState(false);\n  const [showImageLightBox, setShowImageLightBox] = useState(false);\n  const [showBgLightBox, setShowBgLightBox] = useState(false);\n\n  const [elementJSON, setElementJSON] = useState(\n    getLocalStorageData('theatre-data')\n  );\n\n  const animateData = localStorage.getItem('theatre-0.4.persistent');\n\n  console.log('animate', animate);\n  console.log(\n    'detail',\n    JSON.parse(animateData)?.historic?.innerState?.coreByProject?.Project\n  ); //innerState.coreByProject.Project\n\n  const [animateJSON, setAnimateJSON] = useState(\n    getLocalStorageData('theatre-0.4.persistent')\n  );\n\n  return (\n    <>\n      <LightBoxWrapper id='lightbox-wrapper'>\n        {showFontLightBox && (\n          <FontLightBox\n            setShowFontLightBox={setShowFontLightBox}\n            setStoredData={setStoredData}\n            storedData={storedData}\n          />\n        )}\n\n        {showImageLightBox && (\n          <ImageLightBox\n            setShowImageLightBox={setShowImageLightBox}\n            storedData={storedData}\n            setStoredData={setStoredData}\n          />\n        )}\n\n        {showBgLightBox && (\n          <BgLightBox\n            setShowBgLightBox={setShowBgLightBox}\n            storedData={storedData}\n            setStoredData={setStoredData}\n          />\n        )}\n\n        {showJSONLightBox && (\n          <JSONLightBox\n            setShowJSONLightBox={setShowJSONLightBox}\n            setAnimateJSON={setAnimateJSON}\n            animateJSON={animateJSON}\n            elementJSON={elementJSON}\n            setElementJSON={setElementJSON}\n          />\n        )}\n      </LightBoxWrapper>\n\n      <ButtonWrapper>\n        <SettingButtons\n          sheet={sheet}\n          setShowJSONLightBox={setShowJSONLightBox}\n          setElementJSON={setElementJSON}\n          setAnimateJSON={setAnimateJSON}\n        />\n        <ElementButtons\n          setShowFontLightBox={setShowFontLightBox}\n          setShowImageLightBox={setShowImageLightBox}\n          setShowBgLightBox={setShowBgLightBox}\n        />\n      </ButtonWrapper>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}