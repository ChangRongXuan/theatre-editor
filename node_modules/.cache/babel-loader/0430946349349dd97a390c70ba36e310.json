{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-video.js\",\n  _s = $RefreshSig$();\nimport { types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport { initialConfig } from '../constants';\nimport styled from 'styled-components';\nimport { getProject } from '@theatre/core';\nimport studio from '@theatre/studio';\nimport { defaultFontStyle, defaultImageStyle } from '../components/shared-style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n_c = Wrapper;\nconst FontElement = styled.div`\n  ${defaultFontStyle}\n`;\n_c2 = FontElement;\nconst ImageElement = styled.div`\n  ${defaultImageStyle}\n`;\n_c3 = ImageElement;\nexport default function DemoVideo() {\n  _s();\n  studio.initialize();\n  studio.ui.hide();\n  const project = getProject('Project', {});\n  const sheet = project.sheet('Scene', 'default');\n  project.ready.then(() => sheet.sequence.play({\n    iterationCount: Infinity\n  }));\n  const [storedData, setStoredData] = useState([]); // data in local-storage\n\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setStoredData(JSON.parse(elements));\n    }\n  }, []);\n  useEffect(() => {\n    if (storedData.length > 0) {\n      //render `font` control menu\n      storedData.filter(item => item.type === 'font').forEach(item => {\n        const menuConfig = sheet.object(item.id, {\n          ...initialConfig.FONT,\n          content: types.string(`${item.content}`)\n        });\n        const element = document.getElementById(item.id);\n        menuConfig.onValuesChange(newValue => {\n          element.style.cssText = `\n              left: ${newValue.position.x}%;\n              top: ${newValue.position.y}%;\n              background: ${newValue.bgColor};\n              color: ${newValue.font.color};\n              opacity: ${newValue.opacity};\n              padding: ${newValue.padding}px;\n              display: ${newValue.visible ? 'block' : 'none'};\n              width: ${newValue.size.width}px;\n              font-size: ${newValue.font.size}px;\n              border-radius: ${newValue.border.radius}%;\n              border: ${newValue.border.size}px solid ${newValue.border.color};\n              font-weight: ${newValue.font.weight};\n              letter-spacing: ${newValue.font.spacing}px;\n              line-height: ${newValue.lineHeight}px;\n              text-align: ${newValue.textAlign};\n              z-index: ${newValue.zIndex};\n              transform: scale(${newValue.scale});\n            `;\n        });\n\n        //   element.textContent = newValue.content;\n\n        // menuConfig.onValuesChange((newValue) => {\n        //   element.style.left = newValue.position.x + '%';\n        //   element.style.top = newValue.position.y + '%';\n        //   element.style.background = newValue.bgColor;\n        //   element.style.color = newValue.font.color;\n        //   element.style.opacity = newValue.opacity;\n        //   element.style.padding = newValue.padding + 'px';\n        //   element.style.display = newValue.visible ? 'block' : 'none';\n        //   element.style.width = newValue.size.width + 'px';\n        //   element.style.fontSize = newValue.font.size + 'px';\n        //   element.style.borderRadius = newValue.border.radius + '%';\n        //   element.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n\n        //   element.style.fontWeight = newValue.font.weight;\n        //   element.style.letterSpacing = newValue.font.spacing + 'px';\n        //   element.style.lineHeight = newValue.lineHeight + 'px';\n        //   element.style.textAlign = newValue.textAlign;\n        //   element.style.zIndex = newValue.zIndex;\n        //   element.style.transform = `scale(${newValue.scale})`;\n        // });\n      });\n\n      //render `image` control menu\n      storedData.filter(item => item.type === 'image').forEach(item => {\n        const menuConfig = sheet.object(item.id, {\n          ...initialConfig.IMAGE,\n          url: types.string(`${item.url}`)\n        });\n        const element = document.getElementById(item.id);\n        menuConfig.onValuesChange(newValue => {\n          element.style.cssText = `\n              left: ${newValue.position.x}%;\n              top: ${newValue.position.y}%;\n              width: ${newValue.size.width}px;\n              height: ${newValue.size.height}px;\n              border-radius: ${newValue.border.radius}%;\n              border: ${newValue.border.size}px solid ${newValue.border.color};\n              background: ${newValue.bgColor};\n              opacity: ${newValue.opacity};\n              display: ${newValue.visible ? 'block' : 'none'};\n              background-image = url(${newValue.url});\n            `;\n        });\n      });\n    }\n  }, [storedData]);\n  const fontElements = storedData.filter(data => data.type === 'font').map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(FontElement, {\n      id: data.id,\n      children: data.content\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this);\n  });\n  const imageElements = storedData.filter(data => data.type === 'image').map((data, index) => {\n    const style = {\n      backgroundImage: `url(${data.url})`\n    };\n    return /*#__PURE__*/_jsxDEV(ImageElement, {\n      id: data.id,\n      style: style\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: \"theatre-stage\",\n    children: [fontElements, imageElements]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(DemoVideo, \"3BWFAgJBhjvuMRyDP6l5VsmCKIE=\");\n_c4 = DemoVideo;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"FontElement\");\n$RefreshReg$(_c3, \"ImageElement\");\n$RefreshReg$(_c4, \"DemoVideo\");","map":{"version":3,"names":["types","useState","useEffect","initialConfig","styled","getProject","studio","defaultFontStyle","defaultImageStyle","jsxDEV","_jsxDEV","Wrapper","div","_c","FontElement","_c2","ImageElement","_c3","DemoVideo","_s","initialize","ui","hide","project","sheet","ready","then","sequence","play","iterationCount","Infinity","storedData","setStoredData","elements","localStorage","getItem","JSON","parse","length","filter","item","type","forEach","menuConfig","object","id","FONT","content","string","element","document","getElementById","onValuesChange","newValue","style","cssText","position","x","y","bgColor","font","color","opacity","padding","visible","size","width","border","radius","weight","spacing","lineHeight","textAlign","zIndex","scale","IMAGE","url","height","fontElements","data","map","index","children","fileName","_jsxFileName","lineNumber","columnNumber","imageElements","backgroundImage","_c4","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-video.js"],"sourcesContent":["import { types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport { initialConfig } from '../constants';\nimport styled from 'styled-components';\nimport { getProject } from '@theatre/core';\nimport studio from '@theatre/studio';\nimport {\n  defaultFontStyle,\n  defaultImageStyle,\n} from '../components/shared-style';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n\nconst FontElement = styled.div`\n  ${defaultFontStyle}\n`;\n\nconst ImageElement = styled.div`\n  ${defaultImageStyle}\n`;\n\nexport default function DemoVideo() {\n  studio.initialize();\n  studio.ui.hide();\n  const project = getProject('Project', {});\n  const sheet = project.sheet('Scene', 'default');\n\n  project.ready.then(() =>\n    sheet.sequence.play({\n      iterationCount: Infinity,\n    })\n  );\n\n  const [storedData, setStoredData] = useState([]); // data in local-storage\n\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setStoredData(JSON.parse(elements));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (storedData.length > 0) {\n      //render `font` control menu\n      storedData\n        .filter((item) => item.type === 'font')\n        .forEach((item) => {\n          const menuConfig = sheet.object(item.id, {\n            ...initialConfig.FONT,\n            content: types.string(`${item.content}`),\n          });\n\n          const element = document.getElementById(item.id);\n\n          menuConfig.onValuesChange((newValue) => {\n            element.style.cssText = `\n              left: ${newValue.position.x}%;\n              top: ${newValue.position.y}%;\n              background: ${newValue.bgColor};\n              color: ${newValue.font.color};\n              opacity: ${newValue.opacity};\n              padding: ${newValue.padding}px;\n              display: ${newValue.visible ? 'block' : 'none'};\n              width: ${newValue.size.width}px;\n              font-size: ${newValue.font.size}px;\n              border-radius: ${newValue.border.radius}%;\n              border: ${newValue.border.size}px solid ${newValue.border.color};\n              font-weight: ${newValue.font.weight};\n              letter-spacing: ${newValue.font.spacing}px;\n              line-height: ${newValue.lineHeight}px;\n              text-align: ${newValue.textAlign};\n              z-index: ${newValue.zIndex};\n              transform: scale(${newValue.scale});\n            `;\n          });\n\n          //   element.textContent = newValue.content;\n\n          // menuConfig.onValuesChange((newValue) => {\n          //   element.style.left = newValue.position.x + '%';\n          //   element.style.top = newValue.position.y + '%';\n          //   element.style.background = newValue.bgColor;\n          //   element.style.color = newValue.font.color;\n          //   element.style.opacity = newValue.opacity;\n          //   element.style.padding = newValue.padding + 'px';\n          //   element.style.display = newValue.visible ? 'block' : 'none';\n          //   element.style.width = newValue.size.width + 'px';\n          //   element.style.fontSize = newValue.font.size + 'px';\n          //   element.style.borderRadius = newValue.border.radius + '%';\n          //   element.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n\n          //   element.style.fontWeight = newValue.font.weight;\n          //   element.style.letterSpacing = newValue.font.spacing + 'px';\n          //   element.style.lineHeight = newValue.lineHeight + 'px';\n          //   element.style.textAlign = newValue.textAlign;\n          //   element.style.zIndex = newValue.zIndex;\n          //   element.style.transform = `scale(${newValue.scale})`;\n          // });\n        });\n\n      //render `image` control menu\n      storedData\n        .filter((item) => item.type === 'image')\n        .forEach((item) => {\n          const menuConfig = sheet.object(item.id, {\n            ...initialConfig.IMAGE,\n            url: types.string(`${item.url}`),\n          });\n\n          const element = document.getElementById(item.id);\n\n          menuConfig.onValuesChange((newValue) => {\n            element.style.cssText = `\n              left: ${newValue.position.x}%;\n              top: ${newValue.position.y}%;\n              width: ${newValue.size.width}px;\n              height: ${newValue.size.height}px;\n              border-radius: ${newValue.border.radius}%;\n              border: ${newValue.border.size}px solid ${newValue.border.color};\n              background: ${newValue.bgColor};\n              opacity: ${newValue.opacity};\n              display: ${newValue.visible ? 'block' : 'none'};\n              background-image = url(${newValue.url});\n            `;\n          });\n        });\n    }\n  }, [storedData]);\n\n  const fontElements = storedData\n    .filter((data) => data.type === 'font')\n    .map((data, index) => {\n      return (\n        <FontElement key={index} id={data.id}>\n          {data.content}\n        </FontElement>\n      );\n    });\n\n  const imageElements = storedData\n    .filter((data) => data.type === 'image')\n    .map((data, index) => {\n      const style = { backgroundImage: `url(${data.url})` };\n      return <ImageElement key={index} id={data.id} style={style} />;\n    });\n\n  return (\n    <Wrapper id='theatre-stage'>\n      {fontElements}\n      {imageElements}\n    </Wrapper>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}