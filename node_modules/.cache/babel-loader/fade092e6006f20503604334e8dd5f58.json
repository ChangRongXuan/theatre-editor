{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/stage.js\";\nimport React from 'react';\nimport styled from 'styled-components';\n// import { initialConfig } from '../constants';\n// import studio from '@theatre/studio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n_c = Wrapper;\nconst FontElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c2 = FontElement;\nconst ImageElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: url(${props => props.url});\n`;\n_c3 = ImageElement;\nexport default function Stage(_ref) {\n  let {\n    savedData,\n    sheet\n  } = _ref;\n  const fontElements = savedData.filter(data => data.type === 'font').map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(FontElement, {\n      id: data.id\n      // onClick={() => {\n      //   const obj = sheet.object(data.id, initialConfig.FONT);\n      //   studio.setSelection([obj]);\n      // }}\n      ,\n      children: data.content\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this);\n  });\n  const imageElements = savedData.filter(data => data.type === 'image').map((data, index) => {\n    const style = {\n      backgroundImage: `url(${data.url})`\n    };\n    return /*#__PURE__*/_jsxDEV(ImageElement, {\n      id: data.id,\n      style: style\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: \"theatre-stage\",\n    children: [fontElements, imageElements]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c4 = Stage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"FontElement\");\n$RefreshReg$(_c3, \"ImageElement\");\n$RefreshReg$(_c4, \"Stage\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Wrapper","div","_c","FontElement","_c2","ImageElement","props","url","_c3","Stage","_ref","savedData","sheet","fontElements","filter","data","type","map","index","id","children","content","fileName","_jsxFileName","lineNumber","columnNumber","imageElements","style","backgroundImage","_c4","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/stage.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n// import { initialConfig } from '../constants';\n// import studio from '@theatre/studio';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n\nconst FontElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ImageElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: url(${(props) => props.url});\n`;\n\nexport default function Stage({ savedData, sheet }) {\n  const fontElements = savedData\n    .filter((data) => data.type === 'font')\n    .map((data, index) => {\n      return (\n        <FontElement\n          key={index}\n          id={data.id}\n          // onClick={() => {\n          //   const obj = sheet.object(data.id, initialConfig.FONT);\n          //   studio.setSelection([obj]);\n          // }}\n        >\n          {data.content}\n        </FontElement>\n      );\n    });\n\n  const imageElements = savedData\n    .filter((data) => data.type === 'image')\n    .map((data, index) => {\n      const style = { backgroundImage: `url(${data.url})` };\n      return <ImageElement key={index} id={data.id} style={style} />;\n    });\n\n  return (\n    <Wrapper id='theatre-stage'>\n      {fontElements}\n      {imageElements}\n    </Wrapper>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,OAAO;AAMb,MAAMG,WAAW,GAAGN,MAAM,CAACI,GAAI;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GALID,WAAW;AAOjB,MAAME,YAAY,GAAGR,MAAM,CAACI,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA2BK,KAAK,IAAKA,KAAK,CAACC,GAAI;AAC/C,CAAC;AAACC,GAAA,GATIH,YAAY;AAWlB,eAAe,SAASI,KAAKA,CAAAC,IAAA,EAAuB;EAAA,IAAtB;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAChD,MAAMG,YAAY,GAAGF,SAAS,CAC3BG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,MAAM,CAAC,CACtCC,GAAG,CAAC,CAACF,IAAI,EAAEG,KAAK,KAAK;IACpB,oBACEnB,OAAA,CAACI,WAAW;MAEVgB,EAAE,EAAEJ,IAAI,CAACI;MACT;MACA;MACA;MACA;MAAA;MAAAC,QAAA,EAECL,IAAI,CAACM;IAAO,GAPRH,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQC,CAAC;EAElB,CAAC,CAAC;EAEJ,MAAMC,aAAa,GAAGf,SAAS,CAC5BG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC,CACvCC,GAAG,CAAC,CAACF,IAAI,EAAEG,KAAK,KAAK;IACpB,MAAMS,KAAK,GAAG;MAAEC,eAAe,EAAG,OAAMb,IAAI,CAACR,GAAI;IAAG,CAAC;IACrD,oBAAOR,OAAA,CAACM,YAAY;MAAac,EAAE,EAAEJ,IAAI,CAACI,EAAG;MAACQ,KAAK,EAAEA;IAAM,GAAjCT,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA8B,CAAC;EAChE,CAAC,CAAC;EAEJ,oBACE1B,OAAA,CAACC,OAAO;IAACmB,EAAE,EAAC,eAAe;IAAAC,QAAA,GACxBP,YAAY,EACZa,aAAa;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACI,GAAA,GA/BuBpB,KAAK;AAAA,IAAAP,EAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAA1B,GAAA;AAAA0B,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}