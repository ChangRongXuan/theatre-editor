{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _annotatingError = _interopRequireDefault(require(\"../annotating-error\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\n/**\n * Annotate the error with `name`, `message` and `payload`. It will return a new error that is an instance of `errors.AnnotatingError`.\n *\n * @param {Error} causer - the annotated error\n * @param {string} name - name of the annotating error\n * @param {string} message - message of the annotating error\n * @param {Object} payload - the context information for better debugging\n * @param {Function} [ignoreFrameFrom=wrap] - when collecting the stack trace all frames above the topmost call to this function, including that call, are left out of the stack trace\n * @param {number} [stackLimit] - the number of frames saved in the stack\n * @returns {AnnotatingError}\n */\nfunction wrap(causer, name, message, payload) {\n  var ignoreFrameFrom = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : wrap;\n  var stackLimit = arguments.length > 5 ? arguments[5] : undefined;\n  return new _annotatingError[\"default\"](causer, name, message, payload, ignoreFrameFrom, stackLimit);\n}\n/**\n * The function will invoke the `cause` method of the input error.\n * If the input error doesn't implement `unwrap`, the function will return the input method itself.\n *\n * @param {AnnotatingError|Error} error\n * @returns {AnnotatingError|Error} the earliest error in the chain that the input error belongs to\n */\n\nfunction cause(error) {\n  if (typeof error.cause === 'function') {\n    return error.cause();\n  }\n  return error;\n}\n/**\n * The function will invoke the `unwrap` method of the input error.\n * If the input error doesn't implement `unwrap`, the function will return `null`.\n *\n * @param {AnnotatingError|Error} error\n * @returns {AnnotatingError|Error|null} the previous error in the chain that the input error belongs to\n */\n\nfunction unwrap(error) {\n  if (typeof error.unwrap === 'function') {\n    return error.unwrap();\n  }\n  return null;\n}\nvar _default = {\n  wrap: wrap,\n  cause: cause,\n  unwrap: unwrap\n};\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","_annotatingError","_interopRequireDefault","require","obj","__esModule","wrap","causer","name","message","payload","ignoreFrameFrom","arguments","length","undefined","stackLimit","cause","error","unwrap","_default"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/node_modules/@twreporter/errors/lib/helpers/general.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _annotatingError = _interopRequireDefault(require(\"../annotating-error\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Annotate the error with `name`, `message` and `payload`. It will return a new error that is an instance of `errors.AnnotatingError`.\n *\n * @param {Error} causer - the annotated error\n * @param {string} name - name of the annotating error\n * @param {string} message - message of the annotating error\n * @param {Object} payload - the context information for better debugging\n * @param {Function} [ignoreFrameFrom=wrap] - when collecting the stack trace all frames above the topmost call to this function, including that call, are left out of the stack trace\n * @param {number} [stackLimit] - the number of frames saved in the stack\n * @returns {AnnotatingError}\n */\nfunction wrap(causer, name, message, payload) {\n  var ignoreFrameFrom = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : wrap;\n  var stackLimit = arguments.length > 5 ? arguments[5] : undefined;\n  return new _annotatingError[\"default\"](causer, name, message, payload, ignoreFrameFrom, stackLimit);\n}\n/**\n * The function will invoke the `cause` method of the input error.\n * If the input error doesn't implement `unwrap`, the function will return the input method itself.\n *\n * @param {AnnotatingError|Error} error\n * @returns {AnnotatingError|Error} the earliest error in the chain that the input error belongs to\n */\n\n\nfunction cause(error) {\n  if (typeof error.cause === 'function') {\n    return error.cause();\n  }\n\n  return error;\n}\n/**\n * The function will invoke the `unwrap` method of the input error.\n * If the input error doesn't implement `unwrap`, the function will return `null`.\n *\n * @param {AnnotatingError|Error} error\n * @returns {AnnotatingError|Error|null} the previous error in the chain that the input error belongs to\n */\n\n\nfunction unwrap(error) {\n  if (typeof error.unwrap === 'function') {\n    return error.unwrap();\n  }\n\n  return null;\n}\n\nvar _default = {\n  wrap: wrap,\n  cause: cause,\n  unwrap: unwrap\n};\nexports[\"default\"] = _default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;AAE3B,IAAIE,gBAAgB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAE7E,SAASD,sBAAsBA,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAAE;;AAEhG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,IAAIA,CAACC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAC5C,IAAIC,eAAe,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGN,IAAI;EAC9F,IAAIS,UAAU,GAAGH,SAAS,CAACC,MAAM,GAAG,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAGE,SAAS;EAChE,OAAO,IAAIb,gBAAgB,CAAC,SAAS,CAAC,CAACM,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,OAAO,EAAEC,eAAe,EAAEI,UAAU,CAAC;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,KAAKA,CAACC,KAAK,EAAE;EACpB,IAAI,OAAOA,KAAK,CAACD,KAAK,KAAK,UAAU,EAAE;IACrC,OAAOC,KAAK,CAACD,KAAK,CAAC,CAAC;EACtB;EAEA,OAAOC,KAAK;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,MAAMA,CAACD,KAAK,EAAE;EACrB,IAAI,OAAOA,KAAK,CAACC,MAAM,KAAK,UAAU,EAAE;IACtC,OAAOD,KAAK,CAACC,MAAM,CAAC,CAAC;EACvB;EAEA,OAAO,IAAI;AACb;AAEA,IAAIC,QAAQ,GAAG;EACbb,IAAI,EAAEA,IAAI;EACVU,KAAK,EAAEA,KAAK;EACZE,MAAM,EAAEA;AACV,CAAC;AACDnB,OAAO,CAAC,SAAS,CAAC,GAAGoB,QAAQ"},"metadata":{},"sourceType":"script"}