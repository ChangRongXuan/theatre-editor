{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/page/playground.js\",\n  _s = $RefreshSig$();\nimport studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\n// import EmbeddedCode from './embedded';\nimport styled from 'styled-components';\n// import ReactDOM from 'react-dom';\nimport projectState from '../json/state.json';\nimport LightBox from '../components/lightbox';\nimport Buttons from '../components/add-button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  min-width: 100%;\n  position: relative;\n  outline: 5px solid red;\n  z-index: -1;\n`;\n_c = Container;\nconst FontElement = styled.div`\n  position: absolute;\n  width: 300px;\n  height: 20px;\n  background: white;\n  outline: 3px solid black;\n  z-index: 10000;\n  padding: 20px;\n`;\n\n//重新整理後，必帶最近一次舊資料\n//抓資料：先從 CMS 調用，沒資料再看 local-storage 有沒有資料\n//存資料：CMS 跟 local-storage 都存\n_c2 = FontElement;\nexport default function Playground() {\n  _s();\n  studio.initialize();\n  const project = getProject('New Project', {\n    state: projectState\n  });\n  const sheet = project.sheet('Scene', 'default');\n  studio.ui.restore();\n  project.ready.then(() => sheet.sequence.play({\n    iterationCount: Infinity\n  }));\n  const [boxes, setBoxes] = useState([]); //紀錄新增的資料\n  const [preData, setPreData] = useState([]); //上一筆舊資料，要與 local-storage 一致\n\n  //從 local-storage 取得舊資料\n  useEffect(() => {\n    const storedBoxes = localStorage.getItem('theatre-data');\n    if (storedBoxes) {\n      setPreData(JSON.parse(storedBoxes));\n    }\n  }, []);\n\n  //render 出既有的元件\n  useEffect(() => {\n    preData.filter(item => item.type === 'box').forEach(item => {\n      const box = sheet.object(item.id, {\n        position: {\n          x: 0,\n          y: 0\n        },\n        bgColor: types.string('#ffffff')\n      });\n      const element = document.getElementById(item.id);\n      box.onValuesChange(newValue => {\n        element.style.left = newValue.position.x + 'px';\n        element.style.top = newValue.position.y + 'px';\n        element.style.backgroundColor = newValue.bgColor;\n      });\n    });\n  }, [preData]);\n  const [showFontLightBox, setShowFontLightBox] = useState(false);\n  const data = [...preData, ...boxes];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LightBox, {\n      setShowFontLightBox: setShowFontLightBox,\n      showFontLightBox: showFontLightBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      sheet: sheet,\n      data: data,\n      setShowFontLightBox: setShowFontLightBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      id: \"item-container\",\n      children: preData.map((box, index) => /*#__PURE__*/_jsxDEV(FontElement, {\n        id: box.id,\n        style: box.style,\n        children: box.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Playground, \"Zm2dbC/C45QbTlUwHxJ/hb7CRCg=\");\n_c3 = Playground;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"FontElement\");\n$RefreshReg$(_c3, \"Playground\");","map":{"version":3,"names":["studio","getProject","types","useState","useEffect","styled","projectState","LightBox","Buttons","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","FontElement","_c2","Playground","_s","initialize","project","state","sheet","ui","restore","ready","then","sequence","play","iterationCount","Infinity","boxes","setBoxes","preData","setPreData","storedBoxes","localStorage","getItem","JSON","parse","filter","item","type","forEach","box","object","id","position","x","y","bgColor","string","element","document","getElementById","onValuesChange","newValue","style","left","top","backgroundColor","showFontLightBox","setShowFontLightBox","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","content","_c3","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/page/playground.js"],"sourcesContent":["import studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\n// import EmbeddedCode from './embedded';\nimport styled from 'styled-components';\n// import ReactDOM from 'react-dom';\nimport projectState from '../json/state.json';\nimport LightBox from '../components/lightbox';\nimport Buttons from '../components/add-button';\n\nconst Container = styled.div`\n  min-width: 100%;\n  position: relative;\n  outline: 5px solid red;\n  z-index: -1;\n`;\n\nconst FontElement = styled.div`\n  position: absolute;\n  width: 300px;\n  height: 20px;\n  background: white;\n  outline: 3px solid black;\n  z-index: 10000;\n  padding: 20px;\n`;\n\n//重新整理後，必帶最近一次舊資料\n//抓資料：先從 CMS 調用，沒資料再看 local-storage 有沒有資料\n//存資料：CMS 跟 local-storage 都存\n\nexport default function Playground() {\n  studio.initialize();\n  const project = getProject('New Project', { state: projectState });\n  const sheet = project.sheet('Scene', 'default');\n\n  studio.ui.restore();\n\n  project.ready.then(() =>\n    sheet.sequence.play({\n      iterationCount: Infinity,\n    })\n  );\n\n  const [boxes, setBoxes] = useState([]); //紀錄新增的資料\n  const [preData, setPreData] = useState([]); //上一筆舊資料，要與 local-storage 一致\n\n  //從 local-storage 取得舊資料\n  useEffect(() => {\n    const storedBoxes = localStorage.getItem('theatre-data');\n    if (storedBoxes) {\n      setPreData(JSON.parse(storedBoxes));\n    }\n  }, []);\n\n  //render 出既有的元件\n  useEffect(() => {\n    preData\n      .filter((item) => item.type === 'box')\n      .forEach((item) => {\n        const box = sheet.object(item.id, {\n          position: {\n            x: 0,\n            y: 0,\n          },\n          bgColor: types.string('#ffffff'),\n        });\n\n        const element = document.getElementById(item.id);\n\n        box.onValuesChange((newValue) => {\n          element.style.left = newValue.position.x + 'px';\n          element.style.top = newValue.position.y + 'px';\n          element.style.backgroundColor = newValue.bgColor;\n        });\n      });\n  }, [preData]);\n\n  const [showFontLightBox, setShowFontLightBox] = useState(false);\n\n  const data = [...preData, ...boxes];\n\n  return (\n    <>\n      <LightBox\n        setShowFontLightBox={setShowFontLightBox}\n        showFontLightBox={showFontLightBox}\n      />\n      <Buttons\n        sheet={sheet}\n        data={data}\n        setShowFontLightBox={setShowFontLightBox}\n      />\n\n      {/* 只 render local-storage 的舊資料 */}\n      <Container id='item-container'>\n        {preData.map((box, index) => (\n          <FontElement key={index} id={box.id} style={box.style}>\n            {box.content}\n          </FontElement>\n        ))}\n      </Container>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}