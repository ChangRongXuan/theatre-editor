{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/page/playground.js\",\n  _s = $RefreshSig$();\nimport studio from '@theatre/studio';\nimport { types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport Stage from '../components/stage';\nimport { initialConfig } from '../constants';\nimport ControlPanel from '../components/control-panel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Playground(_ref) {\n  _s();\n  let {\n    project,\n    sheet,\n    setAnimateJSON,\n    animateJSON\n  } = _ref;\n  studio.ui.restore();\n  project.ready.then(() => sheet.sequence.pause());\n  const [storedData, setStoredData] = useState([]); //取得儲存在 local-storage 裡的資料\n\n  // get `element` data in local-storage\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setStoredData(JSON.parse(elements));\n    }\n  }, []);\n\n  // render 內容改全部用 config 處理\n  useEffect(() => {\n    if (storedData.length > 0) {\n      //render font control menu\n      storedData.filter(item => item.type === 'font').forEach(item => {\n        const menuConfig = sheet.object(item.id, {\n          ...initialConfig.FONT,\n          content: types.string(`${item.content}`)\n        });\n        const element = document.getElementById(item.id);\n        menuConfig.onValuesChange(newValue => {\n          console.log('newValue', newValue);\n          element.style.left = newValue.position.x + '%';\n          element.style.top = newValue.position.y + '%';\n          element.style.background = newValue.bgColor;\n          element.style.color = newValue.font.color;\n          element.style.opacity = newValue.opacity;\n          element.style.padding = newValue.padding + 'px';\n          element.style.display = newValue.visible ? 'block' : 'none';\n          element.style.width = newValue.size.width + 'px';\n          element.style.height = newValue.size.height + 'px';\n          element.style.fontSize = newValue.font.size + 'px';\n          element.style.borderRadius = newValue.border.radius + '%';\n          element.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n          element.textContent = newValue.content;\n        });\n      });\n      storedData.filter(item => item.type === 'image').forEach(item => {\n        const menuConfig = sheet.object(item.id, {\n          ...initialConfig.IMAGE,\n          url: types.string(`${item.url}`)\n        });\n        const element = document.getElementById(item.id);\n        menuConfig.onValuesChange(newValue => {\n          element.style.left = newValue.position.x + '%';\n          element.style.top = newValue.position.y + '%';\n          element.style.opacity = newValue.opacity;\n          element.style.display = newValue.visible ? 'block' : 'none';\n          element.style.width = newValue.size.width + 'px';\n          element.style.height = newValue.size.height + 'px';\n          element.style.borderRadius = newValue.border.radius + '%';\n          element.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n          element.style.backgroundImage = `url(${newValue.url})`;\n        });\n      });\n    }\n  }, [storedData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ControlPanel, {\n      sheet: sheet,\n      setAnimateJSON: setAnimateJSON,\n      animateJSON: animateJSON\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stage, {\n      storedData: storedData,\n      sheet: sheet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Playground, \"3BWFAgJBhjvuMRyDP6l5VsmCKIE=\");\n_c = Playground;\nvar _c;\n$RefreshReg$(_c, \"Playground\");","map":{"version":3,"names":["studio","types","useState","useEffect","Stage","initialConfig","ControlPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","Playground","_ref","_s","project","sheet","setAnimateJSON","animateJSON","ui","restore","ready","then","sequence","pause","storedData","setStoredData","elements","localStorage","getItem","JSON","parse","length","filter","item","type","forEach","menuConfig","object","id","FONT","content","string","element","document","getElementById","onValuesChange","newValue","console","log","style","left","position","x","top","y","background","bgColor","color","font","opacity","padding","display","visible","width","size","height","fontSize","borderRadius","border","radius","textContent","IMAGE","url","backgroundImage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/page/playground.js"],"sourcesContent":["import studio from '@theatre/studio';\nimport { types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport Stage from '../components/stage';\nimport { initialConfig } from '../constants';\nimport ControlPanel from '../components/control-panel';\n\nexport default function Playground({\n  project,\n  sheet,\n  setAnimateJSON,\n  animateJSON,\n}) {\n  studio.ui.restore();\n  project.ready.then(() => sheet.sequence.pause());\n\n  const [storedData, setStoredData] = useState([]); //取得儲存在 local-storage 裡的資料\n\n  // get `element` data in local-storage\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setStoredData(JSON.parse(elements));\n    }\n  }, []);\n\n  // render 內容改全部用 config 處理\n  useEffect(() => {\n    if (storedData.length > 0) {\n      //render font control menu\n      storedData\n        .filter((item) => item.type === 'font')\n        .forEach((item) => {\n          const menuConfig = sheet.object(item.id, {\n            ...initialConfig.FONT,\n            content: types.string(`${item.content}`),\n          });\n          const element = document.getElementById(item.id);\n\n          menuConfig.onValuesChange((newValue) => {\n            console.log('newValue', newValue);\n            element.style.left = newValue.position.x + '%';\n            element.style.top = newValue.position.y + '%';\n            element.style.background = newValue.bgColor;\n            element.style.color = newValue.font.color;\n            element.style.opacity = newValue.opacity;\n            element.style.padding = newValue.padding + 'px';\n            element.style.display = newValue.visible ? 'block' : 'none';\n            element.style.width = newValue.size.width + 'px';\n            element.style.height = newValue.size.height + 'px';\n            element.style.fontSize = newValue.font.size + 'px';\n            element.style.borderRadius = newValue.border.radius + '%';\n            element.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n            element.textContent = newValue.content;\n          });\n        });\n\n      storedData\n        .filter((item) => item.type === 'image')\n        .forEach((item) => {\n          const menuConfig = sheet.object(item.id, {\n            ...initialConfig.IMAGE,\n            url: types.string(`${item.url}`),\n          });\n          const element = document.getElementById(item.id);\n\n          menuConfig.onValuesChange((newValue) => {\n            element.style.left = newValue.position.x + '%';\n            element.style.top = newValue.position.y + '%';\n            element.style.opacity = newValue.opacity;\n            element.style.display = newValue.visible ? 'block' : 'none';\n            element.style.width = newValue.size.width + 'px';\n            element.style.height = newValue.size.height + 'px';\n            element.style.borderRadius = newValue.border.radius + '%';\n            element.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n            element.style.backgroundImage = `url(${newValue.url})`;\n          });\n        });\n    }\n  }, [storedData]);\n\n  return (\n    <>\n      <ControlPanel\n        sheet={sheet}\n        setAnimateJSON={setAnimateJSON}\n        animateJSON={animateJSON}\n      />\n      <Stage storedData={storedData} sheet={sheet} />\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}