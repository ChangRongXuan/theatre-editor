{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/page/playground.js\",\n  _s = $RefreshSig$();\nimport studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport projectState from '../json/state.json';\nimport LightBox from '../components/lightbox';\nimport Buttons from '../components/button';\nimport Stage from '../components/stage';\nimport { initialProperties } from '../constants';\nimport useDrag from '../../hooks/use-drag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Playground() {\n  _s();\n  studio.initialize();\n  const project = getProject('New Project', {\n    state: projectState\n  });\n  const sheet = project.sheet('Scene', 'default');\n  studio.ui.restore();\n  project.ready.then(() => sheet.sequence.pause);\n\n  // ---------------------------------------------------------------\n\n  const [previousData, setPreviousData] = useState([]);\n  const [newData, setNewData] = useState([]);\n  const totalData = [...previousData, ...newData];\n\n  //get local-storage previous data\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setPreviousData(JSON.parse(elements));\n    }\n  }, []);\n  useEffect(() => {\n    //render font control menu\n    previousData.filter(item => item.type === 'font').forEach(item => {\n      const menuConfig = sheet.object(item.id, initialProperties.FONT);\n      const element = document.getElementById(item.id);\n      menuConfig.onValuesChange(newValue => {\n        element.style.left = newValue.position.x + '%';\n        element.style.top = newValue.position.y + '%';\n        element.style.background = newValue.bgColor;\n        element.style.color = newValue.font.color;\n        element.style.opacity = newValue.opacity;\n        element.style.padding = newValue.padding + 'px';\n        element.style.display = newValue.visible ? 'block' : 'none';\n        element.style.width = newValue.size.width + 'px';\n        element.style.height = newValue.size.height + 'px';\n        element.style.fontSize = newValue.font.size + 'px';\n        element.style.borderRadius = newValue.border.radius + '%';\n        element.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n      });\n    });\n\n    //render image control menu\n    previousData.filter(item => item.type === 'image').forEach(item => {\n      const controlMenu = sheet.object(item.id, initialProperties.IMAGE);\n      const element = document.getElementById(item.id);\n      controlMenu.onValuesChange(newValue => {\n        element.style.left = newValue.position.x + 'px';\n        element.style.top = newValue.position.y + 'px';\n        element.style.backgroundColor = newValue.bgColor;\n      });\n    });\n  }, [previousData]);\n\n  // ---------------------------------------------------------------\n\n  const [showFontLightBox, setShowFontLightBox] = useState(false);\n  const [showImageLightBox, setShowImageLightBox] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LightBox, {\n      setShowFontLightBox: setShowFontLightBox,\n      showFontLightBox: showFontLightBox,\n      setNewData: setNewData,\n      sheet: sheet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      sheet: sheet,\n      data: totalData,\n      setShowFontLightBox: setShowFontLightBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stage, {\n      previousData: previousData,\n      sheet: sheet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Playground, \"yNAdRimoUUle+2edNWetOEcuX1I=\");\n_c = Playground;\nvar _c;\n$RefreshReg$(_c, \"Playground\");","map":{"version":3,"names":["studio","getProject","types","useState","useEffect","projectState","LightBox","Buttons","Stage","initialProperties","useDrag","jsxDEV","_jsxDEV","Fragment","_Fragment","Playground","_s","initialize","project","state","sheet","ui","restore","ready","then","sequence","pause","previousData","setPreviousData","newData","setNewData","totalData","elements","localStorage","getItem","JSON","parse","filter","item","type","forEach","menuConfig","object","id","FONT","element","document","getElementById","onValuesChange","newValue","style","left","position","x","top","y","background","bgColor","color","font","opacity","padding","display","visible","width","size","height","fontSize","borderRadius","border","radius","controlMenu","IMAGE","backgroundColor","showFontLightBox","setShowFontLightBox","showImageLightBox","setShowImageLightBox","children","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/page/playground.js"],"sourcesContent":["import studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport projectState from '../json/state.json';\nimport LightBox from '../components/lightbox';\nimport Buttons from '../components/button';\nimport Stage from '../components/stage';\nimport { initialProperties } from '../constants';\nimport useDrag from '../../hooks/use-drag';\n\nexport default function Playground() {\n  studio.initialize();\n  const project = getProject('New Project', { state: projectState });\n  const sheet = project.sheet('Scene', 'default');\n\n  studio.ui.restore();\n  project.ready.then(() => sheet.sequence.pause);\n\n  // ---------------------------------------------------------------\n\n  const [previousData, setPreviousData] = useState([]);\n  const [newData, setNewData] = useState([]);\n\n  const totalData = [...previousData, ...newData];\n\n  //get local-storage previous data\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setPreviousData(JSON.parse(elements));\n    }\n  }, []);\n\n  useEffect(() => {\n    //render font control menu\n    previousData\n      .filter((item) => item.type === 'font')\n      .forEach((item) => {\n        const menuConfig = sheet.object(item.id, initialProperties.FONT);\n        const element = document.getElementById(item.id);\n\n        menuConfig.onValuesChange((newValue) => {\n          element.style.left = newValue.position.x + '%';\n          element.style.top = newValue.position.y + '%';\n          element.style.background = newValue.bgColor;\n          element.style.color = newValue.font.color;\n          element.style.opacity = newValue.opacity;\n          element.style.padding = newValue.padding + 'px';\n          element.style.display = newValue.visible ? 'block' : 'none';\n          element.style.width = newValue.size.width + 'px';\n          element.style.height = newValue.size.height + 'px';\n          element.style.fontSize = newValue.font.size + 'px';\n          element.style.borderRadius = newValue.border.radius + '%';\n          element.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n        });\n      });\n\n    //render image control menu\n    previousData\n      .filter((item) => item.type === 'image')\n      .forEach((item) => {\n        const controlMenu = sheet.object(item.id, initialProperties.IMAGE);\n        const element = document.getElementById(item.id);\n\n        controlMenu.onValuesChange((newValue) => {\n          element.style.left = newValue.position.x + 'px';\n          element.style.top = newValue.position.y + 'px';\n          element.style.backgroundColor = newValue.bgColor;\n        });\n      });\n  }, [previousData]);\n\n  // ---------------------------------------------------------------\n\n  const [showFontLightBox, setShowFontLightBox] = useState(false);\n  const [showImageLightBox, setShowImageLightBox] = useState(false);\n\n  return (\n    <>\n      <LightBox\n        setShowFontLightBox={setShowFontLightBox}\n        showFontLightBox={showFontLightBox}\n        setNewData={setNewData}\n        sheet={sheet}\n      />\n      <Buttons\n        sheet={sheet}\n        data={totalData}\n        setShowFontLightBox={setShowFontLightBox}\n      />\n      <Stage previousData={previousData} sheet={sheet} />\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}