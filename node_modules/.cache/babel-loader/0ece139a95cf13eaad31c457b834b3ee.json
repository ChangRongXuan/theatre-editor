{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-video.js\",\n  _s = $RefreshSig$();\nimport { types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport { initialConfig } from '../constants';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n_c = Wrapper;\nconst FontElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c2 = FontElement;\nconst ImageElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n_c3 = ImageElement;\nexport default function DemoVideo() {\n  _s();\n  studio.initialize();\n  studio.ui.hide();\n  const project = getProject('Project', {});\n  const sheet = project.sheet('Scene', 'default');\n  project.ready.then(() => sheet.sequence.play({\n    iterationCount: Infinity\n  }));\n  const [storedData, setStoredData] = useState([]); // data in local-storage\n\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setStoredData(JSON.parse(elements));\n    }\n  }, []);\n  useEffect(() => {\n    if (storedData.length > 0) {\n      //render `font` control menu\n      storedData.filter(item => item.type === 'font').forEach(item => {\n        const menuConfig = sheet.object(item.id, {\n          ...initialConfig.FONT,\n          content: types.string(`${item.content}`)\n        });\n        const element = document.getElementById(item.id);\n\n        // menuConfig.onValuesChange((newValue) => {\n        //   element.style.cssText = `\n        //     left: ${newValue.position.x}%;\n        //     top: ${newValue.position.y}修改ㄋㄨ\n        //     background: ${newValue.bgColor};\n        //     color: ${newValue.font.color};\n        //     opacity: ${newValue.opacity};\n        //     padding: ${newValue.padding}px;\n        //     display: ${newValue.visible ? 'block' : 'none'};\n        //     width: ${newValue.size.width}px;\n        //     height: ${newValue.size.height}px;\n        //     font-size: ${newValue.font.size}px;\n        //     border-radius: ${newValue.border.radius}%;\n        //     border: ${newValue.border.size}px solid ${newValue.border.color};\n        //   `;\n        // });\n\n        menuConfig.onValuesChange(newValue => {\n          element.style.left = newValue.position.x + '%';\n          element.style.top = newValue.position.y + '%';\n          element.style.background = newValue.bgColor;\n          element.style.color = newValue.font.color;\n          element.style.opacity = newValue.opacity;\n          element.style.padding = newValue.padding + 'px';\n          element.style.display = newValue.visible ? 'block' : 'none';\n          element.style.width = newValue.size.width + 'px';\n          element.style.fontSize = newValue.font.size + 'px';\n          element.style.borderRadius = newValue.border.radius + '%';\n          element.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n          element.textContent = newValue.content;\n          element.style.fontWeight = newValue.font.weight;\n          element.style.letterSpacing = newValue.font.spacing + 'px';\n          element.style.lineHeight = newValue.lineHeight + 'px';\n          element.style.textAlign = newValue.textAlign;\n          element.style.zIndex = newValue.zIndex;\n          element.style.transform = `scale(${newValue.scale})`;\n        });\n      });\n\n      //render `image` control menu\n      storedData.filter(item => item.type === 'image').forEach(item => {\n        const menuConfig = sheet.object(item.id, {\n          ...initialConfig.IMAGE,\n          url: types.string(`${item.url}`)\n        });\n        const element = document.getElementById(item.id);\n        menuConfig.onValuesChange(newValue => {\n          element.style.cssText = `\n              left: ${newValue.position.x}%;\n              top: ${newValue.position.y}%;\n              width: ${newValue.size.width}px;\n              height: ${newValue.size.height}px;\n              border-radius: ${newValue.border.radius}%;\n              border: ${newValue.border.size}px solid ${newValue.border.color};\n              background: ${newValue.bgColor};\n              opacity: ${newValue.opacity};\n              display: ${newValue.visible ? 'block' : 'none'};\n              background-image = url(${newValue.url});\n            `;\n        });\n      });\n    }\n  }, [storedData]);\n  const fontElements = storedData.filter(data => data.type === 'font').map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(FontElement, {\n      id: data.id,\n      children: data.content\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this);\n  });\n  const imageElements = storedData.filter(data => data.type === 'image').map((data, index) => {\n    const style = {\n      backgroundImage: `url(${data.url})`\n    };\n    return /*#__PURE__*/_jsxDEV(ImageElement, {\n      id: data.id,\n      style: style\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: \"theatre-stage\",\n    children: [fontElements, imageElements]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(DemoVideo, \"3BWFAgJBhjvuMRyDP6l5VsmCKIE=\");\n_c4 = DemoVideo;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"FontElement\");\n$RefreshReg$(_c3, \"ImageElement\");\n$RefreshReg$(_c4, \"DemoVideo\");","map":{"version":3,"names":["types","useState","useEffect","initialConfig","styled","jsxDEV","_jsxDEV","Wrapper","div","_c","FontElement","_c2","ImageElement","_c3","DemoVideo","_s","studio","initialize","ui","hide","project","getProject","sheet","ready","then","sequence","play","iterationCount","Infinity","storedData","setStoredData","elements","localStorage","getItem","JSON","parse","length","filter","item","type","forEach","menuConfig","object","id","FONT","content","string","element","document","getElementById","onValuesChange","newValue","style","left","position","x","top","y","background","bgColor","color","font","opacity","padding","display","visible","width","size","fontSize","borderRadius","border","radius","textContent","fontWeight","weight","letterSpacing","spacing","lineHeight","textAlign","zIndex","transform","scale","IMAGE","url","cssText","height","fontElements","data","map","index","children","fileName","_jsxFileName","lineNumber","columnNumber","imageElements","backgroundImage","_c4","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-video.js"],"sourcesContent":["import { types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport { initialConfig } from '../constants';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n\nconst FontElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ImageElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nexport default function DemoVideo() {\n  studio.initialize();\n  studio.ui.hide();\n  const project = getProject('Project', {});\n  const sheet = project.sheet('Scene', 'default');\n\n  project.ready.then(() =>\n    sheet.sequence.play({\n      iterationCount: Infinity,\n    })\n  );\n\n  const [storedData, setStoredData] = useState([]); // data in local-storage\n\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setStoredData(JSON.parse(elements));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (storedData.length > 0) {\n      //render `font` control menu\n      storedData\n        .filter((item) => item.type === 'font')\n        .forEach((item) => {\n          const menuConfig = sheet.object(item.id, {\n            ...initialConfig.FONT,\n            content: types.string(`${item.content}`),\n          });\n\n          const element = document.getElementById(item.id);\n\n          // menuConfig.onValuesChange((newValue) => {\n          //   element.style.cssText = `\n          //     left: ${newValue.position.x}%;\n          //     top: ${newValue.position.y}修改ㄋㄨ\n          //     background: ${newValue.bgColor};\n          //     color: ${newValue.font.color};\n          //     opacity: ${newValue.opacity};\n          //     padding: ${newValue.padding}px;\n          //     display: ${newValue.visible ? 'block' : 'none'};\n          //     width: ${newValue.size.width}px;\n          //     height: ${newValue.size.height}px;\n          //     font-size: ${newValue.font.size}px;\n          //     border-radius: ${newValue.border.radius}%;\n          //     border: ${newValue.border.size}px solid ${newValue.border.color};\n          //   `;\n          // });\n\n          menuConfig.onValuesChange((newValue) => {\n            element.style.left = newValue.position.x + '%';\n            element.style.top = newValue.position.y + '%';\n            element.style.background = newValue.bgColor;\n            element.style.color = newValue.font.color;\n            element.style.opacity = newValue.opacity;\n            element.style.padding = newValue.padding + 'px';\n            element.style.display = newValue.visible ? 'block' : 'none';\n            element.style.width = newValue.size.width + 'px';\n            element.style.fontSize = newValue.font.size + 'px';\n            element.style.borderRadius = newValue.border.radius + '%';\n            element.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n            element.textContent = newValue.content;\n            element.style.fontWeight = newValue.font.weight;\n            element.style.letterSpacing = newValue.font.spacing + 'px';\n            element.style.lineHeight = newValue.lineHeight + 'px';\n            element.style.textAlign = newValue.textAlign;\n            element.style.zIndex = newValue.zIndex;\n            element.style.transform = `scale(${newValue.scale})`;\n          });\n        });\n\n      //render `image` control menu\n      storedData\n        .filter((item) => item.type === 'image')\n        .forEach((item) => {\n          const menuConfig = sheet.object(item.id, {\n            ...initialConfig.IMAGE,\n            url: types.string(`${item.url}`),\n          });\n\n          const element = document.getElementById(item.id);\n\n          menuConfig.onValuesChange((newValue) => {\n            element.style.cssText = `\n              left: ${newValue.position.x}%;\n              top: ${newValue.position.y}%;\n              width: ${newValue.size.width}px;\n              height: ${newValue.size.height}px;\n              border-radius: ${newValue.border.radius}%;\n              border: ${newValue.border.size}px solid ${newValue.border.color};\n              background: ${newValue.bgColor};\n              opacity: ${newValue.opacity};\n              display: ${newValue.visible ? 'block' : 'none'};\n              background-image = url(${newValue.url});\n            `;\n          });\n        });\n    }\n  }, [storedData]);\n\n  const fontElements = storedData\n    .filter((data) => data.type === 'font')\n    .map((data, index) => {\n      return (\n        <FontElement key={index} id={data.id}>\n          {data.content}\n        </FontElement>\n      );\n    });\n\n  const imageElements = storedData\n    .filter((data) => data.type === 'image')\n    .map((data, index) => {\n      const style = { backgroundImage: `url(${data.url})` };\n      return <ImageElement key={index} id={data.id} style={style} />;\n    });\n\n  return (\n    <Wrapper id='theatre-stage'>\n      {fontElements}\n      {imageElements}\n    </Wrapper>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}