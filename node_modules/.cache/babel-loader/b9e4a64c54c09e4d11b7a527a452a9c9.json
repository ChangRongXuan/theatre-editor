{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/stage.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { defaultFontStyle, defaultImageStyle, defaultBgStyle } from '../shared-style/index';\nimport studio from '@theatre/studio'; //這個 demo 版本要刪掉'\n// import defaultImage from '../assets/default-image.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100vw;\n  min-width: 100vw;\n  max-width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n\n  /* RWD 用 */\n  /* width: 50%;\n  max-width: 768px;\n  margin: auto;\n  outline: 5px solid red; */\n`;\n_c = Wrapper;\nconst FontElement = styled.div`\n  ${defaultFontStyle}\n`;\n_c2 = FontElement;\nconst ImageElement = styled.div`\n  ${defaultImageStyle};\n`;\n_c3 = ImageElement;\nconst BgElement = styled.div`\n  ${defaultBgStyle};\n`;\n_c4 = BgElement;\nexport default function Stage(_ref) {\n  let {\n    storedData\n  } = _ref;\n  const fontElements = storedData.filter(data => data.type === 'FONT').map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(FontElement, {\n      id: data.id\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this);\n  });\n  const imageElements = storedData.filter(data => data.type === 'IMAGE').map((data, index) => {\n    // return <ImageElement key={index} id={data.id} url={data.url} />;\n    return /*#__PURE__*/_jsxDEV(ImageElement, {\n      id: data.id,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/default-image.png\",\n        alt: data.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  });\n  const bgElements = storedData.filter(data => data.type === 'BACKGROUND').map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(BgElement, {\n      id: data.id,\n      url: data.url\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: \"theatre-stage\",\n    children: [fontElements, imageElements, bgElements]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c5 = Stage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"FontElement\");\n$RefreshReg$(_c3, \"ImageElement\");\n$RefreshReg$(_c4, \"BgElement\");\n$RefreshReg$(_c5, \"Stage\");","map":{"version":3,"names":["React","styled","defaultFontStyle","defaultImageStyle","defaultBgStyle","studio","jsxDEV","_jsxDEV","Wrapper","div","_c","FontElement","_c2","ImageElement","_c3","BgElement","_c4","Stage","_ref","storedData","fontElements","filter","data","type","map","index","id","fileName","_jsxFileName","lineNumber","columnNumber","imageElements","children","src","alt","bgElements","url","_c5","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/stage.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {\n  defaultFontStyle,\n  defaultImageStyle,\n  defaultBgStyle,\n} from '../shared-style/index';\nimport studio from '@theatre/studio'; //這個 demo 版本要刪掉'\n// import defaultImage from '../assets/default-image.png';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  min-width: 100vw;\n  max-width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n\n  /* RWD 用 */\n  /* width: 50%;\n  max-width: 768px;\n  margin: auto;\n  outline: 5px solid red; */\n`;\n\nconst FontElement = styled.div`\n  ${defaultFontStyle}\n`;\n\nconst ImageElement = styled.div`\n  ${defaultImageStyle};\n`;\n\nconst BgElement = styled.div`\n  ${defaultBgStyle};\n`;\n\nexport default function Stage({ storedData }) {\n  const fontElements = storedData\n    .filter((data) => data.type === 'FONT')\n    .map((data, index) => {\n      return <FontElement key={index} id={data.id} />;\n    });\n\n  const imageElements = storedData\n    .filter((data) => data.type === 'IMAGE')\n    .map((data, index) => {\n      // return <ImageElement key={index} id={data.id} url={data.url} />;\n      return (\n        <ImageElement key={index} id={data.id}>\n          <img src='/default-image.png' alt={data.id} />\n        </ImageElement>\n      );\n    });\n\n  const bgElements = storedData\n    .filter((data) => data.type === 'BACKGROUND')\n    .map((data, index) => {\n      return <BgElement key={index} id={data.id} url={data.url} />;\n    });\n\n  return (\n    <Wrapper id='theatre-stage'>\n      {fontElements}\n      {imageElements}\n      {bgElements}\n    </Wrapper>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}