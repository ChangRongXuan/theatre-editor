{"ast":null,"code":"import { types } from '@theatre/core';\nexport const IMAGE = {\n  position: types.compound({\n    x: types.number(50, {\n      range: [0, 100],\n      nudgeMultiplier: 0.5\n    }),\n    y: types.number(50, {\n      range: [0, 100],\n      nudgeMultiplier: 0.5\n    })\n  }),\n  size: types.compound({\n    width: types.number(200, {\n      range: [0, 1200],\n      nudgeMultiplier: 1\n    }),\n    height: types.number(100, {\n      range: [0, 1200],\n      nudgeMultiplier: 1\n    })\n  }),\n  border: types.compound({\n    size: types.number(1),\n    color: types.rgba({\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1\n    }),\n    radius: types.number(0, {\n      range: [0, 100],\n      nudgeMultiplier: 1\n    })\n  }),\n  url: types.string(''),\n  opacity: types.number(1, {\n    range: [0, 1],\n    nudgeMultiplier: 0.05\n  }),\n  visible: types.boolean(true)\n};","map":{"version":3,"names":["types","IMAGE","position","compound","x","number","range","nudgeMultiplier","y","size","width","height","border","color","rgba","r","g","b","a","radius","url","string","opacity","visible","boolean"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/constants/image.js"],"sourcesContent":["import { types } from '@theatre/core';\n\nexport const IMAGE = {\n  position: types.compound({\n    x: types.number(50, {\n      range: [0, 100],\n      nudgeMultiplier: 0.5,\n    }),\n    y: types.number(50, {\n      range: [0, 100],\n      nudgeMultiplier: 0.5,\n    }),\n  }),\n  size: types.compound({\n    width: types.number(200, {\n      range: [0, 1200],\n      nudgeMultiplier: 1,\n    }),\n    height: types.number(100, {\n      range: [0, 1200],\n      nudgeMultiplier: 1,\n    }),\n  }),\n\n  border: types.compound({\n    size: types.number(1),\n    color: types.rgba({ r: 0, g: 0, b: 0, a: 1 }),\n    radius: types.number(0, {\n      range: [0, 100],\n      nudgeMultiplier: 1,\n    }),\n  }),\n  url: types.string(''),\n  opacity: types.number(1, {\n    range: [0, 1],\n    nudgeMultiplier: 0.05,\n  }),\n  visible: types.boolean(true),\n};\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,eAAe;AAErC,OAAO,MAAMC,KAAK,GAAG;EACnBC,QAAQ,EAAEF,KAAK,CAACG,QAAQ,CAAC;IACvBC,CAAC,EAAEJ,KAAK,CAACK,MAAM,CAAC,EAAE,EAAE;MAClBC,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MACfC,eAAe,EAAE;IACnB,CAAC,CAAC;IACFC,CAAC,EAAER,KAAK,CAACK,MAAM,CAAC,EAAE,EAAE;MAClBC,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MACfC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC,CAAC;EACFE,IAAI,EAAET,KAAK,CAACG,QAAQ,CAAC;IACnBO,KAAK,EAAEV,KAAK,CAACK,MAAM,CAAC,GAAG,EAAE;MACvBC,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;MAChBC,eAAe,EAAE;IACnB,CAAC,CAAC;IACFI,MAAM,EAAEX,KAAK,CAACK,MAAM,CAAC,GAAG,EAAE;MACxBC,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;MAChBC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC,CAAC;EAEFK,MAAM,EAAEZ,KAAK,CAACG,QAAQ,CAAC;IACrBM,IAAI,EAAET,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC;IACrBQ,KAAK,EAAEb,KAAK,CAACc,IAAI,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC;IAC7CC,MAAM,EAAEnB,KAAK,CAACK,MAAM,CAAC,CAAC,EAAE;MACtBC,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MACfC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC,CAAC;EACFa,GAAG,EAAEpB,KAAK,CAACqB,MAAM,CAAC,EAAE,CAAC;EACrBC,OAAO,EAAEtB,KAAK,CAACK,MAAM,CAAC,CAAC,EAAE;IACvBC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACbC,eAAe,EAAE;EACnB,CAAC,CAAC;EACFgB,OAAO,EAAEvB,KAAK,CAACwB,OAAO,CAAC,IAAI;AAC7B,CAAC"},"metadata":{},"sourceType":"module"}