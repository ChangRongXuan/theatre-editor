{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/elements/font.js\",\n  _s = $RefreshSig$();\nimport studio from '@theatre/studio';\nimport React, { useMemo, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport useDrag from '../../hooks/use-drag';\nimport { initialConfig } from '../../constants';\nimport { defaultFontStyle } from '../../shared-style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FontWrapper = styled.div`\n  ${defaultFontStyle}\n`;\n_c = FontWrapper;\nexport default function FontElement(_ref) {\n  _s();\n  let {\n    id,\n    sheet,\n    screenWidth\n  } = _ref;\n  const object = sheet.object(id, {\n    ...initialConfig.FONT\n  });\n\n  // Drag setting ----------------------\n\n  const [divRef, setDivRef] = useState(null);\n  const screenHeight = window.innerHeight;\n  const dragOpts = useMemo(() => {\n    let scrub;\n    let initial;\n    let firstOnDragCalled = false;\n    return {\n      onDragStart() {\n        scrub = studio.scrub();\n        initial = object.value;\n        firstOnDragCalled = false;\n      },\n      onDrag(x, y) {\n        const percentX = x / screenWidth * 100;\n        const percentY = y / screenHeight * 100;\n        if (!firstOnDragCalled) {\n          studio.setSelection([object]);\n          firstOnDragCalled = true;\n        }\n        scrub.capture(_ref2 => {\n          let {\n            set\n          } = _ref2;\n          set(object.props, {\n            ...initial,\n            position: {\n              x: percentX + initial.position.x,\n              y: percentY + initial.position.y\n            }\n          });\n        });\n      },\n      onDragEnd(dragHappened) {\n        if (dragHappened) {\n          scrub.commit();\n        } else {\n          scrub.discard();\n        }\n      },\n      lockCursorTo: 'move'\n    };\n  }, []);\n  useDrag(divRef, dragOpts);\n\n  // Style setting ----------------------\n\n  const [style, setStyle] = useState({});\n  const [content, setContent] = useState('');\n  useEffect(() => {\n    object.onValuesChange(newValue => {\n      setContent(newValue.content);\n      setStyle({\n        left: `${newValue.position.x}%`,\n        top: `${newValue.position.y}%`,\n        background: `${newValue.bgColor}`,\n        color: `${newValue.font.color}`,\n        opacity: ` ${newValue.opacity}`,\n        padding: `${newValue.padding}px`,\n        display: `${newValue.visible ? 'block' : 'none'}`,\n        width: `${newValue.size.width}px`,\n        fontSize: `${newValue.font.size}px`,\n        borderRadius: `${newValue.border.radius}px`,\n        border: `${newValue.border.size}px solid ${newValue.border.color}`,\n        fontWeight: `${newValue.font.weight}`,\n        letterSpacing: `{newValue.font.spacing}px`,\n        lineHeight: `{newValue.lineHeight}px`,\n        textAlign: `${newValue.textAlign}`,\n        zIndex: `${newValue.zIndex}`,\n        transform: `scale(${newValue.scale})`\n      });\n    });\n  }, [object]);\n  return /*#__PURE__*/_jsxDEV(FontWrapper, {\n    onClick: () => {\n      studio.setSelection([object]);\n    },\n    ref: setDivRef,\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(FontElement, \"wbxRy1pVpuHq8sMDDQ7rJNjMbH4=\", false, function () {\n  return [useDrag];\n});\n_c2 = FontElement;\nvar _c, _c2;\n$RefreshReg$(_c, \"FontWrapper\");\n$RefreshReg$(_c2, \"FontElement\");","map":{"version":3,"names":["studio","React","useMemo","useState","useEffect","styled","useDrag","initialConfig","defaultFontStyle","jsxDEV","_jsxDEV","FontWrapper","div","_c","FontElement","_ref","_s","id","sheet","screenWidth","object","FONT","divRef","setDivRef","screenHeight","window","innerHeight","dragOpts","scrub","initial","firstOnDragCalled","onDragStart","value","onDrag","x","y","percentX","percentY","setSelection","capture","_ref2","set","props","position","onDragEnd","dragHappened","commit","discard","lockCursorTo","style","setStyle","content","setContent","onValuesChange","newValue","left","top","background","bgColor","color","font","opacity","padding","display","visible","width","size","fontSize","borderRadius","border","radius","fontWeight","weight","letterSpacing","lineHeight","textAlign","zIndex","transform","scale","onClick","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/elements/font.js"],"sourcesContent":["import studio from '@theatre/studio';\nimport React, { useMemo, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport useDrag from '../../hooks/use-drag';\nimport { initialConfig } from '../../constants';\nimport { defaultFontStyle } from '../../shared-style';\n\nconst FontWrapper = styled.div`\n  ${defaultFontStyle}\n`;\n\nexport default function FontElement({ id, sheet, screenWidth }) {\n  const object = sheet.object(id, {\n    ...initialConfig.FONT,\n  });\n\n  // Drag setting ----------------------\n\n  const [divRef, setDivRef] = useState(null);\n  const screenHeight = window.innerHeight;\n\n  const dragOpts = useMemo(() => {\n    let scrub;\n    let initial;\n    let firstOnDragCalled = false;\n    return {\n      onDragStart() {\n        scrub = studio.scrub();\n        initial = object.value;\n        firstOnDragCalled = false;\n      },\n\n      onDrag(x, y) {\n        const percentX = (x / screenWidth) * 100;\n        const percentY = (y / screenHeight) * 100;\n\n        if (!firstOnDragCalled) {\n          studio.setSelection([object]);\n          firstOnDragCalled = true;\n        }\n        scrub.capture(({ set }) => {\n          set(object.props, {\n            ...initial,\n            position: {\n              x: percentX + initial.position.x,\n              y: percentY + initial.position.y,\n            },\n          });\n        });\n      },\n      onDragEnd(dragHappened) {\n        if (dragHappened) {\n          scrub.commit();\n        } else {\n          scrub.discard();\n        }\n      },\n      lockCursorTo: 'move',\n    };\n  }, []);\n\n  useDrag(divRef, dragOpts);\n\n  // Style setting ----------------------\n\n  const [style, setStyle] = useState({});\n  const [content, setContent] = useState('');\n\n  useEffect(() => {\n    object.onValuesChange((newValue) => {\n      setContent(newValue.content);\n      setStyle({\n        left: `${newValue.position.x}%`,\n        top: `${newValue.position.y}%`,\n        background: `${newValue.bgColor}`,\n        color: `${newValue.font.color}`,\n        opacity: ` ${newValue.opacity}`,\n        padding: `${newValue.padding}px`,\n        display: `${newValue.visible ? 'block' : 'none'}`,\n        width: `${newValue.size.width}px`,\n        fontSize: `${newValue.font.size}px`,\n        borderRadius: `${newValue.border.radius}px`,\n        border: `${newValue.border.size}px solid ${newValue.border.color}`,\n        fontWeight: `${newValue.font.weight}`,\n        letterSpacing: `{newValue.font.spacing}px`,\n        lineHeight: `{newValue.lineHeight}px`,\n        textAlign: `${newValue.textAlign}`,\n        zIndex: `${newValue.zIndex}`,\n        transform: `scale(${newValue.scale})`,\n      });\n    });\n  }, [object]);\n\n  return (\n    <FontWrapper\n      onClick={() => {\n        studio.setSelection([object]);\n      }}\n      ref={setDivRef}\n      style={style}\n    ></FontWrapper>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}