{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/edit-panel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ElementButtons from './button/element-button';\nimport SettingButtons from './button/setting-button';\nimport FontLightBox from './lightbox/add-font';\nimport JSONLightBox from './lightbox/add-json';\nimport BgLightBox from './lightbox/add-bg';\nimport ImageLightBox from './lightbox/add-image';\nimport styled from 'styled-components';\nimport { getStorageData } from '../utils/index';\nimport GridLine from './grid-line';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LightBoxWrapper = styled.div`\n  position: relative;\n`;\n_c = LightBoxWrapper;\nconst ButtonWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: space-between;\n  z-index: 100;\n`;\n_c2 = ButtonWrapper;\nexport default function ControlPanel(_ref) {\n  _s();\n  var _JSON$parse$historic$, _JSON$parse, _JSON$parse$historic, _JSON$parse$historic$2, _JSON$parse$historic$3;\n  let {\n    sheet,\n    setStoredData,\n    storedData\n  } = _ref;\n  const [showFontLightBox, setShowFontLightBox] = useState(false);\n  const [showJSONLightBox, setShowJSONLightBox] = useState(false);\n  const [showImageLightBox, setShowImageLightBox] = useState(false);\n  const [showBgLightBox, setShowBgLightBox] = useState(false);\n  const [showGrid, setShowGrid] = useState(true);\n  const animate = localStorage.getItem('theatre-0.4.persistent');\n  const animateState = (_JSON$parse$historic$ = (_JSON$parse = JSON.parse(animate)) === null || _JSON$parse === void 0 ? void 0 : (_JSON$parse$historic = _JSON$parse.historic) === null || _JSON$parse$historic === void 0 ? void 0 : (_JSON$parse$historic$2 = _JSON$parse$historic.innerState) === null || _JSON$parse$historic$2 === void 0 ? void 0 : (_JSON$parse$historic$3 = _JSON$parse$historic$2.coreByProject) === null || _JSON$parse$historic$3 === void 0 ? void 0 : _JSON$parse$historic$3.Project) !== null && _JSON$parse$historic$ !== void 0 ? _JSON$parse$historic$ : {};\n  const [animateJSON, setAnimateJSON] = useState(JSON.stringify(animateState));\n  const [elementJSON, setElementJSON] = useState(localStorage.getItem('theatre-data'));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showGrid && /*#__PURE__*/_jsxDEV(GridLine, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(LightBoxWrapper, {\n      id: \"lightbox-wrapper\",\n      children: [showFontLightBox && /*#__PURE__*/_jsxDEV(FontLightBox, {\n        setShowFontLightBox: setShowFontLightBox,\n        setStoredData: setStoredData,\n        storedData: storedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), showImageLightBox && /*#__PURE__*/_jsxDEV(ImageLightBox, {\n        setShowImageLightBox: setShowImageLightBox,\n        storedData: storedData,\n        setStoredData: setStoredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), showBgLightBox && /*#__PURE__*/_jsxDEV(BgLightBox, {\n        setShowBgLightBox: setShowBgLightBox,\n        storedData: storedData,\n        setStoredData: setStoredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), showJSONLightBox && /*#__PURE__*/_jsxDEV(JSONLightBox, {\n        setShowJSONLightBox: setShowJSONLightBox,\n        setAnimateJSON: setAnimateJSON,\n        animateJSON: animateJSON,\n        elementJSON: elementJSON,\n        setElementJSON: setElementJSON\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(SettingButtons, {\n        sheet: sheet,\n        setShowJSONLightBox: setShowJSONLightBox,\n        setElementJSON: setElementJSON,\n        setAnimateJSON: setAnimateJSON,\n        setShowGrid: setShowGrid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ElementButtons, {\n        setShowFontLightBox: setShowFontLightBox,\n        setShowImageLightBox: setShowImageLightBox,\n        setShowBgLightBox: setShowBgLightBox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ControlPanel, \"cJyH1iBIl6ZJkykwjx2HgMbBOZw=\");\n_c3 = ControlPanel;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LightBoxWrapper\");\n$RefreshReg$(_c2, \"ButtonWrapper\");\n$RefreshReg$(_c3, \"ControlPanel\");","map":{"version":3,"names":["React","useState","ElementButtons","SettingButtons","FontLightBox","JSONLightBox","BgLightBox","ImageLightBox","styled","getStorageData","GridLine","jsxDEV","_jsxDEV","Fragment","_Fragment","LightBoxWrapper","div","_c","ButtonWrapper","_c2","ControlPanel","_ref","_s","_JSON$parse$historic$","_JSON$parse","_JSON$parse$historic","_JSON$parse$historic$2","_JSON$parse$historic$3","sheet","setStoredData","storedData","showFontLightBox","setShowFontLightBox","showJSONLightBox","setShowJSONLightBox","showImageLightBox","setShowImageLightBox","showBgLightBox","setShowBgLightBox","showGrid","setShowGrid","animate","localStorage","getItem","animateState","JSON","parse","historic","innerState","coreByProject","Project","animateJSON","setAnimateJSON","stringify","elementJSON","setElementJSON","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c3","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/edit-panel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ElementButtons from './button/element-button';\nimport SettingButtons from './button/setting-button';\nimport FontLightBox from './lightbox/add-font';\nimport JSONLightBox from './lightbox/add-json';\nimport BgLightBox from './lightbox/add-bg';\nimport ImageLightBox from './lightbox/add-image';\nimport styled from 'styled-components';\nimport { getStorageData } from '../utils/index';\nimport GridLine from './grid-line';\n\nconst LightBoxWrapper = styled.div`\n  position: relative;\n`;\n\nconst ButtonWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: space-between;\n  z-index: 100;\n`;\n\nexport default function ControlPanel({ sheet, setStoredData, storedData }) {\n  const [showFontLightBox, setShowFontLightBox] = useState(false);\n  const [showJSONLightBox, setShowJSONLightBox] = useState(false);\n  const [showImageLightBox, setShowImageLightBox] = useState(false);\n  const [showBgLightBox, setShowBgLightBox] = useState(false);\n  const [showGrid, setShowGrid] = useState(true);\n\n  const animate = localStorage.getItem('theatre-0.4.persistent');\n  const animateState =\n    JSON.parse(animate)?.historic?.innerState?.coreByProject?.Project ?? {};\n\n  const [animateJSON, setAnimateJSON] = useState(JSON.stringify(animateState));\n  const [elementJSON, setElementJSON] = useState(\n    localStorage.getItem('theatre-data')\n  );\n\n  return (\n    <>\n      {showGrid && <GridLine />}\n\n      <LightBoxWrapper id='lightbox-wrapper'>\n        {showFontLightBox && (\n          <FontLightBox\n            setShowFontLightBox={setShowFontLightBox}\n            setStoredData={setStoredData}\n            storedData={storedData}\n          />\n        )}\n\n        {showImageLightBox && (\n          <ImageLightBox\n            setShowImageLightBox={setShowImageLightBox}\n            storedData={storedData}\n            setStoredData={setStoredData}\n          />\n        )}\n\n        {showBgLightBox && (\n          <BgLightBox\n            setShowBgLightBox={setShowBgLightBox}\n            storedData={storedData}\n            setStoredData={setStoredData}\n          />\n        )}\n\n        {showJSONLightBox && (\n          <JSONLightBox\n            setShowJSONLightBox={setShowJSONLightBox}\n            setAnimateJSON={setAnimateJSON}\n            animateJSON={animateJSON}\n            elementJSON={elementJSON}\n            setElementJSON={setElementJSON}\n          />\n        )}\n      </LightBoxWrapper>\n\n      <ButtonWrapper>\n        <SettingButtons\n          sheet={sheet}\n          setShowJSONLightBox={setShowJSONLightBox}\n          setElementJSON={setElementJSON}\n          setAnimateJSON={setAnimateJSON}\n          setShowGrid={setShowGrid}\n        />\n        <ElementButtons\n          setShowFontLightBox={setShowFontLightBox}\n          setShowImageLightBox={setShowImageLightBox}\n          setShowBgLightBox={setShowBgLightBox}\n        />\n      </ButtonWrapper>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}