{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/lightbox/font.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { initialProperties } from '../../constants';\nimport studio from '@theatre/studio';\nimport { types } from '@theatre/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: black;\n  opacity: 1;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10005;\n`;\n_c = Wrapper;\nconst Form = styled.div`\n  width: 30%;\n  height: 50%;\n  background: white;\n  border: 10px;\n  padding: 20px;\n  outline: 3px solid black;\n  margin: 70px auto;\n\n  input {\n    width: 30%;\n    margin-bottom: 20px;\n  }\n\n  textarea {\n    width: 90%;\n    height: 200px;\n  }\n\n  button {\n    padding: 5px;\n    background: black;\n    color: white;\n    outline: none;\n    cursor: pointer;\n    margin-top: 10px;\n    margin-right: 10px;\n  }\n`;\n_c2 = Form;\nexport default function FontLightBox(_ref) {\n  _s();\n  let {\n    setShowFontLightBox,\n    setNewData,\n    sheet\n  } = _ref;\n  const [fontContent, setFontContent] = useState('');\n  const [fontID, setFontID] = useState('');\n\n  // const addFontElement = (fontID = '', fontContent = '') => {\n  //   const menuConfig = sheet.object(`${fontID}`, {\n  //     ...initialProperties.FONT,\n  //     title: types.string(''),\n  //     content: types.string(`${fontContent}`),\n  //   });\n\n  //   const div = document.createElement('div');\n\n  //   div.id = `${fontID}`;\n  //   div.textContent = `${fontContent}`;\n  //   div.onclick = () => studio.setSelection([menuConfig]);\n  //   div.style.cssText = `\n  //     position: absolute;\n  //     z-index: 1000;\n  //     display: flex;\n  //     align-items: center;\n  //     justify-content: center'\n  //     cursor: pointer;\n  //   `;\n\n  //   const container = document.getElementById('theatre-stage');\n  //   if (container) {\n  //     container.appendChild(div);\n  //   }\n\n  //   let updateStyle;\n\n  //   menuConfig.onValuesChange((newValue) => {\n  //     div.style.left = newValue.position.x + '%';\n  //     div.style.top = newValue.position.y + '%';\n  //     div.style.background = newValue.bgColor;\n  //     div.style.color = newValue.font.color;\n  //     div.style.opacity = newValue.opacity;\n  //     div.style.padding = newValue.padding + 'px';\n  //     div.style.display = newValue.visible ? 'block' : 'none';\n  //     div.style.width = newValue.size.width + 'px';\n  //     div.style.height = newValue.size.height + 'px';\n  //     div.style.fontSize = newValue.font.size + 'px';\n  //     div.style.borderRadius = newValue.border.radius + '%';\n  //     div.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n\n  //     updateStyle = {\n  //       position: 'absolute',\n  //       zIndex: '1000',\n  //       display: 'flex',\n  //       alignItems: 'center',\n  //       justifyContent: 'center',\n  //       cursor: 'pointer',\n  //       left: newValue.position.x + '%',\n  //       top: newValue.position.y + '%',\n  //       color: newValue.font.color,\n  //       fontSize: newValue.font.size + 'px',\n  //       background: newValue.bgColor,\n  //       padding: newValue.padding + 'px',\n  //       display: newValue.visible ? 'block' : 'none',\n  //       width: newValue.size.width + 'px',\n  //       height: newValue.size.height + 'px',\n  //       opacity: newValue.opacity,\n  //       borderRadius: newValue.border.radius + '%',\n  //       border: newValue.border.size + 'px solid' + newValue.border.color,\n  //     };\n\n  //     div.textContent = newValue.content;\n  //   });\n\n  //   setNewData((prevData) => [\n  //     ...prevData,\n  //     {\n  //       content: fontContent,\n  //       id: fontID,\n  //       type: 'font',\n  //       style: updateStyle,\n  //     },\n  //   ]);\n  // };\n\n  const addFontElement = function () {\n    let fontID = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let fontContent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const menuConfig = sheet.object(fontID, {\n      ...initialProperties.FONT,\n      title: types.string(''),\n      content: types.string(fontContent)\n    });\n    const div = document.createElement('div');\n    div.id = fontID;\n    div.textContent = fontContent;\n    div.onclick = () => studio.setSelection([menuConfig]);\n    div.style.cssText = `\n      position: absolute;\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n    `;\n    const container = document.getElementById('theatre-stage');\n    if (container) {\n      container.appendChild(div);\n    }\n    let updateStyle = {\n      position: 'absolute',\n      zIndex: '1000',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      cursor: 'pointer'\n    };\n    const styleProperties = ['left', 'top', 'background', 'color', 'opacity', 'padding', 'display', 'width', 'height', 'fontSize', 'borderRadius', 'border'];\n    menuConfig.onValuesChange(newValue => {\n      styleProperties.forEach(property => {\n        div.style[property] = newValue[property];\n        updateStyle[property] = newValue[property];\n      });\n      div.textContent = newValue.content;\n    });\n    setNewData(prevData => [...prevData, {\n      content: fontContent,\n      id: fontID,\n      type: 'font',\n      style: updateStyle\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u65B0\\u589E Font \\u5143\\u4EF6 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u7269\\u4EF6 ID (\\u52FF\\u8207\\u4E4B\\u524D\\u7684\\u91CD\\u8907)\\uFF1A \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u4E2D/\\u82F1/\\u6578\\u5B57\\u7686\\u53EF\",\n        value: fontID,\n        onChange: e => setFontID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"\\u6587\\u5B57\\u5167\\u5BB9\",\n        value: fontContent,\n        onChange: e => setFontContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowFontLightBox(false);\n          addFontElement(fontID, fontContent);\n        },\n        children: \"\\u78BA\\u5B9A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowFontLightBox(false);\n        },\n        children: \"\\u53D6\\u6D88\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_s(FontLightBox, \"VjwTUUI9kEThIRYLfmJWJ+Pzqnw=\");\n_c3 = FontLightBox;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"FontLightBox\");","map":{"version":3,"names":["React","useState","styled","initialProperties","studio","types","jsxDEV","_jsxDEV","Wrapper","div","_c","Form","_c2","FontLightBox","_ref","_s","setShowFontLightBox","setNewData","sheet","fontContent","setFontContent","fontID","setFontID","addFontElement","arguments","length","undefined","menuConfig","object","FONT","title","string","content","document","createElement","id","textContent","onclick","setSelection","style","cssText","container","getElementById","appendChild","updateStyle","position","zIndex","display","alignItems","justifyContent","cursor","styleProperties","onValuesChange","newValue","forEach","property","prevData","type","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","_c3","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/lightbox/font.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { initialProperties } from '../../constants';\nimport studio from '@theatre/studio';\nimport { types } from '@theatre/core';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: black;\n  opacity: 1;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10005;\n`;\n\nconst Form = styled.div`\n  width: 30%;\n  height: 50%;\n  background: white;\n  border: 10px;\n  padding: 20px;\n  outline: 3px solid black;\n  margin: 70px auto;\n\n  input {\n    width: 30%;\n    margin-bottom: 20px;\n  }\n\n  textarea {\n    width: 90%;\n    height: 200px;\n  }\n\n  button {\n    padding: 5px;\n    background: black;\n    color: white;\n    outline: none;\n    cursor: pointer;\n    margin-top: 10px;\n    margin-right: 10px;\n  }\n`;\n\nexport default function FontLightBox({\n  setShowFontLightBox,\n  setNewData,\n  sheet,\n}) {\n  const [fontContent, setFontContent] = useState('');\n  const [fontID, setFontID] = useState('');\n\n  // const addFontElement = (fontID = '', fontContent = '') => {\n  //   const menuConfig = sheet.object(`${fontID}`, {\n  //     ...initialProperties.FONT,\n  //     title: types.string(''),\n  //     content: types.string(`${fontContent}`),\n  //   });\n\n  //   const div = document.createElement('div');\n\n  //   div.id = `${fontID}`;\n  //   div.textContent = `${fontContent}`;\n  //   div.onclick = () => studio.setSelection([menuConfig]);\n  //   div.style.cssText = `\n  //     position: absolute;\n  //     z-index: 1000;\n  //     display: flex;\n  //     align-items: center;\n  //     justify-content: center'\n  //     cursor: pointer;\n  //   `;\n\n  //   const container = document.getElementById('theatre-stage');\n  //   if (container) {\n  //     container.appendChild(div);\n  //   }\n\n  //   let updateStyle;\n\n  //   menuConfig.onValuesChange((newValue) => {\n  //     div.style.left = newValue.position.x + '%';\n  //     div.style.top = newValue.position.y + '%';\n  //     div.style.background = newValue.bgColor;\n  //     div.style.color = newValue.font.color;\n  //     div.style.opacity = newValue.opacity;\n  //     div.style.padding = newValue.padding + 'px';\n  //     div.style.display = newValue.visible ? 'block' : 'none';\n  //     div.style.width = newValue.size.width + 'px';\n  //     div.style.height = newValue.size.height + 'px';\n  //     div.style.fontSize = newValue.font.size + 'px';\n  //     div.style.borderRadius = newValue.border.radius + '%';\n  //     div.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n\n  //     updateStyle = {\n  //       position: 'absolute',\n  //       zIndex: '1000',\n  //       display: 'flex',\n  //       alignItems: 'center',\n  //       justifyContent: 'center',\n  //       cursor: 'pointer',\n  //       left: newValue.position.x + '%',\n  //       top: newValue.position.y + '%',\n  //       color: newValue.font.color,\n  //       fontSize: newValue.font.size + 'px',\n  //       background: newValue.bgColor,\n  //       padding: newValue.padding + 'px',\n  //       display: newValue.visible ? 'block' : 'none',\n  //       width: newValue.size.width + 'px',\n  //       height: newValue.size.height + 'px',\n  //       opacity: newValue.opacity,\n  //       borderRadius: newValue.border.radius + '%',\n  //       border: newValue.border.size + 'px solid' + newValue.border.color,\n  //     };\n\n  //     div.textContent = newValue.content;\n  //   });\n\n  //   setNewData((prevData) => [\n  //     ...prevData,\n  //     {\n  //       content: fontContent,\n  //       id: fontID,\n  //       type: 'font',\n  //       style: updateStyle,\n  //     },\n  //   ]);\n  // };\n\n  const addFontElement = (fontID = '', fontContent = '') => {\n    const menuConfig = sheet.object(fontID, {\n      ...initialProperties.FONT,\n      title: types.string(''),\n      content: types.string(fontContent),\n    });\n\n    const div = document.createElement('div');\n\n    div.id = fontID;\n    div.textContent = fontContent;\n    div.onclick = () => studio.setSelection([menuConfig]);\n    div.style.cssText = `\n      position: absolute;\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n    `;\n\n    const container = document.getElementById('theatre-stage');\n    if (container) {\n      container.appendChild(div);\n    }\n\n    let updateStyle = {\n      position: 'absolute',\n      zIndex: '1000',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      cursor: 'pointer',\n    };\n\n    const styleProperties = [\n      'left',\n      'top',\n      'background',\n      'color',\n      'opacity',\n      'padding',\n      'display',\n      'width',\n      'height',\n      'fontSize',\n      'borderRadius',\n      'border',\n    ];\n\n    menuConfig.onValuesChange((newValue) => {\n      styleProperties.forEach((property) => {\n        div.style[property] = newValue[property];\n        updateStyle[property] = newValue[property];\n      });\n\n      div.textContent = newValue.content;\n    });\n\n    setNewData((prevData) => [\n      ...prevData,\n      {\n        content: fontContent,\n        id: fontID,\n        type: 'font',\n        style: updateStyle,\n      },\n    ]);\n  };\n\n  return (\n    <Wrapper>\n      <Form>\n        <h2>新增 Font 元件 </h2>\n\n        <span>物件 ID (勿與之前的重複)： </span>\n        <input\n          placeholder='中/英/數字皆可'\n          value={fontID}\n          onChange={(e) => setFontID(e.target.value)}\n        />\n\n        <textarea\n          placeholder='文字內容'\n          value={fontContent}\n          onChange={(e) => setFontContent(e.target.value)}\n        />\n\n        <button\n          onClick={() => {\n            setShowFontLightBox(false);\n            addFontElement(fontID, fontContent);\n          }}\n        >\n          確定\n        </button>\n\n        <button\n          onClick={() => {\n            setShowFontLightBox(false);\n          }}\n        >\n          取消\n        </button>\n      </Form>\n    </Wrapper>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,iBAAiB,QAAQ,iBAAiB;AACnD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,GAAGN,MAAM,CAACO,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAXIF,OAAO;AAab,MAAMG,IAAI,GAAGT,MAAM,CAACO,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GA5BID,IAAI;AA8BV,eAAe,SAASE,YAAYA,CAAAC,IAAA,EAIjC;EAAAC,EAAA;EAAA,IAJkC;IACnCC,mBAAmB;IACnBC,UAAU;IACVC;EACF,CAAC,GAAAJ,IAAA;EACC,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMsB,cAAc,GAAG,SAAAA,CAAA,EAAmC;IAAA,IAAlCF,MAAM,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA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"},"metadata":{},"sourceType":"module"}