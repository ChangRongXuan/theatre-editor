{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/stage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport FontElement from './elements/font';\nimport ImageElement from './elements/image';\nimport BackgroundElement from './elements/background';\nimport Dimmer from './dimmer-with-message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  margin: auto;\n`;\n_c = Wrapper;\nexport default function Stage(_ref) {\n  _s();\n  let {\n    objData,\n    sheet,\n    stageWidth,\n    draggable\n  } = _ref;\n  const [loadedImages, setLoadedImages] = useState(0);\n  const [loadedError, setLoadedError] = useState(0);\n  const [showDimmer, setShowDimmer] = useState(true);\n  const totalImages = objData.filter(data => data.type === 'IMAGE' || data.type === 'BACKGROUND').length;\n  const handleImageLoad = () => {\n    setLoadedImages(prev => prev + 1);\n  };\n  useEffect(() => {\n    if (loadedImages === totalImages) {\n      setShowDimmer(false);\n    }\n  }, [loadedImages, totalImages]);\n  let loadingJsx = null;\n  if (showDimmer) {\n    loadingJsx = /*#__PURE__*/_jsxDEV(Dimmer, {\n      show: showDimmer,\n      message: \"\\u8F09\\u5165\\u4E2D\",\n      shining: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }, this);\n  }\n  // ----------------------------------------\n\n  const fontElements = objData.filter(data => data.type === 'FONT').map(data => {\n    return /*#__PURE__*/_jsxDEV(FontElement, {\n      id: data.id,\n      sheet: sheet,\n      stageWidth: stageWidth,\n      draggable: draggable\n    }, 'font' + data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  });\n  const imageElements = objData.filter(data => data.type === 'IMAGE').map(data => {\n    return /*#__PURE__*/_jsxDEV(ImageElement, {\n      id: data.id,\n      sheet: sheet,\n      stageWidth: stageWidth,\n      draggable: draggable,\n      onLoad: handleImageLoad\n    }, 'image' + data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  });\n  const bgElements = objData.filter(data => data.type === 'BACKGROUND').map(data => {\n    return /*#__PURE__*/_jsxDEV(BackgroundElement, {\n      id: data.id,\n      sheet: sheet,\n      stageWidth: stageWidth,\n      draggable: draggable,\n      onLoad: handleImageLoad\n    }, 'background' + data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  });\n\n  // 我需要讓 showDimmer = true 時，不可以捲動\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loadingJsx, /*#__PURE__*/_jsxDEV(Wrapper, {\n      id: \"theatre-stage\",\n      children: [fontElements, imageElements, bgElements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Stage, \"hblM330vYI76Jgbhtug5ZY8Vmqw=\");\n_c2 = Stage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Stage\");","map":{"version":3,"names":["React","useState","useEffect","styled","keyframes","FontElement","ImageElement","BackgroundElement","Dimmer","jsxDEV","_jsxDEV","Fragment","_Fragment","Wrapper","div","_c","Stage","_ref","_s","objData","sheet","stageWidth","draggable","loadedImages","setLoadedImages","loadedError","setLoadedError","showDimmer","setShowDimmer","totalImages","filter","data","type","length","handleImageLoad","prev","loadingJsx","show","message","shining","fileName","_jsxFileName","lineNumber","columnNumber","fontElements","map","id","imageElements","onLoad","bgElements","children","_c2","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/stage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport FontElement from './elements/font';\nimport ImageElement from './elements/image';\nimport BackgroundElement from './elements/background';\nimport Dimmer from './dimmer-with-message';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  margin: auto;\n`;\n\nexport default function Stage({ objData, sheet, stageWidth, draggable }) {\n  const [loadedImages, setLoadedImages] = useState(0);\n  const [loadedError, setLoadedError] = useState(0);\n  const [showDimmer, setShowDimmer] = useState(true);\n\n  const totalImages = objData.filter(\n    (data) => data.type === 'IMAGE' || data.type === 'BACKGROUND'\n  ).length;\n\n  const handleImageLoad = () => {\n    setLoadedImages((prev) => prev + 1);\n  };\n\n  useEffect(() => {\n    if (loadedImages === totalImages) {\n      setShowDimmer(false);\n    }\n  }, [loadedImages, totalImages]);\n\n  let loadingJsx = null;\n\n  if (showDimmer) {\n    loadingJsx = <Dimmer show={showDimmer} message='載入中' shining={true} />;\n  }\n  // ----------------------------------------\n\n  const fontElements = objData\n    .filter((data) => data.type === 'FONT')\n    .map((data) => {\n      return (\n        <FontElement\n          key={'font' + data.id}\n          id={data.id}\n          sheet={sheet}\n          stageWidth={stageWidth}\n          draggable={draggable}\n        />\n      );\n    });\n\n  const imageElements = objData\n    .filter((data) => data.type === 'IMAGE')\n    .map((data) => {\n      return (\n        <ImageElement\n          key={'image' + data.id}\n          id={data.id}\n          sheet={sheet}\n          stageWidth={stageWidth}\n          draggable={draggable}\n          onLoad={handleImageLoad}\n        />\n      );\n    });\n\n  const bgElements = objData\n    .filter((data) => data.type === 'BACKGROUND')\n    .map((data) => {\n      return (\n        <BackgroundElement\n          key={'background' + data.id}\n          id={data.id}\n          sheet={sheet}\n          stageWidth={stageWidth}\n          draggable={draggable}\n          onLoad={handleImageLoad}\n        />\n      );\n    });\n\n  // 我需要讓 showDimmer = true 時，不可以捲動\n  return (\n    <>\n      {loadingJsx}\n      <Wrapper id='theatre-stage'>\n        {fontElements}\n        {imageElements}\n        {bgElements}\n      </Wrapper>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}