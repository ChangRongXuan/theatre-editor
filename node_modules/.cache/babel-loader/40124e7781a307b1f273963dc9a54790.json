{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/stage.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport FontElement from './elements/font';\nimport ImageElement from './elements/image';\nimport BackgroundElement from './elements/background';\nimport Dimmer from './dimmer-with-message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  margin: auto;\n`;\n_c = Wrapper;\nexport default function Stage(_ref) {\n  let {\n    objData,\n    sheet,\n    stageWidth,\n    draggable\n  } = _ref;\n  // const [loadedImages, setLoadedImages] = useState(0);\n  // const [isLoading, setIsLoading] = useState(true);\n  // const [hasImgError, setHasImgError] = useState(false);\n\n  // const totalImages = objData.filter(\n  //   (data) => data.type === 'IMAGE' || data.type === 'BACKGROUND'\n  // ).length;\n\n  // useEffect(() => {\n  //   if (loadedImages === totalImages) {\n  //     setIsLoading(false);\n  //   }\n  // }, [loadedImages, totalImages]);\n\n  // ----------------------------------------\n\n  const fontElements = objData.filter(data => data.type === 'FONT').map(data => {\n    return /*#__PURE__*/_jsxDEV(FontElement, {\n      id: data.id,\n      sheet: sheet,\n      stageWidth: stageWidth,\n      draggable: draggable\n    }, 'font' + data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  });\n  const imageElements = objData.filter(data => data.type === 'IMAGE').map(data => {\n    return /*#__PURE__*/_jsxDEV(ImageElement, {\n      id: data.id,\n      sheet: sheet,\n      stageWidth: stageWidth,\n      draggable: draggable,\n      onLoad: () => setLoadedImages(prev => prev + 1),\n      onError: () => setHasImgError(true)\n    }, 'image' + data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n  });\n  const bgElements = objData.filter(data => data.type === 'BACKGROUND').map(data => {\n    return /*#__PURE__*/_jsxDEV(BackgroundElement, {\n      id: data.id,\n      sheet: sheet,\n      stageWidth: stageWidth,\n      draggable: draggable,\n      onLoad: () => setLoadedImages(prev => prev + 1),\n      onError: () => setHasImgError(true)\n    }, 'background' + data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: \"theatre-stage\",\n    children: [fontElements, imageElements, bgElements]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Stage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Stage\");","map":{"version":3,"names":["React","useState","useEffect","styled","keyframes","FontElement","ImageElement","BackgroundElement","Dimmer","jsxDEV","_jsxDEV","Wrapper","div","_c","Stage","_ref","objData","sheet","stageWidth","draggable","fontElements","filter","data","type","map","id","fileName","_jsxFileName","lineNumber","columnNumber","imageElements","onLoad","setLoadedImages","prev","onError","setHasImgError","bgElements","children","_c2","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/stage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport FontElement from './elements/font';\nimport ImageElement from './elements/image';\nimport BackgroundElement from './elements/background';\nimport Dimmer from './dimmer-with-message';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n  margin: auto;\n`;\n\nexport default function Stage({ objData, sheet, stageWidth, draggable }) {\n  // const [loadedImages, setLoadedImages] = useState(0);\n  // const [isLoading, setIsLoading] = useState(true);\n  // const [hasImgError, setHasImgError] = useState(false);\n\n  // const totalImages = objData.filter(\n  //   (data) => data.type === 'IMAGE' || data.type === 'BACKGROUND'\n  // ).length;\n\n  // useEffect(() => {\n  //   if (loadedImages === totalImages) {\n  //     setIsLoading(false);\n  //   }\n  // }, [loadedImages, totalImages]);\n\n  // ----------------------------------------\n\n  const fontElements = objData\n    .filter((data) => data.type === 'FONT')\n    .map((data) => {\n      return (\n        <FontElement\n          key={'font' + data.id}\n          id={data.id}\n          sheet={sheet}\n          stageWidth={stageWidth}\n          draggable={draggable}\n        />\n      );\n    });\n\n  const imageElements = objData\n    .filter((data) => data.type === 'IMAGE')\n    .map((data) => {\n      return (\n        <ImageElement\n          key={'image' + data.id}\n          id={data.id}\n          sheet={sheet}\n          stageWidth={stageWidth}\n          draggable={draggable}\n          onLoad={() => setLoadedImages((prev) => prev + 1)}\n          onError={() => setHasImgError(true)}\n        />\n      );\n    });\n\n  const bgElements = objData\n    .filter((data) => data.type === 'BACKGROUND')\n    .map((data) => {\n      return (\n        <BackgroundElement\n          key={'background' + data.id}\n          id={data.id}\n          sheet={sheet}\n          stageWidth={stageWidth}\n          draggable={draggable}\n          onLoad={() => setLoadedImages((prev) => prev + 1)}\n          onError={() => setHasImgError(true)}\n        />\n      );\n    });\n\n  return (\n    <Wrapper id='theatre-stage'>\n      {fontElements}\n      {imageElements}\n      {bgElements}\n    </Wrapper>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}