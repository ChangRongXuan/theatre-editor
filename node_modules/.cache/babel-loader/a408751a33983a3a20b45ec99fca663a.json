{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/page/playground.js\",\n  _s = $RefreshSig$();\nimport studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport EmbeddedCode from './embedded';\nimport styled from 'styled-components';\nimport EmbeddedBox from '../components/elements/embedded-box';\nimport FontBox from '../components/elements/font-box';\nimport ReactDOM from 'react-dom';\nimport Font from '../components/elements/font';\nimport projectState from '../json/state.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BasicWrapper = styled.div`\n  position: fixed;\n  padding: 30px;\n  bottom: 0;\n  left: 0;\n  background: pink;\n`;\nconst AddWrapper = styled.div`\n  position: fixed;\n  padding: 30px;\n  bottom: 0;\n  left: 250px;\n  background: #c1dafe;\n`;\nconst AddButton = styled.div`\n  padding: 5px;\n  background: white;\n  color: black;\n  cursor: pointer;\n  font-size: 14px;\n  margin: 10px auto;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst Play = styled.div`\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: white;\n  margin: 10px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst Container = styled.div`\n  min-width: 100%;\n  position: relative;\n  outline: 5px solid red;\n  z-index: -1;\n`;\n_c = Container;\nconst Save = styled.button`\n  padding: 5px;\n  margin: 10px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst BasicBox = styled.div`\n  position: absolute;\n  width: 300px;\n  height: 20px;\n  background: white;\n  outline: 3px solid black;\n  z-index: 10000;\n  padding: 20px;\n`;\n\n//重新整理後，必帶最近一次舊資料\n//抓資料：先從 CMS 調用，沒資料再看 local-storage 有沒有資料\n//存資料：CMS 跟 local-storage 都存\n_c2 = BasicBox;\nexport default function PlayPage() {\n  _s();\n  studio.initialize();\n  const config = {}; // the config can be empty when starting a new project\n  const project = getProject('deepfake demo', {\n    state: projectState\n  });\n  const sheet = project.sheet('Scene', 'default');\n  studio.ui.hide();\n  project.ready.then(() => sheet.sequence.play({\n    iterationCount: Infinity\n  }));\n  const [boxes, setBoxes] = useState([]); //紀錄新增的資料\n  const [preData, setPreData] = useState([]); //上一筆舊資料，要與 local-storage 一致\n\n  //從 local-storage 取得舊資料\n  useEffect(() => {\n    const storedBoxes = localStorage.getItem('theatre-data');\n    if (storedBoxes) {\n      setPreData(JSON.parse(storedBoxes));\n    }\n  }, []);\n  console.log('boxes', boxes);\n  console.log('preData', preData);\n\n  //render 出既有的元件\n  useEffect(() => {\n    preData.filter(item => item.type === 'box').forEach(item => {\n      const box = sheet.object(item.id, {\n        position: {\n          x: 0,\n          y: 0\n        },\n        bgColor: types.string('#ffffff')\n      });\n      const element = document.getElementById(item.id);\n      console.log('element', element);\n      box.onValuesChange(newValue => {\n        element.style.left = newValue.position.x + 'px';\n        element.style.top = newValue.position.y + 'px';\n        element.style.backgroundColor = newValue.bgColor;\n      });\n    });\n  });\n  const addBox = function () {\n    let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let content = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    //新增一個控制項\n    const box = sheet.object(`${name}`, {\n      position: {\n        x: 0,\n        y: 0\n      },\n      bgColor: types.string('#ffffff')\n    });\n    const div = document.createElement('div');\n    div.style.cssText = `\n    position: absolute;\n    width: 300px;\n    height: 20px;\n    background: white;\n    outline: 3px solid black;\n    z-index: 10000;\n    padding: 20px;\n  `;\n    div.textContent = `${content}`;\n    div.id = `${name}`;\n    const container = document.getElementById('item-container');\n    if (container) {\n      container.appendChild(div);\n    }\n    let style = {};\n    box.onValuesChange(newValue => {\n      div.style.left = newValue.position.x + 'px';\n      div.style.top = newValue.position.y + 'px';\n      div.style.fontSize = newValue.size;\n      div.style.color = newValue.color;\n    });\n    setBoxes(prevBoxes => [...prevBoxes, {\n      content,\n      element: div,\n      id: name,\n      type: 'box',\n      style: style\n    }]);\n  };\n\n  // const addFont = (name = '', content = '') => {\n  //   const box = sheet.object(`${name}`, {\n  //     position: {\n  //       x: 0,\n  //       y: 0,\n  //     },\n  //     size: types.string('50px'),\n  //     color: types.string('#000000'),\n  //   });\n\n  //   // const div = document.createElement('div');\n\n  //   // div.style.cssText = `\n  //   //   font-size: 50px;\n  //   //   position: absolute;\n  //   //   color: black;\n  //   //   z-index: 10000000;\n  //   // `;\n\n  //   div.textContent = `${content}`;\n\n  //   document.body.appendChild(div);\n\n  //   box.onValuesChange((newValue) => {\n  //     div.style.left = newValue.position.x + 'px';\n  //     div.style.top = newValue.position.y + 'px';\n  //     div.style.fontSize = newValue.size;\n  //     div.style.color = newValue.color;\n  //   });\n  // };\n\n  // const addEmbedded = (embed, setEmbed) => {\n  //   const embedded = sheet.object('embedded', {\n  //     position: {\n  //       x: 0,\n  //       y: 0,\n  //     },\n\n  //     scale: types.number(1, {\n  //       range: [0, 5],\n  //       nudgeMultiplier: 0.1,\n  //     }),\n  //   });\n\n  //   const div = document.createElement('div');\n\n  //   div.style.cssText = `\n  //     position: absolute;\n  //     width: 100%;\n  //     height: 100vh;\n  //     background: white;\n  //     transition: transform 0.3s ease;\n  //     transform-origin: top left;\n  //   `;\n\n  //   document.body.appendChild(div);\n\n  //   embedded.onValuesChange((newValue) => {\n  //     div.style.left = newValue.position.x + 'px';\n  //     div.style.top = newValue.position.y + 'px';\n  //     div.style.transform = `scale(${newValue.scale})`;\n  //   });\n\n  //   ReactDOM.render(<EmbeddedCode embed={embed} setEmbed={setEmbed} />, div);\n  // };\n\n  const [showEmBox, setShowEmBox] = useState(false);\n  const [showFontBox, setShowFontBox] = useState(false);\n  const [showFont, setShowFont] = useState(false);\n  const [embed, setEmbed] = useState('');\n  const [font, setFont] = useState('');\n  const [pureFont, setPureFont] = useState('');\n  const [boxName, setBoxName] = useState('box');\n  const [pureFontName, setPureFontName] = useState('font');\n\n  //這邊處理轉換 embedded-code\n  // const embedCodeWebpackAssets = embedCodeGen.loadWebpackAssets(); //取得靜態資料\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showEmBox && /*#__PURE__*/_jsxDEV(EmbeddedBox, {\n      setShowEmBox: setShowEmBox,\n      setEmbed: setEmbed,\n      embed: embed,\n      addEmbedded: addEmbedded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this), showFontBox && /*#__PURE__*/_jsxDEV(FontBox, {\n      setShowFontBox: setShowFontBox,\n      setFont: setFont,\n      font: font,\n      setBoxName: setBoxName,\n      boxName: boxName,\n      addBox: addBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this), showFont && /*#__PURE__*/_jsxDEV(Font, {\n      setShowFont: setShowFont,\n      setPureFont: setPureFont,\n      pureFont: pureFont,\n      setPureFontName: setPureFontName,\n      pureFontName: pureFontName,\n      addFont: addFont\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      id: \"item-container\",\n      children: preData.map((box, index) => /*#__PURE__*/_jsxDEV(BasicBox, {\n        id: box.id,\n        style: box.style,\n        children: box.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PlayPage, \"h0A6Hu6Xn6vjBkdoeGjBY1jZ7ZQ=\");\n_c3 = PlayPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"BasicBox\");\n$RefreshReg$(_c3, \"PlayPage\");","map":{"version":3,"names":["studio","getProject","types","useState","useEffect","EmbeddedCode","styled","EmbeddedBox","FontBox","ReactDOM","Font","projectState","jsxDEV","_jsxDEV","Fragment","_Fragment","BasicWrapper","div","AddWrapper","AddButton","Play","Container","_c","Save","button","BasicBox","_c2","PlayPage","_s","initialize","config","project","state","sheet","ui","hide","ready","then","sequence","play","iterationCount","Infinity","boxes","setBoxes","preData","setPreData","storedBoxes","localStorage","getItem","JSON","parse","console","log","filter","item","type","forEach","box","object","id","position","x","y","bgColor","string","element","document","getElementById","onValuesChange","newValue","style","left","top","backgroundColor","addBox","name","arguments","length","undefined","content","createElement","cssText","textContent","container","appendChild","fontSize","size","color","prevBoxes","showEmBox","setShowEmBox","showFontBox","setShowFontBox","showFont","setShowFont","embed","setEmbed","font","setFont","pureFont","setPureFont","boxName","setBoxName","pureFontName","setPureFontName","children","addEmbedded","fileName","_jsxFileName","lineNumber","columnNumber","addFont","map","index","_c3","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/page/playground.js"],"sourcesContent":["import studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport EmbeddedCode from './embedded';\nimport styled from 'styled-components';\nimport EmbeddedBox from '../components/elements/embedded-box';\nimport FontBox from '../components/elements/font-box';\nimport ReactDOM from 'react-dom';\nimport Font from '../components/elements/font';\nimport projectState from '../json/state.json';\n\nconst BasicWrapper = styled.div`\n  position: fixed;\n  padding: 30px;\n  bottom: 0;\n  left: 0;\n  background: pink;\n`;\n\nconst AddWrapper = styled.div`\n  position: fixed;\n  padding: 30px;\n  bottom: 0;\n  left: 250px;\n  background: #c1dafe;\n`;\n\nconst AddButton = styled.div`\n  padding: 5px;\n  background: white;\n  color: black;\n  cursor: pointer;\n  font-size: 14px;\n  margin: 10px auto;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst Play = styled.div`\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: white;\n  margin: 10px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst Container = styled.div`\n  min-width: 100%;\n  position: relative;\n  outline: 5px solid red;\n  z-index: -1;\n`;\n\nconst Save = styled.button`\n  padding: 5px;\n  margin: 10px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst BasicBox = styled.div`\n  position: absolute;\n  width: 300px;\n  height: 20px;\n  background: white;\n  outline: 3px solid black;\n  z-index: 10000;\n  padding: 20px;\n`;\n\n//重新整理後，必帶最近一次舊資料\n//抓資料：先從 CMS 調用，沒資料再看 local-storage 有沒有資料\n//存資料：CMS 跟 local-storage 都存\n\nexport default function PlayPage() {\n  studio.initialize();\n  const config = {}; // the config can be empty when starting a new project\n  const project = getProject('deepfake demo', { state: projectState });\n  const sheet = project.sheet('Scene', 'default');\n\n  studio.ui.hide();\n\n  project.ready.then(() =>\n    sheet.sequence.play({\n      iterationCount: Infinity,\n    })\n  );\n\n  const [boxes, setBoxes] = useState([]); //紀錄新增的資料\n  const [preData, setPreData] = useState([]); //上一筆舊資料，要與 local-storage 一致\n\n  //從 local-storage 取得舊資料\n  useEffect(() => {\n    const storedBoxes = localStorage.getItem('theatre-data');\n    if (storedBoxes) {\n      setPreData(JSON.parse(storedBoxes));\n    }\n  }, []);\n\n  console.log('boxes', boxes);\n  console.log('preData', preData);\n\n  //render 出既有的元件\n  useEffect(() => {\n    preData\n      .filter((item) => item.type === 'box')\n      .forEach((item) => {\n        const box = sheet.object(item.id, {\n          position: {\n            x: 0,\n            y: 0,\n          },\n          bgColor: types.string('#ffffff'),\n        });\n\n        const element = document.getElementById(item.id);\n\n        console.log('element', element);\n\n        box.onValuesChange((newValue) => {\n          element.style.left = newValue.position.x + 'px';\n          element.style.top = newValue.position.y + 'px';\n          element.style.backgroundColor = newValue.bgColor;\n        });\n      });\n  });\n\n  const addBox = (name = '', content = '') => {\n    //新增一個控制項\n    const box = sheet.object(`${name}`, {\n      position: {\n        x: 0,\n        y: 0,\n      },\n      bgColor: types.string('#ffffff'),\n    });\n\n    const div = document.createElement('div');\n\n    div.style.cssText = `\n    position: absolute;\n    width: 300px;\n    height: 20px;\n    background: white;\n    outline: 3px solid black;\n    z-index: 10000;\n    padding: 20px;\n  `;\n\n    div.textContent = `${content}`;\n    div.id = `${name}`;\n\n    const container = document.getElementById('item-container');\n\n    if (container) {\n      container.appendChild(div);\n    }\n\n    let style = {};\n\n    box.onValuesChange((newValue) => {\n      div.style.left = newValue.position.x + 'px';\n      div.style.top = newValue.position.y + 'px';\n      div.style.fontSize = newValue.size;\n      div.style.color = newValue.color;\n    });\n\n    setBoxes((prevBoxes) => [\n      ...prevBoxes,\n      { content, element: div, id: name, type: 'box', style: style },\n    ]);\n  };\n\n  // const addFont = (name = '', content = '') => {\n  //   const box = sheet.object(`${name}`, {\n  //     position: {\n  //       x: 0,\n  //       y: 0,\n  //     },\n  //     size: types.string('50px'),\n  //     color: types.string('#000000'),\n  //   });\n\n  //   // const div = document.createElement('div');\n\n  //   // div.style.cssText = `\n  //   //   font-size: 50px;\n  //   //   position: absolute;\n  //   //   color: black;\n  //   //   z-index: 10000000;\n  //   // `;\n\n  //   div.textContent = `${content}`;\n\n  //   document.body.appendChild(div);\n\n  //   box.onValuesChange((newValue) => {\n  //     div.style.left = newValue.position.x + 'px';\n  //     div.style.top = newValue.position.y + 'px';\n  //     div.style.fontSize = newValue.size;\n  //     div.style.color = newValue.color;\n  //   });\n  // };\n\n  // const addEmbedded = (embed, setEmbed) => {\n  //   const embedded = sheet.object('embedded', {\n  //     position: {\n  //       x: 0,\n  //       y: 0,\n  //     },\n\n  //     scale: types.number(1, {\n  //       range: [0, 5],\n  //       nudgeMultiplier: 0.1,\n  //     }),\n  //   });\n\n  //   const div = document.createElement('div');\n\n  //   div.style.cssText = `\n  //     position: absolute;\n  //     width: 100%;\n  //     height: 100vh;\n  //     background: white;\n  //     transition: transform 0.3s ease;\n  //     transform-origin: top left;\n  //   `;\n\n  //   document.body.appendChild(div);\n\n  //   embedded.onValuesChange((newValue) => {\n  //     div.style.left = newValue.position.x + 'px';\n  //     div.style.top = newValue.position.y + 'px';\n  //     div.style.transform = `scale(${newValue.scale})`;\n  //   });\n\n  //   ReactDOM.render(<EmbeddedCode embed={embed} setEmbed={setEmbed} />, div);\n  // };\n\n  const [showEmBox, setShowEmBox] = useState(false);\n  const [showFontBox, setShowFontBox] = useState(false);\n  const [showFont, setShowFont] = useState(false);\n  const [embed, setEmbed] = useState('');\n  const [font, setFont] = useState('');\n  const [pureFont, setPureFont] = useState('');\n  const [boxName, setBoxName] = useState('box');\n  const [pureFontName, setPureFontName] = useState('font');\n\n  //這邊處理轉換 embedded-code\n  // const embedCodeWebpackAssets = embedCodeGen.loadWebpackAssets(); //取得靜態資料\n\n  return (\n    <>\n      {showEmBox && (\n        <EmbeddedBox\n          setShowEmBox={setShowEmBox}\n          setEmbed={setEmbed}\n          embed={embed}\n          addEmbedded={addEmbedded}\n        />\n      )}\n\n      {showFontBox && (\n        <FontBox\n          setShowFontBox={setShowFontBox}\n          setFont={setFont}\n          font={font}\n          setBoxName={setBoxName}\n          boxName={boxName}\n          addBox={addBox}\n        />\n      )}\n\n      {showFont && (\n        <Font\n          setShowFont={setShowFont}\n          setPureFont={setPureFont}\n          pureFont={pureFont}\n          setPureFontName={setPureFontName}\n          pureFontName={pureFontName}\n          addFont={addFont}\n        />\n      )}\n\n      {/* <BasicWrapper>\n        <Save\n          onClick={() => {\n            console.log('有存進 local-storage ');\n            const mergedData = [...preData, ...boxes]; // 合并 preData 和 boxes 数组\n            localStorage.setItem('theatre-data', JSON.stringify(mergedData));\n          }}\n        >\n          儲存\n        </Save>\n        <Save\n          onClick={() => {\n            console.log(`清空 theatre-data 的 local storage`);\n            localStorage.removeItem('theatre-data');\n          }}\n        >\n          清空紀錄\n        </Save>\n        <Play\n          onClick={() => {\n            sheet.sequence.play({\n              iterationCount: Infinity,\n            });\n          }}\n        >\n          播放動畫\n        </Play>\n        <Play\n          onClick={() => {\n            sheet.sequence.pause();\n          }}\n        >\n          暫停\n        </Play>\n\n        <Play\n          onClick={() => {\n            studio.ui.hide();\n          }}\n        >\n          隱藏介面\n        </Play>\n        <Play\n          onClick={() => {\n            studio.ui.restore();\n          }}\n        >\n          開啟介面\n        </Play>\n      </BasicWrapper> */}\n\n      {/* <AddWrapper>\n        <AddButton\n          className='add-embedded-box'\n          onClick={() => {\n            setShowEmBox(true);\n          }}\n        >\n          新增專案（project）\n        </AddButton>\n\n        <AddButton\n          className='add-embedded-box'\n          onClick={() => {\n            setShowEmBox(true);\n          }}\n        >\n          新增場景（Scene）\n        </AddButton>\n\n        <AddButton\n          className='add-embedded-box'\n          onClick={() => {\n            setShowEmBox(true);\n          }}\n        >\n          新增embedded\n        </AddButton>\n        <AddButton\n          className='add-font-box'\n          onClick={() => {\n            setShowFontBox(true);\n          }}\n        >\n          新增文字框\n        </AddButton>\n        <AddButton\n          className='add-font'\n          onClick={() => {\n            setShowFont(true);\n          }}\n        >\n          新增文字標題\n        </AddButton>\n\n        <AddButton className='delete-element'>刪除元件</AddButton>\n      </AddWrapper> */}\n\n      {/* 只 render local-storage 的舊資料 */}\n      <Container id='item-container'>\n        {preData.map((box, index) => (\n          <BasicBox key={index} id={box.id} style={box.style}>\n            {box.content}\n          </BasicBox>\n        ))}\n      </Container>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}