{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.atomicBlockRenderer = atomicBlockRenderer;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _embeddedCode = require(\"./embedded-code\");\nvar _image = require(\"./image\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// eslint-disable-line\nconst AtomicBlock = props => {\n  const entity = props.contentState.getEntity(props.block.getEntityAt(0));\n  const entityType = entity.getType();\n  switch (entityType) {\n    case 'image':\n      {\n        return (0, _image.ImageBlock)(entity);\n      }\n    case 'EMBEDDEDCODE':\n      {\n        return (0, _embeddedCode.EmbeddedCodeBlock)(entity);\n      }\n  }\n  return null;\n};\nfunction atomicBlockRenderer(block) {\n  if (block.getType() === 'atomic') {\n    return {\n      component: AtomicBlock,\n      editable: false\n    };\n  }\n  return null;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","atomicBlockRenderer","_react","_interopRequireDefault","require","_embeddedCode","_image","obj","__esModule","default","AtomicBlock","props","entity","contentState","getEntity","block","getEntityAt","entityType","getType","ImageBlock","EmbeddedCodeBlock","component","editable"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/node_modules/@readr-media/react-qa-list/lib/react-components/draft/block-redender-fn.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.atomicBlockRenderer = atomicBlockRenderer;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _embeddedCode = require(\"./embedded-code\");\n\nvar _image = require(\"./image\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eslint-disable-line\nconst AtomicBlock = props => {\n  const entity = props.contentState.getEntity(props.block.getEntityAt(0));\n  const entityType = entity.getType();\n\n  switch (entityType) {\n    case 'image':\n      {\n        return (0, _image.ImageBlock)(entity);\n      }\n\n    case 'EMBEDDEDCODE':\n      {\n        return (0, _embeddedCode.EmbeddedCodeBlock)(entity);\n      }\n  }\n\n  return null;\n};\n\nfunction atomicBlockRenderer(block) {\n  if (block.getType() === 'atomic') {\n    return {\n      component: AtomicBlock,\n      editable: false\n    };\n  }\n\n  return null;\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB;AAEjD,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;AAErD,IAAIC,aAAa,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAE9C,IAAIE,MAAM,GAAGF,OAAO,CAAC,SAAS,CAAC;AAE/B,SAASD,sBAAsBA,CAACI,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEE,OAAO,EAAEF;EAAI,CAAC;AAAE;;AAE9F;AACA,MAAMG,WAAW,GAAGC,KAAK,IAAI;EAC3B,MAAMC,MAAM,GAAGD,KAAK,CAACE,YAAY,CAACC,SAAS,CAACH,KAAK,CAACI,KAAK,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;EACvE,MAAMC,UAAU,GAAGL,MAAM,CAACM,OAAO,CAAC,CAAC;EAEnC,QAAQD,UAAU;IAChB,KAAK,OAAO;MACV;QACE,OAAO,CAAC,CAAC,EAAEX,MAAM,CAACa,UAAU,EAAEP,MAAM,CAAC;MACvC;IAEF,KAAK,cAAc;MACjB;QACE,OAAO,CAAC,CAAC,EAAEP,aAAa,CAACe,iBAAiB,EAAER,MAAM,CAAC;MACrD;EACJ;EAEA,OAAO,IAAI;AACb,CAAC;AAED,SAASX,mBAAmBA,CAACc,KAAK,EAAE;EAClC,IAAIA,KAAK,CAACG,OAAO,CAAC,CAAC,KAAK,QAAQ,EAAE;IAChC,OAAO;MACLG,SAAS,EAAEX,WAAW;MACtBY,QAAQ,EAAE;IACZ,CAAC;EACH;EAEA,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"script"}