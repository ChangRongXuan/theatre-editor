{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/lightbox/add-font.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { initialConfig } from '../../constants';\nimport studio from '@theatre/studio';\nimport { types } from '@theatre/core';\nimport { defaultFontStyle } from '../shared-style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: black;\n  opacity: 1;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 200;\n`;\n_c = Wrapper;\nconst Form = styled.div`\n  width: 30%;\n  height: 50%;\n  background: white;\n  border: 10px;\n  padding: 20px;\n  outline: 3px solid black;\n  margin: 70px auto;\n\n  input {\n    width: 30%;\n    margin-bottom: 20px;\n  }\n\n  textarea {\n    width: 90%;\n    height: 200px;\n  }\n\n  button {\n    padding: 5px;\n    background: black;\n    color: white;\n    outline: none;\n    cursor: pointer;\n    margin-top: 10px;\n    margin-right: 10px;\n  }\n`;\n_c2 = Form;\nexport default function FontLightBox(_ref) {\n  _s();\n  let {\n    setShowFontLightBox,\n    sheet,\n    setStoredData\n  } = _ref;\n  const [fontContent, setFontContent] = useState('');\n  const [fontID, setFontID] = useState('');\n\n  // 改為只新增預設值元件？內容都後後面再調？？\n  const addFontElement = function () {\n    let fontID = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let fontContent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    // const object = sheet.object(`${fontID}`, {\n    //   ...initialConfig.FONT,\n    //   content: types.string(`${fontContent}`),\n    // });\n\n    // 只修改元件資料\n\n    // const element = document.createElement('div');\n\n    // element.id = `${fontID}`;\n    // element.textContent = `${fontContent}`;\n    // element.onclick = () => {\n    //   studio.setSelection([object]);\n    // };\n    // element.style.cssText = `\n    //   position: absolute;\n    //   display: flex;\n    //   align-items: center;\n    //   justify-content: center'\n    //   word-wrap: break-word;\n    //   transform-origin: center;\n    // `;\n\n    // // element.style.cssText = defaultFontStyle;\n\n    // const container = document.getElementById('theatre-stage');\n    // if (container) {\n    //   container.appendChild(element);\n    // }\n\n    // object.onValuesChange((newValue) => {\n    //   element.style.left = newValue.position.x + '%';\n    //   element.style.top = newValue.position.y + '%';\n    //   element.style.background = newValue.bgColor;\n    //   element.style.color = newValue.font.color;\n    //   element.style.opacity = newValue.opacity;\n    //   element.style.padding = newValue.padding + 'px';\n    //   element.style.display = newValue.visible ? 'block' : 'none';\n    //   element.style.width = newValue.size.width + 'px';\n    //   element.style.fontSize = newValue.font.size + 'px';\n    //   element.style.borderRadius = newValue.border.radius + '%';\n    //   element.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n    //   element.textContent = newValue.content;\n    //   setFontContent(newValue.content);\n\n    //   element.style.fontWeight = newValue.font.weight;\n    //   element.style.letterSpacing = newValue.font.spacing + 'px';\n    //   element.style.lineHeight = newValue.lineHeight + 'px';\n    //   element.style.textAlign = newValue.textAlign;\n    //   element.style.zIndex = newValue.zIndex;\n    //   element.style.transform = `scale(${newValue.scale})`;\n    // });\n\n    // object.onValuesChange((newValue) => {\n    //   console.log('newValue', newValue);\n    //   element.style.cssText = `\n    //     left: ${newValue.position.x}%;\n    //     top: ${newValue.position.y}%;\n    //     background: ${newValue.bgColor};\n    //     color: ${newValue.font.color};\n    //     opacity: ${newValue.opacity};\n    //     padding: ${newValue.padding}px;\n    //     display: ${newValue.visible ? 'block' : 'none'};\n    //     width: ${newValue.size.width}px;\n    //     font-size: ${newValue.font.size}px;\n    //     border-radius: ${newValue.border.radius}%;\n    //     border: ${newValue.border.size}px solid ${newValue.border.color};\n    //     font-weight: ${newValue.font.weight};\n    //     letter-spacing: ${newValue.font.spacing}px;\n    //     line-height: ${newValue.lineHeight}px;\n    //     text-align: ${newValue.textAlign};\n    //     z-index: ${newValue.zIndex};\n    //     transform: scale(${newValue.scale});\n    //   `;\n    // });\n\n    const theatreData = JSON.parse(localStorage.getItem('theatre-data')) || [];\n    const updatedElementData = [...theatreData, {\n      id: fontID,\n      content: fontContent,\n      type: 'FONT'\n    }];\n    localStorage.setItem('theatre-data', JSON.stringify(updatedElementData));\n    setStoredData(updatedElementData);\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u65B0\\u589E Font \\u5143\\u4EF6 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u7269\\u4EF6 ID (\\u52FF\\u8207\\u4E4B\\u524D\\u7684\\u91CD\\u8907)\\uFF1A \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u4E2D/\\u82F1/\\u6578\\u5B57\\u7686\\u53EF\",\n        value: fontID,\n        onChange: e => setFontID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"\\u6587\\u5B57\\u5167\\u5BB9\",\n        value: fontContent,\n        onChange: e => setFontContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowFontLightBox(false);\n          addFontElement(fontID, fontContent);\n        },\n        children: \"\\u78BA\\u5B9A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowFontLightBox(false);\n        },\n        children: \"\\u53D6\\u6D88\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(FontLightBox, \"VjwTUUI9kEThIRYLfmJWJ+Pzqnw=\");\n_c3 = FontLightBox;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"FontLightBox\");","map":{"version":3,"names":["React","useState","styled","initialConfig","studio","types","defaultFontStyle","jsxDEV","_jsxDEV","Wrapper","div","_c","Form","_c2","FontLightBox","_ref","_s","setShowFontLightBox","sheet","setStoredData","fontContent","setFontContent","fontID","setFontID","addFontElement","arguments","length","undefined","theatreData","JSON","parse","localStorage","getItem","updatedElementData","id","content","type","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","_c3","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/lightbox/add-font.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { initialConfig } from '../../constants';\nimport studio from '@theatre/studio';\nimport { types } from '@theatre/core';\nimport { defaultFontStyle } from '../shared-style';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: black;\n  opacity: 1;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 200;\n`;\n\nconst Form = styled.div`\n  width: 30%;\n  height: 50%;\n  background: white;\n  border: 10px;\n  padding: 20px;\n  outline: 3px solid black;\n  margin: 70px auto;\n\n  input {\n    width: 30%;\n    margin-bottom: 20px;\n  }\n\n  textarea {\n    width: 90%;\n    height: 200px;\n  }\n\n  button {\n    padding: 5px;\n    background: black;\n    color: white;\n    outline: none;\n    cursor: pointer;\n    margin-top: 10px;\n    margin-right: 10px;\n  }\n`;\n\nexport default function FontLightBox({\n  setShowFontLightBox,\n  sheet,\n  setStoredData,\n}) {\n  const [fontContent, setFontContent] = useState('');\n  const [fontID, setFontID] = useState('');\n\n  // 改為只新增預設值元件？內容都後後面再調？？\n  const addFontElement = (fontID = '', fontContent = '') => {\n    // const object = sheet.object(`${fontID}`, {\n    //   ...initialConfig.FONT,\n    //   content: types.string(`${fontContent}`),\n    // });\n\n    // 只修改元件資料\n\n    // const element = document.createElement('div');\n\n    // element.id = `${fontID}`;\n    // element.textContent = `${fontContent}`;\n    // element.onclick = () => {\n    //   studio.setSelection([object]);\n    // };\n    // element.style.cssText = `\n    //   position: absolute;\n    //   display: flex;\n    //   align-items: center;\n    //   justify-content: center'\n    //   word-wrap: break-word;\n    //   transform-origin: center;\n    // `;\n\n    // // element.style.cssText = defaultFontStyle;\n\n    // const container = document.getElementById('theatre-stage');\n    // if (container) {\n    //   container.appendChild(element);\n    // }\n\n    // object.onValuesChange((newValue) => {\n    //   element.style.left = newValue.position.x + '%';\n    //   element.style.top = newValue.position.y + '%';\n    //   element.style.background = newValue.bgColor;\n    //   element.style.color = newValue.font.color;\n    //   element.style.opacity = newValue.opacity;\n    //   element.style.padding = newValue.padding + 'px';\n    //   element.style.display = newValue.visible ? 'block' : 'none';\n    //   element.style.width = newValue.size.width + 'px';\n    //   element.style.fontSize = newValue.font.size + 'px';\n    //   element.style.borderRadius = newValue.border.radius + '%';\n    //   element.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n    //   element.textContent = newValue.content;\n    //   setFontContent(newValue.content);\n\n    //   element.style.fontWeight = newValue.font.weight;\n    //   element.style.letterSpacing = newValue.font.spacing + 'px';\n    //   element.style.lineHeight = newValue.lineHeight + 'px';\n    //   element.style.textAlign = newValue.textAlign;\n    //   element.style.zIndex = newValue.zIndex;\n    //   element.style.transform = `scale(${newValue.scale})`;\n    // });\n\n    // object.onValuesChange((newValue) => {\n    //   console.log('newValue', newValue);\n    //   element.style.cssText = `\n    //     left: ${newValue.position.x}%;\n    //     top: ${newValue.position.y}%;\n    //     background: ${newValue.bgColor};\n    //     color: ${newValue.font.color};\n    //     opacity: ${newValue.opacity};\n    //     padding: ${newValue.padding}px;\n    //     display: ${newValue.visible ? 'block' : 'none'};\n    //     width: ${newValue.size.width}px;\n    //     font-size: ${newValue.font.size}px;\n    //     border-radius: ${newValue.border.radius}%;\n    //     border: ${newValue.border.size}px solid ${newValue.border.color};\n    //     font-weight: ${newValue.font.weight};\n    //     letter-spacing: ${newValue.font.spacing}px;\n    //     line-height: ${newValue.lineHeight}px;\n    //     text-align: ${newValue.textAlign};\n    //     z-index: ${newValue.zIndex};\n    //     transform: scale(${newValue.scale});\n    //   `;\n    // });\n\n    const theatreData = JSON.parse(localStorage.getItem('theatre-data')) || [];\n    const updatedElementData = [\n      ...theatreData,\n      { id: fontID, content: fontContent, type: 'FONT' },\n    ];\n    localStorage.setItem('theatre-data', JSON.stringify(updatedElementData));\n    setStoredData(updatedElementData);\n  };\n\n  return (\n    <Wrapper>\n      <Form>\n        <h2>新增 Font 元件 </h2>\n\n        <span>物件 ID (勿與之前的重複)： </span>\n        <input\n          placeholder='中/英/數字皆可'\n          value={fontID}\n          onChange={(e) => setFontID(e.target.value)}\n        />\n\n        <textarea\n          placeholder='文字內容'\n          value={fontContent}\n          onChange={(e) => setFontContent(e.target.value)}\n        />\n\n        <button\n          onClick={() => {\n            setShowFontLightBox(false);\n            addFontElement(fontID, fontContent);\n          }}\n        >\n          確定\n        </button>\n\n        <button\n          onClick={() => {\n            setShowFontLightBox(false);\n          }}\n        >\n          取消\n        </button>\n      </Form>\n    </Wrapper>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}