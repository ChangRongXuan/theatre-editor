{"ast":null,"code":"// import studio from '@theatre/studio';\n// import { getProject, val } from '@theatre/core';\n// import { useState, useEffect, useRef } from 'react';\n// import styled from 'styled-components';\n// import TheatreElements from '../components/theatre-elements';\n// import { useInView } from 'react-intersection-observer';\n\n// // import { getProject, types } from '@theatre/core';\n// // import projectState from '../data/state.json';\n\n// const defaultViewportHeight = '100vh';\n\n// const ViewBox = styled.div`\n//   position: relative;\n//   width: 100%;\n//   height: 3000px;\n//   min-height: 100vh;\n//   outline: 3px solid blue;\n// `;\n\n// const TheatreContainer = styled.div`\n//   width: 100%;\n//   height: 100vh;\n//   outline: 1px solid red;\n\n//   position: sticky;\n//   top: 0;\n//   left: 0;\n// `;\n\n// // 下面參考 scrollable-video ---------------------------------\n\n// //代表滑到這個框框的最上方\n// const PositionStarter = styled.div`\n//   width: 0;\n//   height: 0;\n//   opacity: 0;\n// `;\n\n// const PositionFinisher = styled.div`\n//   width: 0;\n//   height: 0;\n//   opacity: 0;\n// `;\n\n// const Other = styled.div`\n//   width: 100%;\n//   height: 100vh;\n// `;\n\n// const Test = styled.div`\n//   width: 25px;\n//   height: 25px;\n//   outline: 1px solid red;\n//   position: sticky;\n//   top: 0;\n//   left: 0;\n//   background: red;\n// `;\n\n// export default function DemoScroll({ project, sheet }) {\n//   // studio.initialize();\n//   // const project = getProject('deepfake demo', { state: projectState });\n//   // const sheet = project.sheet('Scene', 'default');\n\n//   studio.ui.hide();\n//   project.ready.then(() => sheet.sequence.pause);\n\n//   const sequenceLength = val(sheet.sequence.pointer.length);\n\n//   // --------------------------------------------------------\n\n//   const testRef = useRef(null);\n//   const [scrollPosition, setScrollPosition] = useState(0);\n\n//   console.log('scrollPosition', scrollPosition);\n\n//   // TODO: 增加條件，減少 event-listener 偵測時間\n\n//   useEffect(() => {\n//     const handleScroll = () => {\n//       const testElement = testRef.current;\n//       const viewboxElement = testElement.closest('.ViewBox');\n\n//       const testRect = testElement.getBoundingClientRect();\n//       const viewboxRect = viewboxElement.getBoundingClientRect();\n\n//       const distance = testRect.top - viewboxRect.top;\n//       setScrollPosition(distance);\n//     };\n\n//     window.addEventListener('scroll', handleScroll);\n\n//     return () => {\n//       window.removeEventListener('scroll', handleScroll);\n//     };\n//   }, []);\n\n//   useEffect(() => {\n//     // 3000 等同於 ScrollHeight 元件的高度\n//     const newPosition = (scrollPosition / 3000) * sequenceLength;\n//     sheet.sequence.position = newPosition;\n//   }, [scrollPosition]);\n\n//   // ----- 上面這段是絕對可用的，勿動 --------------------------------\n\n//   return (\n//     <>\n//       <Other />\n\n//       <ViewBox className='ViewBox'>\n//         <TheatreContainer id='theatre-container' ref={testRef}>\n//           <TheatreElements sheet={sheet} />\n//         </TheatreContainer>\n//       </ViewBox>\n\n//       <Other />\n//     </>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-scroll.js"],"sourcesContent":["// import studio from '@theatre/studio';\n// import { getProject, val } from '@theatre/core';\n// import { useState, useEffect, useRef } from 'react';\n// import styled from 'styled-components';\n// import TheatreElements from '../components/theatre-elements';\n// import { useInView } from 'react-intersection-observer';\n\n// // import { getProject, types } from '@theatre/core';\n// // import projectState from '../data/state.json';\n\n// const defaultViewportHeight = '100vh';\n\n// const ViewBox = styled.div`\n//   position: relative;\n//   width: 100%;\n//   height: 3000px;\n//   min-height: 100vh;\n//   outline: 3px solid blue;\n// `;\n\n// const TheatreContainer = styled.div`\n//   width: 100%;\n//   height: 100vh;\n//   outline: 1px solid red;\n\n//   position: sticky;\n//   top: 0;\n//   left: 0;\n// `;\n\n// // 下面參考 scrollable-video ---------------------------------\n\n// //代表滑到這個框框的最上方\n// const PositionStarter = styled.div`\n//   width: 0;\n//   height: 0;\n//   opacity: 0;\n// `;\n\n// const PositionFinisher = styled.div`\n//   width: 0;\n//   height: 0;\n//   opacity: 0;\n// `;\n\n// const Other = styled.div`\n//   width: 100%;\n//   height: 100vh;\n// `;\n\n// const Test = styled.div`\n//   width: 25px;\n//   height: 25px;\n//   outline: 1px solid red;\n//   position: sticky;\n//   top: 0;\n//   left: 0;\n//   background: red;\n// `;\n\n// export default function DemoScroll({ project, sheet }) {\n//   // studio.initialize();\n//   // const project = getProject('deepfake demo', { state: projectState });\n//   // const sheet = project.sheet('Scene', 'default');\n\n//   studio.ui.hide();\n//   project.ready.then(() => sheet.sequence.pause);\n\n//   const sequenceLength = val(sheet.sequence.pointer.length);\n\n//   // --------------------------------------------------------\n\n//   const testRef = useRef(null);\n//   const [scrollPosition, setScrollPosition] = useState(0);\n\n//   console.log('scrollPosition', scrollPosition);\n\n//   // TODO: 增加條件，減少 event-listener 偵測時間\n\n//   useEffect(() => {\n//     const handleScroll = () => {\n//       const testElement = testRef.current;\n//       const viewboxElement = testElement.closest('.ViewBox');\n\n//       const testRect = testElement.getBoundingClientRect();\n//       const viewboxRect = viewboxElement.getBoundingClientRect();\n\n//       const distance = testRect.top - viewboxRect.top;\n//       setScrollPosition(distance);\n//     };\n\n//     window.addEventListener('scroll', handleScroll);\n\n//     return () => {\n//       window.removeEventListener('scroll', handleScroll);\n//     };\n//   }, []);\n\n//   useEffect(() => {\n//     // 3000 等同於 ScrollHeight 元件的高度\n//     const newPosition = (scrollPosition / 3000) * sequenceLength;\n//     sheet.sequence.position = newPosition;\n//   }, [scrollPosition]);\n\n//   // ----- 上面這段是絕對可用的，勿動 --------------------------------\n\n//   return (\n//     <>\n//       <Other />\n\n//       <ViewBox className='ViewBox'>\n//         <TheatreContainer id='theatre-container' ref={testRef}>\n//           <TheatreElements sheet={sheet} />\n//         </TheatreContainer>\n//       </ViewBox>\n\n//       <Other />\n//     </>\n//   );\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}