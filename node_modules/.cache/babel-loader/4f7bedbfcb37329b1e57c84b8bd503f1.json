{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/embedded.js\",\n  _s = $RefreshSig$();\nimport { parse } from 'node-html-parser';\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeadingBlock = styled.section < LeadingBlockProps > `\n  position: relative;\n  white-space: normal;\n  background-color: ${props => props.backgroundColor};\n  z-index: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.zIndex.articleType;\n}};\n`;\nconst Block = styled.div`\n  position: relative;\n  img.img-responsive {\n    margin: 0 auto;\n    max-width: 100%;\n    height: auto;\n    display: block;\n  }\n`;\n_c = Block;\nexport default function LeadingEmbeddedCode(_ref2) {\n  _s();\n  let {\n    embeddedCode,\n    backgroundColor = 'transparent'\n  } = _ref2;\n  const embedded = useRef(null);\n\n  // `embeddedCode` is a string, which may includes\n  // multiple script tags and other html tags.\n  // Here we separate script tags and other html tags\n  // by using the isomorphic html parser 'node-html-parser'\n  // into scripts nodes and non-script nodes.\n  //\n  // For non-script nodes we simply put them into dangerouslySetInnerHtml.\n  //\n  // For scripts nodes we only append them on the client side. So we handle scripts\n  // nodes when useEffect is called.\n  // The reasons we don't insert script tags through dangerouslySetInnerHtml:\n  // 1. Since react use setInnerHtml to append the htmlStirng received from\n  //    dangerouslySetInnerHtml, scripts won't be triggered.\n  // 2. Although the setInnerhtml way won't trigger script tags, those script tags\n  //    will still show on the HTML provided from SSR. When the browser parse the\n  //    html it will run those script and produce unexpected behavior.\n  const nodes = useMemo(() => {\n    const ele = parse(`<div id=\"draft-embed\">${embeddedCode}</div>`);\n    const scripts = ele.querySelectorAll('script');\n    scripts.forEach(s => {\n      s.remove();\n    });\n    const nonScripts = ele.querySelectorAll('div#draft-embed > :not(script)');\n    const nonScriptsHtml = nonScripts.reduce((prev, next) => prev + next.toString(), '');\n    return {\n      scripts,\n      nonScripts,\n      nonScriptsHtml\n    };\n  }, [embeddedCode]);\n  const {\n    scripts,\n    nonScriptsHtml\n  } = nodes;\n  useEffect(() => {\n    if (embedded.current) {\n      const node = embedded.current;\n      const fragment = document.createDocumentFragment();\n      scripts.forEach(s => {\n        const scriptEle = document.createElement('script');\n        const attrs = s.attributes;\n        for (const key in attrs) {\n          scriptEle.setAttribute(key, attrs[key]);\n        }\n        scriptEle.text = s.text || '';\n        fragment.appendChild(scriptEle);\n      });\n      node.appendChild(fragment);\n    }\n  }, [scripts]);\n  return /*#__PURE__*/_jsxDEV(LeadingBlock, {\n    backgroundColor: backgroundColor,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      hidden: true,\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Block, {\n      ref: embedded,\n      dangerouslySetInnerHTML: {\n        __html: nonScriptsHtml\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(LeadingEmbeddedCode, \"5PMi4KWWJvLUXR9wye+TH5v2/Oc=\");\n_c2 = LeadingEmbeddedCode;\nvar _c, _c2;\n$RefreshReg$(_c, \"Block\");\n$RefreshReg$(_c2, \"LeadingEmbeddedCode\");","map":{"version":3,"names":["parse","React","useEffect","useMemo","useRef","styled","jsxDEV","_jsxDEV","LeadingBlock","section","LeadingBlockProps","props","backgroundColor","_ref","theme","zIndex","articleType","Block","div","_c","LeadingEmbeddedCode","_ref2","_s","embeddedCode","embedded","nodes","ele","scripts","querySelectorAll","forEach","s","remove","nonScripts","nonScriptsHtml","reduce","prev","next","toString","current","node","fragment","document","createDocumentFragment","scriptEle","createElement","attrs","attributes","key","setAttribute","text","appendChild","children","hidden","disabled","fileName","_jsxFileName","lineNumber","columnNumber","ref","dangerouslySetInnerHTML","__html","_c2","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/embedded.js"],"sourcesContent":["import { parse } from 'node-html-parser';\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst LeadingBlock =\n  styled.section <\n  LeadingBlockProps >\n  `\n  position: relative;\n  white-space: normal;\n  background-color: ${(props) => props.backgroundColor};\n  z-index: ${({ theme }) => theme.zIndex.articleType};\n`;\n\nconst Block = styled.div`\n  position: relative;\n  img.img-responsive {\n    margin: 0 auto;\n    max-width: 100%;\n    height: auto;\n    display: block;\n  }\n`;\n\nexport default function LeadingEmbeddedCode({\n  embeddedCode,\n  backgroundColor = 'transparent',\n}) {\n  const embedded = useRef(null);\n\n  // `embeddedCode` is a string, which may includes\n  // multiple script tags and other html tags.\n  // Here we separate script tags and other html tags\n  // by using the isomorphic html parser 'node-html-parser'\n  // into scripts nodes and non-script nodes.\n  //\n  // For non-script nodes we simply put them into dangerouslySetInnerHtml.\n  //\n  // For scripts nodes we only append them on the client side. So we handle scripts\n  // nodes when useEffect is called.\n  // The reasons we don't insert script tags through dangerouslySetInnerHtml:\n  // 1. Since react use setInnerHtml to append the htmlStirng received from\n  //    dangerouslySetInnerHtml, scripts won't be triggered.\n  // 2. Although the setInnerhtml way won't trigger script tags, those script tags\n  //    will still show on the HTML provided from SSR. When the browser parse the\n  //    html it will run those script and produce unexpected behavior.\n  const nodes = useMemo(() => {\n    const ele = parse(`<div id=\"draft-embed\">${embeddedCode}</div>`);\n\n    const scripts = ele.querySelectorAll('script');\n    scripts.forEach((s) => {\n      s.remove();\n    });\n    const nonScripts = ele.querySelectorAll('div#draft-embed > :not(script)');\n    const nonScriptsHtml = nonScripts.reduce(\n      (prev, next) => prev + next.toString(),\n      ''\n    );\n\n    return { scripts, nonScripts, nonScriptsHtml };\n  }, [embeddedCode]);\n  const { scripts, nonScriptsHtml } = nodes;\n\n  useEffect(() => {\n    if (embedded.current) {\n      const node: HTMLElement = embedded.current;\n\n      const fragment = document.createDocumentFragment();\n\n      scripts.forEach((s) => {\n        const scriptEle = document.createElement('script');\n        const attrs = s.attributes;\n        for (const key in attrs) {\n          scriptEle.setAttribute(key, attrs[key]);\n        }\n        scriptEle.text = s.text || '';\n        fragment.appendChild(scriptEle);\n      });\n\n      node.appendChild(fragment);\n    }\n  }, [scripts]);\n\n  return (\n    <LeadingBlock backgroundColor={backgroundColor}>\n      {\n        // WORKAROUND:\n        // The following `<input>` is to solve [issue 153](https://github.com/mirror-media/openwarehouse-k6/issues/153).\n        // If the emebed code generates `<input>` or `<textarea>` and appends them onto DOM,\n        // and then the generated `<input>` or `<textarea>` will hijack the users' cursors.\n        // It will cause that users could not edit the DraftJS Editor anymore.\n        // The following phony `<input>` is used to prevent the generated `<input>` or `<textare>` from\n        // hijacking the users' cursors.\n      }\n      <input hidden disabled />\n      <Block\n        ref={embedded}\n        dangerouslySetInnerHTML={{\n          __html: nonScriptsHtml,\n        }}\n      />\n    </LeadingBlock>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}