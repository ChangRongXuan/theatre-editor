{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-video.js\",\n  _s = $RefreshSig$();\nimport { types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport Stage from '../components/stage';\nimport { initialConfig } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DemoVideo(_ref) {\n  _s();\n  let {\n    project,\n    sheet\n  } = _ref;\n  project.ready.then(() => sheet.sequence.play({\n    iterationCount: Infinity\n  }));\n  const [savedData, setSavedData] = useState([]); // data in local-storage\n\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setSavedData(JSON.parse(elements));\n    }\n  }, []);\n  useEffect(() => {\n    if (savedData.length > 0) {\n      //render `font` control menu\n      savedData.filter(item => item.type === 'font').forEach(item => {\n        const menuConfig = sheet.object(item.id, {\n          ...initialConfig.FONT,\n          content: types.string(`${item.content}`)\n        });\n        const element = document.getElementById(item.id);\n        menuConfig.onValuesChange(newValue => {\n          element.style.cssText = `\n              left: ${newValue.position.x}%;\n              top: ${newValue.position.y}%;\n              background: ${newValue.bgColor};\n              color: ${newValue.font.color};\n              opacity: ${newValue.opacity};\n              padding: ${newValue.padding}px;\n              display: ${newValue.visible ? 'block' : 'none'};\n              width: ${newValue.size.width}px;\n              height: ${newValue.size.height}px;\n              font-size: ${newValue.font.size}px;\n              border-radius: ${newValue.border.radius}%;\n              border: ${newValue.border.size}px solid ${newValue.border.color};\n            `;\n        });\n      });\n\n      //render `image` control menu\n      savedData.filter(item => item.type === 'image').forEach(item => {\n        const menuConfig = sheet.object(item.id, {\n          ...initialConfig.IMAGE\n          // content: types.string(`${item.content}`),\n        });\n\n        const element = document.getElementById(item.id);\n        menuConfig.onValuesChange(newValue => {\n          element.style.cssText = `\n              left: ${newValue.position.x}%;\n              top: ${newValue.position.y}%;\n              background: ${newValue.bgColor};\n              color: ${newValue.font.color};\n              opacity: ${newValue.opacity};\n              padding: ${newValue.padding}px;\n              display: ${newValue.visible ? 'block' : 'none'};\n              width: ${newValue.size.width}px;\n              height: ${newValue.size.height}px;\n              font-size: ${newValue.font.size}px;\n              border-radius: ${newValue.border.radius}%;\n              border: ${newValue.border.size}px solid ${newValue.border.color};\n            `;\n        });\n      });\n    }\n  }, [savedData]);\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    savedData: savedData,\n    sheet: sheet\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 10\n  }, this);\n}\n_s(DemoVideo, \"tU47YWy7EwUC3XEajAHh90Ba9jc=\");\n_c = DemoVideo;\nvar _c;\n$RefreshReg$(_c, \"DemoVideo\");","map":{"version":3,"names":["types","useState","useEffect","Stage","initialConfig","jsxDEV","_jsxDEV","DemoVideo","_ref","_s","project","sheet","ready","then","sequence","play","iterationCount","Infinity","savedData","setSavedData","elements","localStorage","getItem","JSON","parse","length","filter","item","type","forEach","menuConfig","object","id","FONT","content","string","element","document","getElementById","onValuesChange","newValue","style","cssText","position","x","y","bgColor","font","color","opacity","padding","visible","size","width","height","border","radius","IMAGE","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-video.js"],"sourcesContent":["import { types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport Stage from '../components/stage';\nimport { initialConfig } from '../constants';\n\nexport default function DemoVideo({ project, sheet }) {\n  project.ready.then(() =>\n    sheet.sequence.play({\n      iterationCount: Infinity,\n    })\n  );\n\n  const [savedData, setSavedData] = useState([]); // data in local-storage\n\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setSavedData(JSON.parse(elements));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (savedData.length > 0) {\n      //render `font` control menu\n      savedData\n        .filter((item) => item.type === 'font')\n        .forEach((item) => {\n          const menuConfig = sheet.object(item.id, {\n            ...initialConfig.FONT,\n            content: types.string(`${item.content}`),\n          });\n          const element = document.getElementById(item.id);\n\n          menuConfig.onValuesChange((newValue) => {\n            element.style.cssText = `\n              left: ${newValue.position.x}%;\n              top: ${newValue.position.y}%;\n              background: ${newValue.bgColor};\n              color: ${newValue.font.color};\n              opacity: ${newValue.opacity};\n              padding: ${newValue.padding}px;\n              display: ${newValue.visible ? 'block' : 'none'};\n              width: ${newValue.size.width}px;\n              height: ${newValue.size.height}px;\n              font-size: ${newValue.font.size}px;\n              border-radius: ${newValue.border.radius}%;\n              border: ${newValue.border.size}px solid ${newValue.border.color};\n            `;\n          });\n        });\n\n      //render `image` control menu\n      savedData\n        .filter((item) => item.type === 'image')\n        .forEach((item) => {\n          const menuConfig = sheet.object(item.id, {\n            ...initialConfig.IMAGE,\n            // content: types.string(`${item.content}`),\n          });\n\n          const element = document.getElementById(item.id);\n\n          menuConfig.onValuesChange((newValue) => {\n            element.style.cssText = `\n              left: ${newValue.position.x}%;\n              top: ${newValue.position.y}%;\n              background: ${newValue.bgColor};\n              color: ${newValue.font.color};\n              opacity: ${newValue.opacity};\n              padding: ${newValue.padding}px;\n              display: ${newValue.visible ? 'block' : 'none'};\n              width: ${newValue.size.width}px;\n              height: ${newValue.size.height}px;\n              font-size: ${newValue.font.size}px;\n              border-radius: ${newValue.border.radius}%;\n              border: ${newValue.border.size}px solid ${newValue.border.color};\n            `;\n          });\n        });\n    }\n  }, [savedData]);\n\n  return <Stage savedData={savedData} sheet={sheet} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}