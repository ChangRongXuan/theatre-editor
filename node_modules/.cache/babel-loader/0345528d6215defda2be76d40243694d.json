{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/elements/font.js\",\n  _s = $RefreshSig$();\nimport studio from '@theatre/studio';\nimport React, { useMemo, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport useDrag from '../../hooks/use-drag';\nimport { initialConfig } from '../../constants';\nimport { defaultFontStyle } from '../../shared-style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FontWrapper = styled.div`\n  ${defaultFontStyle}\n`;\n\n//結合 utils 的功能，這邊處理單一個文字元件的 render（交給 stage 做 map)\n_c = FontWrapper;\nexport default function FontElement(_ref) {\n  _s();\n  let {\n    id,\n    sheet\n  } = _ref;\n  // const [pos, setPos] = useState({ x: 0, y: 0 });\n  const [divRef, setDivRef] = useState(null);\n  const [style, setStyle] = useState({}); // 新增一個狀態來追踪 style 變化\n\n  // console.log('divRef', divRef);\n\n  // 這邊是舊資料 ----------------\n\n  const scrubRef = useRef(null);\n  const object = sheet.object(id, {\n    ...initialConfig.FONT\n  });\n  const dragOpts = useMemo(() => {\n    let scrub;\n    let initial;\n    let firstOnDragCalled = false;\n    return {\n      // onDragStart() {\n      //   scrub = studio.scrub();\n      //   initial = object.value;\n      //   firstOnDragCalled = false;\n      // },\n\n      onDragStart() {\n        scrubRef.current = studio.scrub(); // 设置 scrub 对象的引用\n        initial = object.value;\n        firstOnDragCalled = false;\n      },\n      // onDrag(x, y) {\n      //   if (!firstOnDragCalled) {\n      //     studio.setSelection([object]);\n      //     firstOnDragCalled = true;\n      //   }\n      //   scrub.capture(({ set }) => {\n      //     set(object.props, {\n      //       ...initial,\n      //       position: {\n      //         x: x + initial.position.x,\n      //         y: y + initial.position.y,\n      //       },\n      //     });\n      //   });\n      // },\n      // onDragEnd(dragHappened) {\n      //   if (dragHappened) {\n      //     scrub.commit();\n      //   } else {\n      //     scrub.discard();\n      //   }\n      // },\n      // lockCursorTo: 'move',\n\n      onDrag(x, y) {\n        var _scrubRef$current;\n        if (!firstOnDragCalled) {\n          studio.setSelection([object]);\n          firstOnDragCalled = true;\n        }\n        (_scrubRef$current = scrubRef.current) === null || _scrubRef$current === void 0 ? void 0 : _scrubRef$current.capture(_ref2 => {\n          let {\n            set\n          } = _ref2;\n          set(object.props, {\n            ...initial,\n            position: {\n              x: x + initial.position.x,\n              y: y + initial.position.y\n            }\n          });\n        });\n      },\n      onDragEnd(dragHappened) {\n        if (dragHappened) {\n          var _scrubRef$current2;\n          (_scrubRef$current2 = scrubRef.current) === null || _scrubRef$current2 === void 0 ? void 0 : _scrubRef$current2.commit();\n        } else {\n          var _scrubRef$current3;\n          (_scrubRef$current3 = scrubRef.current) === null || _scrubRef$current3 === void 0 ? void 0 : _scrubRef$current3.discard();\n        }\n      },\n      lockCursorTo: 'move'\n    };\n  });\n  useDrag(divRef, dragOpts);\n  useEffect(() => {\n    object.onValuesChange(newValue => {\n      setStyle({\n        left: `${newValue.position.x}%`,\n        top: `${newValue.position.y}%`,\n        background: `${newValue.bgColor}`,\n        color: `${newValue.font.color}`,\n        opacity: ` ${newValue.opacity}`,\n        padding: `${newValue.padding}px`,\n        display: `${newValue.visible ? 'block' : 'none'}`,\n        width: `${newValue.size.width}px`,\n        fontSize: `${newValue.font.size}px`,\n        borderRadius: `${newValue.border.radius}px`,\n        border: `${newValue.border.size}px solid ${newValue.border.color}`,\n        fontWeight: `${newValue.font.weight}`,\n        letterSpacing: `{newValue.font.spacing}px`,\n        lineHeight: `{newValue.lineHeight}px`,\n        textAlign: `${newValue.textAlign}`,\n        zIndex: `${newValue.zIndex}`,\n        transform: `scale(${newValue.scale})`\n      });\n    });\n  }, [object]);\n  return /*#__PURE__*/_jsxDEV(FontWrapper\n  // onClick={() => {\n  //   studio.setSelection([object]);\n  // }}\n  , {\n    ref: setDivRef,\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(FontElement, \"wYVG9GuQ4P/3Fg8p5gN/V7RlzLA=\", false, function () {\n  return [useDrag];\n});\n_c2 = FontElement;\nvar _c, _c2;\n$RefreshReg$(_c, \"FontWrapper\");\n$RefreshReg$(_c2, \"FontElement\");","map":{"version":3,"names":["studio","React","useMemo","useState","useEffect","useRef","styled","useDrag","initialConfig","defaultFontStyle","jsxDEV","_jsxDEV","FontWrapper","div","_c","FontElement","_ref","_s","id","sheet","divRef","setDivRef","style","setStyle","scrubRef","object","FONT","dragOpts","scrub","initial","firstOnDragCalled","onDragStart","current","value","onDrag","x","y","_scrubRef$current","setSelection","capture","_ref2","set","props","position","onDragEnd","dragHappened","_scrubRef$current2","commit","_scrubRef$current3","discard","lockCursorTo","onValuesChange","newValue","left","top","background","bgColor","color","font","opacity","padding","display","visible","width","size","fontSize","borderRadius","border","radius","fontWeight","weight","letterSpacing","lineHeight","textAlign","zIndex","transform","scale","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/elements/font.js"],"sourcesContent":["import studio from '@theatre/studio';\nimport React, { useMemo, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport useDrag from '../../hooks/use-drag';\nimport { initialConfig } from '../../constants';\nimport { defaultFontStyle } from '../../shared-style';\n\nconst FontWrapper = styled.div`\n  ${defaultFontStyle}\n`;\n\n//結合 utils 的功能，這邊處理單一個文字元件的 render（交給 stage 做 map)\nexport default function FontElement({ id, sheet }) {\n  // const [pos, setPos] = useState({ x: 0, y: 0 });\n  const [divRef, setDivRef] = useState(null);\n  const [style, setStyle] = useState({}); // 新增一個狀態來追踪 style 變化\n\n  // console.log('divRef', divRef);\n\n  // 這邊是舊資料 ----------------\n\n  const scrubRef = useRef(null);\n\n  const object = sheet.object(id, {\n    ...initialConfig.FONT,\n  });\n\n  const dragOpts = useMemo(() => {\n    let scrub;\n    let initial;\n    let firstOnDragCalled = false;\n    return {\n      // onDragStart() {\n      //   scrub = studio.scrub();\n      //   initial = object.value;\n      //   firstOnDragCalled = false;\n      // },\n\n      onDragStart() {\n        scrubRef.current = studio.scrub(); // 设置 scrub 对象的引用\n        initial = object.value;\n        firstOnDragCalled = false;\n      },\n\n      // onDrag(x, y) {\n      //   if (!firstOnDragCalled) {\n      //     studio.setSelection([object]);\n      //     firstOnDragCalled = true;\n      //   }\n      //   scrub.capture(({ set }) => {\n      //     set(object.props, {\n      //       ...initial,\n      //       position: {\n      //         x: x + initial.position.x,\n      //         y: y + initial.position.y,\n      //       },\n      //     });\n      //   });\n      // },\n      // onDragEnd(dragHappened) {\n      //   if (dragHappened) {\n      //     scrub.commit();\n      //   } else {\n      //     scrub.discard();\n      //   }\n      // },\n      // lockCursorTo: 'move',\n\n      onDrag(x, y) {\n        if (!firstOnDragCalled) {\n          studio.setSelection([object]);\n          firstOnDragCalled = true;\n        }\n        scrubRef.current?.capture(({ set }) => {\n          set(object.props, {\n            ...initial,\n            position: {\n              x: x + initial.position.x,\n              y: y + initial.position.y,\n            },\n          });\n        });\n      },\n      onDragEnd(dragHappened) {\n        if (dragHappened) {\n          scrubRef.current?.commit();\n        } else {\n          scrubRef.current?.discard();\n        }\n      },\n      lockCursorTo: 'move',\n    };\n  });\n\n  useDrag(divRef, dragOpts);\n\n  useEffect(() => {\n    object.onValuesChange((newValue) => {\n      setStyle({\n        left: `${newValue.position.x}%`,\n        top: `${newValue.position.y}%`,\n        background: `${newValue.bgColor}`,\n        color: `${newValue.font.color}`,\n        opacity: ` ${newValue.opacity}`,\n        padding: `${newValue.padding}px`,\n        display: `${newValue.visible ? 'block' : 'none'}`,\n        width: `${newValue.size.width}px`,\n        fontSize: `${newValue.font.size}px`,\n        borderRadius: `${newValue.border.radius}px`,\n        border: `${newValue.border.size}px solid ${newValue.border.color}`,\n        fontWeight: `${newValue.font.weight}`,\n        letterSpacing: `{newValue.font.spacing}px`,\n        lineHeight: `{newValue.lineHeight}px`,\n        textAlign: `${newValue.textAlign}`,\n        zIndex: `${newValue.zIndex}`,\n        transform: `scale(${newValue.scale})`,\n      });\n    });\n  }, [object]);\n\n  return (\n    <FontWrapper\n      // onClick={() => {\n      //   studio.setSelection([object]);\n      // }}\n      ref={setDivRef}\n      style={style}\n    />\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}