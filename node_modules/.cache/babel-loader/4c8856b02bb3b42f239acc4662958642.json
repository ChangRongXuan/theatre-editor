{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-video.js\",\n  _s = $RefreshSig$();\nimport { types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport { initialConfig } from '../constants';\nimport styled from 'styled-components';\nimport { getProject } from '@theatre/core';\nimport { defaultFontStyle, defaultImageStyle } from '../components/shared-style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n_c = Wrapper;\nconst FontElement = styled.div`\n  ${defaultFontStyle}\n`;\n_c2 = FontElement;\nconst ImageElement = styled.div`\n  ${defaultImageStyle}\n`;\n_c3 = ImageElement;\nexport default function DemoVideo() {\n  _s();\n  const project = getProject('Project', {});\n  const sheet = project.sheet('Scene', 'default');\n  project.ready.then(() => sheet.sequence.play({\n    iterationCount: Infinity\n  }));\n  const [storedData, setStoredData] = useState([]); // data in local-storage\n\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setStoredData(JSON.parse(elements));\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   if (storedData.length > 0) {\n  //     //render `FONT` control menu\n  //     storedData\n  //       .filter((item) => item.type === 'FONT')\n  //       .forEach((item) => {\n  //         const menuConfig = sheet.object(item.id, {\n  //           ...initialConfig.FONT,\n  //           content: types.string(`${item.content}`),\n  //         });\n\n  //         const element = document.getElementById(item.id);\n\n  //         menuConfig.onValuesChange((newValue) => {\n  //           element.style.cssText = `\n  //             left: ${newValue.position.x}%;\n  //             top: ${newValue.position.y}%;\n  //             background: ${newValue.bgColor};\n  //             color: ${newValue.font.color};\n  //             opacity: ${newValue.opacity};\n  //             padding: ${newValue.padding}px;\n  //             display: ${newValue.visible ? 'block' : 'none'};\n  //             width: ${newValue.size.width}px;\n  //             font-size: ${newValue.font.size}px;\n  //             border-radius: ${newValue.border.radius}%;\n  //             border: ${newValue.border.size}px solid ${newValue.border.color};\n  //             font-weight: ${newValue.font.weight};\n  //             letter-spacing: ${newValue.font.spacing}px;\n  //             line-height: ${newValue.lineHeight}px;\n  //             text-align: ${newValue.textAlign};\n  //             z-index: ${newValue.zIndex};\n  //             transform: scale(${newValue.scale});\n  //           `;\n  //         });\n  //       });\n\n  //     //render `image` control menu\n  //     storedData\n  //       .filter((item) => item.type === 'IMAGE')\n  //       .forEach((item) => {\n  //         const menuConfig = sheet.object(item.id, {\n  //           ...initialConfig.IMAGE,\n  //           url: types.string(`${item.url}`),\n  //         });\n\n  //         const element = document.getElementById(item.id);\n\n  //         menuConfig.onValuesChange((newValue) => {\n  //           element.style.cssText = `\n  //             left: ${newValue.position.x}%;\n  //             top: ${newValue.position.y}%;\n  //             width: ${newValue.size.width}px;\n  //             height: ${newValue.size.height}px;\n  //             border-radius: ${newValue.border.radius}%;\n  //             border: ${newValue.border.size}px solid ${newValue.border.color};\n  //             background: ${newValue.bgColor};\n  //             opacity: ${newValue.opacity};\n  //             display: ${newValue.visible ? 'block' : 'none'};\n  //             background-image = url(${newValue.url});\n  //           `;\n  //         });\n  //       });\n  //   }\n  // }, [storedData]);\n\n  const fontElements = storedData.filter(data => data.type === 'FONT').map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(FontElement, {\n      id: data.id,\n      children: data.content\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this);\n  });\n  const imageElements = storedData.filter(data => data.type === 'IMAGE').map((data, index) => {\n    const style = {\n      backgroundImage: `url(${data.url})`\n    };\n    return /*#__PURE__*/_jsxDEV(ImageElement, {\n      id: data.id,\n      style: style\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: \"theatre-stage\",\n    children: [fontElements, imageElements]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(DemoVideo, \"Nqw0LU274XEdTwbgCLKlt5xLJvA=\");\n_c4 = DemoVideo;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"FontElement\");\n$RefreshReg$(_c3, \"ImageElement\");\n$RefreshReg$(_c4, \"DemoVideo\");","map":{"version":3,"names":["types","useState","useEffect","initialConfig","styled","getProject","defaultFontStyle","defaultImageStyle","jsxDEV","_jsxDEV","Wrapper","div","_c","FontElement","_c2","ImageElement","_c3","DemoVideo","_s","project","sheet","ready","then","sequence","play","iterationCount","Infinity","storedData","setStoredData","elements","localStorage","getItem","JSON","parse","fontElements","filter","data","type","map","index","id","children","content","fileName","_jsxFileName","lineNumber","columnNumber","imageElements","style","backgroundImage","url","_c4","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-video.js"],"sourcesContent":["import { types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport { initialConfig } from '../constants';\nimport styled from 'styled-components';\nimport { getProject } from '@theatre/core';\nimport {\n  defaultFontStyle,\n  defaultImageStyle,\n} from '../components/shared-style';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n\nconst FontElement = styled.div`\n  ${defaultFontStyle}\n`;\n\nconst ImageElement = styled.div`\n  ${defaultImageStyle}\n`;\n\nexport default function DemoVideo() {\n  const project = getProject('Project', {});\n  const sheet = project.sheet('Scene', 'default');\n\n  project.ready.then(() =>\n    sheet.sequence.play({\n      iterationCount: Infinity,\n    })\n  );\n\n  const [storedData, setStoredData] = useState([]); // data in local-storage\n\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setStoredData(JSON.parse(elements));\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   if (storedData.length > 0) {\n  //     //render `FONT` control menu\n  //     storedData\n  //       .filter((item) => item.type === 'FONT')\n  //       .forEach((item) => {\n  //         const menuConfig = sheet.object(item.id, {\n  //           ...initialConfig.FONT,\n  //           content: types.string(`${item.content}`),\n  //         });\n\n  //         const element = document.getElementById(item.id);\n\n  //         menuConfig.onValuesChange((newValue) => {\n  //           element.style.cssText = `\n  //             left: ${newValue.position.x}%;\n  //             top: ${newValue.position.y}%;\n  //             background: ${newValue.bgColor};\n  //             color: ${newValue.font.color};\n  //             opacity: ${newValue.opacity};\n  //             padding: ${newValue.padding}px;\n  //             display: ${newValue.visible ? 'block' : 'none'};\n  //             width: ${newValue.size.width}px;\n  //             font-size: ${newValue.font.size}px;\n  //             border-radius: ${newValue.border.radius}%;\n  //             border: ${newValue.border.size}px solid ${newValue.border.color};\n  //             font-weight: ${newValue.font.weight};\n  //             letter-spacing: ${newValue.font.spacing}px;\n  //             line-height: ${newValue.lineHeight}px;\n  //             text-align: ${newValue.textAlign};\n  //             z-index: ${newValue.zIndex};\n  //             transform: scale(${newValue.scale});\n  //           `;\n  //         });\n  //       });\n\n  //     //render `image` control menu\n  //     storedData\n  //       .filter((item) => item.type === 'IMAGE')\n  //       .forEach((item) => {\n  //         const menuConfig = sheet.object(item.id, {\n  //           ...initialConfig.IMAGE,\n  //           url: types.string(`${item.url}`),\n  //         });\n\n  //         const element = document.getElementById(item.id);\n\n  //         menuConfig.onValuesChange((newValue) => {\n  //           element.style.cssText = `\n  //             left: ${newValue.position.x}%;\n  //             top: ${newValue.position.y}%;\n  //             width: ${newValue.size.width}px;\n  //             height: ${newValue.size.height}px;\n  //             border-radius: ${newValue.border.radius}%;\n  //             border: ${newValue.border.size}px solid ${newValue.border.color};\n  //             background: ${newValue.bgColor};\n  //             opacity: ${newValue.opacity};\n  //             display: ${newValue.visible ? 'block' : 'none'};\n  //             background-image = url(${newValue.url});\n  //           `;\n  //         });\n  //       });\n  //   }\n  // }, [storedData]);\n\n  const fontElements = storedData\n    .filter((data) => data.type === 'FONT')\n    .map((data, index) => {\n      return (\n        <FontElement key={index} id={data.id}>\n          {data.content}\n        </FontElement>\n      );\n    });\n\n  const imageElements = storedData\n    .filter((data) => data.type === 'IMAGE')\n    .map((data, index) => {\n      const style = { backgroundImage: `url(${data.url})` };\n      return <ImageElement key={index} id={data.id} style={style} />;\n    });\n\n  return (\n    <Wrapper id='theatre-stage'>\n      {fontElements}\n      {imageElements}\n    </Wrapper>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}