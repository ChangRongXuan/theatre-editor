{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/mac/Documents/GitHub/deepfake-demo/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{parse}from'node-html-parser';import React,{useEffect,useMemo,useRef}from'react';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Block=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  img.img-responsive {\\n    margin: 0 auto;\\n    max-width: 100%;\\n    height: auto;\\n    display: block;\\n  }\\n\"])));export default function EmbeddedCode(_ref){var embed=_ref.embed,setEmbed=_ref.setEmbed;var embeddedCode=\"\".concat(embed);var embedded=useRef(null);// `embeddedCode` is a string, which may includes\n// multiple script tags and other html tags.\n// Here we separate script tags and other html tags\n// by using the isomorphic html parser 'node-html-parser'\n// into scripts nodes and non-script nodes.\n//\n// For non-script nodes we simply put them into dangerouslySetInnerHtml.\n//\n// For scripts nodes we only append them on the client side. So we handle scripts\n// nodes when useEffect is called.\n// The reasons we don't insert script tags through dangerouslySetInnerHtml:\n// 1. Since react use setInnerHtml to append the htmlStirng received from\n//    dangerouslySetInnerHtml, scripts won't be triggered.\n// 2. Although the setInnerhtml way won't trigger script tags, those script tags\n//    will still show on the HTML provided from SSR. When the browser parse the\n//    html it will run those script and produce unexpected behavior.\nvar nodes=useMemo(function(){var ele=parse(\"<div id=\\\"draft-embed\\\">\".concat(embeddedCode,\"</div>\"));var scripts=ele.querySelectorAll('script');scripts.forEach(function(s){s.remove();});var nonScripts=ele.querySelectorAll('div#draft-embed > :not(script)');var nonScriptsHtml=nonScripts.reduce(function(prev,next){return prev+next.toString();},'');return{scripts:scripts,nonScripts:nonScripts,nonScriptsHtml:nonScriptsHtml};},[embeddedCode]);var scripts=nodes.scripts,nonScriptsHtml=nodes.nonScriptsHtml;useEffect(function(){if(embedded.current){var node=embedded.current;var fragment=document.createDocumentFragment();scripts.forEach(function(s){var scriptEle=document.createElement('script');var attrs=s.attributes;for(var key in attrs){scriptEle.setAttribute(key,attrs[key]);}scriptEle.text=s.text||'';fragment.appendChild(scriptEle);});node.appendChild(fragment);}},[scripts]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{hidden:true,disabled:true}),/*#__PURE__*/_jsx(Block,{ref:embedded,dangerouslySetInnerHTML:{__html:nonScriptsHtml}})]});}","map":{"version":3,"names":["parse","React","useEffect","useMemo","useRef","styled","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Block","div","_templateObject","_taggedTemplateLiteral","EmbeddedCode","_ref","embed","setEmbed","embeddedCode","concat","embedded","nodes","ele","scripts","querySelectorAll","forEach","s","remove","nonScripts","nonScriptsHtml","reduce","prev","next","toString","current","node","fragment","document","createDocumentFragment","scriptEle","createElement","attrs","attributes","key","setAttribute","text","appendChild","children","hidden","disabled","ref","dangerouslySetInnerHTML","__html"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/embedded.js"],"sourcesContent":["import { parse } from 'node-html-parser';\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst Block = styled.div`\n  position: relative;\n  img.img-responsive {\n    margin: 0 auto;\n    max-width: 100%;\n    height: auto;\n    display: block;\n  }\n`;\n\nexport default function EmbeddedCode({ embed, setEmbed }) {\n  const embeddedCode = `${embed}`;\n\n  const embedded = useRef(null);\n\n  // `embeddedCode` is a string, which may includes\n  // multiple script tags and other html tags.\n  // Here we separate script tags and other html tags\n  // by using the isomorphic html parser 'node-html-parser'\n  // into scripts nodes and non-script nodes.\n  //\n  // For non-script nodes we simply put them into dangerouslySetInnerHtml.\n  //\n  // For scripts nodes we only append them on the client side. So we handle scripts\n  // nodes when useEffect is called.\n  // The reasons we don't insert script tags through dangerouslySetInnerHtml:\n  // 1. Since react use setInnerHtml to append the htmlStirng received from\n  //    dangerouslySetInnerHtml, scripts won't be triggered.\n  // 2. Although the setInnerhtml way won't trigger script tags, those script tags\n  //    will still show on the HTML provided from SSR. When the browser parse the\n  //    html it will run those script and produce unexpected behavior.\n  const nodes = useMemo(() => {\n    const ele = parse(`<div id=\"draft-embed\">${embeddedCode}</div>`);\n\n    const scripts = ele.querySelectorAll('script');\n    scripts.forEach((s) => {\n      s.remove();\n    });\n    const nonScripts = ele.querySelectorAll('div#draft-embed > :not(script)');\n    const nonScriptsHtml = nonScripts.reduce(\n      (prev, next) => prev + next.toString(),\n      ''\n    );\n\n    return { scripts, nonScripts, nonScriptsHtml };\n  }, [embeddedCode]);\n  const { scripts, nonScriptsHtml } = nodes;\n\n  useEffect(() => {\n    if (embedded.current) {\n      const node = embedded.current;\n\n      const fragment = document.createDocumentFragment();\n\n      scripts.forEach((s) => {\n        const scriptEle = document.createElement('script');\n        const attrs = s.attributes;\n        for (const key in attrs) {\n          scriptEle.setAttribute(key, attrs[key]);\n        }\n        scriptEle.text = s.text || '';\n        fragment.appendChild(scriptEle);\n      });\n\n      node.appendChild(fragment);\n    }\n  }, [scripts]);\n\n  return (\n    <>\n      {\n        // WORKAROUND:\n        // The following `<input>` is to solve [issue 153](https://github.com/mirror-media/openwarehouse-k6/issues/153).\n        // If the emebed code generates `<input>` or `<textarea>` and appends them onto DOM,\n        // and then the generated `<input>` or `<textarea>` will hijack the users' cursors.\n        // It will cause that users could not edit the DraftJS Editor anymore.\n        // The following phony `<input>` is used to prevent the generated `<input>` or `<textare>` from\n        // hijacking the users' cursors.\n      }\n      <input hidden disabled />\n      <Block\n        ref={embedded}\n        dangerouslySetInnerHTML={{\n          __html: nonScriptsHtml,\n        }}\n      />\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}