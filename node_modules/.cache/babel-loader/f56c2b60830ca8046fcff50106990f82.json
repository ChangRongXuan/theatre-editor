{"ast":null,"code":"import { initialConfig } from '../constants/index';\nconst isEmptyObject = obj => {\n  return Object.keys(obj).length === 0;\n};\nconst getLocalStorageData = name => {\n  const data = localStorage.getItem(name);\n  if (data) {\n    return data;\n  } else {\n    return [];\n  }\n};\nconst renderFontObject = function () {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  data.filter(item => item.type === 'FONT').forEach(item => {\n    const menuConfig = sheet.object(item.id, {\n      ...initialConfig.FONT,\n      content: types.string(`${item.content}`)\n    });\n    const element = document.getElementById(item.id);\n    menuConfig.onValuesChange(newValue => {\n      element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          background: ${newValue.bgColor};\n          color: ${newValue.font.color};\n          opacity: ${newValue.opacity};\n          padding: ${newValue.padding}px;\n          display: ${newValue.visible ? 'block' : 'none'};\n          width: ${newValue.size.width}px;\n          font-size: ${newValue.font.size}px;\n          border-radius: ${newValue.border.radius}%;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          font-weight: ${newValue.font.weight};\n          letter-spacing: ${newValue.font.spacing}px;\n          line-height: ${newValue.lineHeight}px;\n          text-align: ${newValue.textAlign};\n          z-index: ${newValue.zIndex};\n          transform: scale(${newValue.scale});\n        `;\n    });\n  });\n};\nconst renderImageObject = function () {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  data.filter(item => item.type === 'IMAGE').forEach(item => {\n    const menuConfig = sheet.object(item.id, {\n      ...initialConfig.FONT,\n      content: types.string(`${item.content}`)\n    });\n    const element = document.getElementById(item.id);\n    menuConfig.onValuesChange(newValue => {\n      element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          background: ${newValue.bgColor};\n          color: ${newValue.font.color};\n          opacity: ${newValue.opacity};\n          padding: ${newValue.padding}px;\n          display: ${newValue.visible ? 'block' : 'none'};\n          width: ${newValue.size.width}px;\n          font-size: ${newValue.font.size}px;\n          border-radius: ${newValue.border.radius}%;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          font-weight: ${newValue.font.weight};\n          letter-spacing: ${newValue.font.spacing}px;\n          line-height: ${newValue.lineHeight}px;\n          text-align: ${newValue.textAlign};\n          z-index: ${newValue.zIndex};\n          transform: scale(${newValue.scale});\n        `;\n    });\n  });\n};\nexport { isEmptyObject, getLocalStorageData, renderFontObject, renderImageObject };","map":{"version":3,"names":["initialConfig","isEmptyObject","obj","Object","keys","length","getLocalStorageData","name","data","localStorage","getItem","renderFontObject","arguments","undefined","filter","item","type","forEach","menuConfig","sheet","object","id","FONT","content","types","string","element","document","getElementById","onValuesChange","newValue","style","cssText","position","x","y","bgColor","font","color","opacity","padding","visible","size","width","border","radius","weight","spacing","lineHeight","textAlign","zIndex","scale","renderImageObject"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/utils/index.js"],"sourcesContent":["import { initialConfig } from '../constants/index';\n\nconst isEmptyObject = (obj) => {\n  return Object.keys(obj).length === 0;\n};\n\nconst getLocalStorageData = (name) => {\n  const data = localStorage.getItem(name);\n  if (data) {\n    return data;\n  } else {\n    return [];\n  }\n};\n\nconst renderFontObject = (data = []) => {\n  data\n    .filter((item) => item.type === 'FONT')\n    .forEach((item) => {\n      const menuConfig = sheet.object(item.id, {\n        ...initialConfig.FONT,\n        content: types.string(`${item.content}`),\n      });\n\n      const element = document.getElementById(item.id);\n\n      menuConfig.onValuesChange((newValue) => {\n        element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          background: ${newValue.bgColor};\n          color: ${newValue.font.color};\n          opacity: ${newValue.opacity};\n          padding: ${newValue.padding}px;\n          display: ${newValue.visible ? 'block' : 'none'};\n          width: ${newValue.size.width}px;\n          font-size: ${newValue.font.size}px;\n          border-radius: ${newValue.border.radius}%;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          font-weight: ${newValue.font.weight};\n          letter-spacing: ${newValue.font.spacing}px;\n          line-height: ${newValue.lineHeight}px;\n          text-align: ${newValue.textAlign};\n          z-index: ${newValue.zIndex};\n          transform: scale(${newValue.scale});\n        `;\n      });\n    });\n};\n\nconst renderImageObject = (data = []) => {\n  data\n    .filter((item) => item.type === 'IMAGE')\n    .forEach((item) => {\n      const menuConfig = sheet.object(item.id, {\n        ...initialConfig.FONT,\n        content: types.string(`${item.content}`),\n      });\n\n      const element = document.getElementById(item.id);\n\n      menuConfig.onValuesChange((newValue) => {\n        element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          background: ${newValue.bgColor};\n          color: ${newValue.font.color};\n          opacity: ${newValue.opacity};\n          padding: ${newValue.padding}px;\n          display: ${newValue.visible ? 'block' : 'none'};\n          width: ${newValue.size.width}px;\n          font-size: ${newValue.font.size}px;\n          border-radius: ${newValue.border.radius}%;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          font-weight: ${newValue.font.weight};\n          letter-spacing: ${newValue.font.spacing}px;\n          line-height: ${newValue.lineHeight}px;\n          text-align: ${newValue.textAlign};\n          z-index: ${newValue.zIndex};\n          transform: scale(${newValue.scale});\n        `;\n      });\n    });\n};\n\nexport {\n  isEmptyObject,\n  getLocalStorageData,\n  renderFontObject,\n  renderImageObject,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}