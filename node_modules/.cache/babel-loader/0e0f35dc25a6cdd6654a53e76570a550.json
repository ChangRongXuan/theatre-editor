{"ast":null,"code":"import { types } from '@theatre/core';\nexport const IMAGE = {\n  position: types.compound({\n    x: types.number(50, {\n      // range: [-100, 100],\n      nudgeMultiplier: 0.5\n    }),\n    y: types.number(50, {\n      // range: [-100, 100],\n      nudgeMultiplier: 0.5\n    })\n  }),\n  size: types.compound({\n    width: types.number(300, {\n      range: [0, 1200],\n      nudgeMultiplier: 0.5\n    })\n  }),\n  border: types.compound({\n    size: types.number(0),\n    color: types.rgba({\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1\n    }),\n    radius: types.number(0, {\n      range: [0, 100],\n      nudgeMultiplier: 1\n    })\n  }),\n  url: types.string('/default-image.png'),\n  opacity: types.number(1, {\n    range: [0, 1],\n    nudgeMultiplier: 0.05\n  }),\n  visible: types.boolean(true),\n  scale: types.number(1, {\n    range: [0, 100],\n    nudgeMultiplier: 0.1\n  }),\n  zIndex: types.stringLiteral('10', {\n    bottom: '-10',\n    0: '0',\n    10: '10',\n    100: '100',\n    1000: '1000',\n    10000: '10000'\n  })\n};","map":{"version":3,"names":["types","IMAGE","position","compound","x","number","nudgeMultiplier","y","size","width","range","border","color","rgba","r","g","b","a","radius","url","string","opacity","visible","boolean","scale","zIndex","stringLiteral","bottom"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/constants/image.js"],"sourcesContent":["import { types } from '@theatre/core';\n\nexport const IMAGE = {\n  position: types.compound({\n    x: types.number(50, {\n      // range: [-100, 100],\n      nudgeMultiplier: 0.5,\n    }),\n    y: types.number(50, {\n      // range: [-100, 100],\n      nudgeMultiplier: 0.5,\n    }),\n  }),\n  size: types.compound({\n    width: types.number(300, {\n      range: [0, 1200],\n      nudgeMultiplier: 0.5,\n    }),\n  }),\n  border: types.compound({\n    size: types.number(0),\n    color: types.rgba({ r: 0, g: 0, b: 0, a: 1 }),\n    radius: types.number(0, {\n      range: [0, 100],\n      nudgeMultiplier: 1,\n    }),\n  }),\n  url: types.string('/default-image.png'),\n  opacity: types.number(1, {\n    range: [0, 1],\n    nudgeMultiplier: 0.05,\n  }),\n  visible: types.boolean(true),\n  scale: types.number(1, { range: [0, 100], nudgeMultiplier: 0.1 }),\n  zIndex: types.stringLiteral('10', {\n    bottom: '-10',\n    0: '0',\n    10: '10',\n    100: '100',\n    1000: '1000',\n    10000: '10000',\n  }),\n};\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,eAAe;AAErC,OAAO,MAAMC,KAAK,GAAG;EACnBC,QAAQ,EAAEF,KAAK,CAACG,QAAQ,CAAC;IACvBC,CAAC,EAAEJ,KAAK,CAACK,MAAM,CAAC,EAAE,EAAE;MAClB;MACAC,eAAe,EAAE;IACnB,CAAC,CAAC;IACFC,CAAC,EAAEP,KAAK,CAACK,MAAM,CAAC,EAAE,EAAE;MAClB;MACAC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC,CAAC;EACFE,IAAI,EAAER,KAAK,CAACG,QAAQ,CAAC;IACnBM,KAAK,EAAET,KAAK,CAACK,MAAM,CAAC,GAAG,EAAE;MACvBK,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;MAChBJ,eAAe,EAAE;IACnB,CAAC;EACH,CAAC,CAAC;EACFK,MAAM,EAAEX,KAAK,CAACG,QAAQ,CAAC;IACrBK,IAAI,EAAER,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC;IACrBO,KAAK,EAAEZ,KAAK,CAACa,IAAI,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC;IAC7CC,MAAM,EAAElB,KAAK,CAACK,MAAM,CAAC,CAAC,EAAE;MACtBK,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MACfJ,eAAe,EAAE;IACnB,CAAC;EACH,CAAC,CAAC;EACFa,GAAG,EAAEnB,KAAK,CAACoB,MAAM,CAAC,oBAAoB,CAAC;EACvCC,OAAO,EAAErB,KAAK,CAACK,MAAM,CAAC,CAAC,EAAE;IACvBK,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACbJ,eAAe,EAAE;EACnB,CAAC,CAAC;EACFgB,OAAO,EAAEtB,KAAK,CAACuB,OAAO,CAAC,IAAI,CAAC;EAC5BC,KAAK,EAAExB,KAAK,CAACK,MAAM,CAAC,CAAC,EAAE;IAAEK,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;IAAEJ,eAAe,EAAE;EAAI,CAAC,CAAC;EACjEmB,MAAM,EAAEzB,KAAK,CAAC0B,aAAa,CAAC,IAAI,EAAE;IAChCC,MAAM,EAAE,KAAK;IACb,CAAC,EAAE,GAAG;IACN,EAAE,EAAE,IAAI;IACR,GAAG,EAAE,KAAK;IACV,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE;EACT,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}