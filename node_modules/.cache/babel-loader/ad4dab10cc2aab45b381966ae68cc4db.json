{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/stage.js\";\nimport React from 'react';\nimport styled from 'styled-components';\n// import { initialConfig } from '../constants';\n// import studio from '@theatre/studio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n_c = Wrapper;\nconst FontElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c2 = FontElement;\nconst ImageElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\n// 如何讓透過 local-storage 裡 render 的資料可以被選取？\n// 注意：但純 render，要被轉換成 embedded 的不需要\n_c3 = ImageElement;\nexport default function Stage(_ref) {\n  let {\n    storedData,\n    sheet\n  } = _ref;\n  const fontElements = storedData.filter(data => data.type === 'font').map((data, index) => {\n    const obj = sheet.object(`${data.id}`, {\n      ...initialConfig.FONT,\n      content: types.string(`${data.content}`)\n    });\n    return /*#__PURE__*/_jsxDEV(FontElement, {\n      id: data.id,\n      onClick: () => {\n        // const obj = sheet.object(data.id, initialConfig.FONT);\n        studio.setSelection([obj]);\n      },\n      children: data.content\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  });\n  const imageElements = storedData.filter(data => data.type === 'image').map((data, index) => {\n    const style = {\n      backgroundImage: `url(${data.url})`\n    };\n    return /*#__PURE__*/_jsxDEV(ImageElement, {\n      id: data.id,\n      style: style\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: \"theatre-stage\",\n    children: [fontElements, imageElements]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_c4 = Stage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"FontElement\");\n$RefreshReg$(_c3, \"ImageElement\");\n$RefreshReg$(_c4, \"Stage\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Wrapper","div","_c","FontElement","_c2","ImageElement","_c3","Stage","_ref","storedData","sheet","fontElements","filter","data","type","map","index","obj","object","id","initialConfig","FONT","content","types","string","onClick","studio","setSelection","children","fileName","_jsxFileName","lineNumber","columnNumber","imageElements","style","backgroundImage","url","_c4","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/stage.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n// import { initialConfig } from '../constants';\n// import studio from '@theatre/studio';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n\nconst FontElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ImageElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\n// 如何讓透過 local-storage 裡 render 的資料可以被選取？\n// 注意：但純 render，要被轉換成 embedded 的不需要\nexport default function Stage({ storedData, sheet }) {\n  const fontElements = storedData\n    .filter((data) => data.type === 'font')\n    .map((data, index) => {\n      const obj = sheet.object(`${data.id}`, {\n        ...initialConfig.FONT,\n        content: types.string(`${data.content}`),\n      });\n\n      return (\n        <FontElement\n          key={index}\n          id={data.id}\n          onClick={() => {\n            // const obj = sheet.object(data.id, initialConfig.FONT);\n            studio.setSelection([obj]);\n          }}\n        >\n          {data.content}\n        </FontElement>\n      );\n    });\n\n  const imageElements = storedData\n    .filter((data) => data.type === 'image')\n    .map((data, index) => {\n      const style = { backgroundImage: `url(${data.url})` };\n      return <ImageElement key={index} id={data.id} style={style} />;\n    });\n\n  return (\n    <Wrapper id='theatre-stage'>\n      {fontElements}\n      {imageElements}\n    </Wrapper>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,OAAO;AAMb,MAAMG,WAAW,GAAGN,MAAM,CAACI,GAAI;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GALID,WAAW;AAOjB,MAAME,YAAY,GAAGR,MAAM,CAACI,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AAAAK,GAAA,GAXMD,YAAY;AAYlB,eAAe,SAASE,KAAKA,CAAAC,IAAA,EAAwB;EAAA,IAAvB;IAAEC,UAAU;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACjD,MAAMG,YAAY,GAAGF,UAAU,CAC5BG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,MAAM,CAAC,CACtCC,GAAG,CAAC,CAACF,IAAI,EAAEG,KAAK,KAAK;IACpB,MAAMC,GAAG,GAAGP,KAAK,CAACQ,MAAM,CAAE,GAAEL,IAAI,CAACM,EAAG,EAAC,EAAE;MACrC,GAAGC,aAAa,CAACC,IAAI;MACrBC,OAAO,EAAEC,KAAK,CAACC,MAAM,CAAE,GAAEX,IAAI,CAACS,OAAQ,EAAC;IACzC,CAAC,CAAC;IAEF,oBACEvB,OAAA,CAACI,WAAW;MAEVgB,EAAE,EAAEN,IAAI,CAACM,EAAG;MACZM,OAAO,EAAEA,CAAA,KAAM;QACb;QACAC,MAAM,CAACC,YAAY,CAAC,CAACV,GAAG,CAAC,CAAC;MAC5B,CAAE;MAAAW,QAAA,EAEDf,IAAI,CAACS;IAAO,GAPRN,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQC,CAAC;EAElB,CAAC,CAAC;EAEJ,MAAMC,aAAa,GAAGxB,UAAU,CAC7BG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC,CACvCC,GAAG,CAAC,CAACF,IAAI,EAAEG,KAAK,KAAK;IACpB,MAAMkB,KAAK,GAAG;MAAEC,eAAe,EAAG,OAAMtB,IAAI,CAACuB,GAAI;IAAG,CAAC;IACrD,oBAAOrC,OAAA,CAACM,YAAY;MAAac,EAAE,EAAEN,IAAI,CAACM,EAAG;MAACe,KAAK,EAAEA;IAAM,GAAjClB,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA8B,CAAC;EAChE,CAAC,CAAC;EAEJ,oBACEjC,OAAA,CAACC,OAAO;IAACmB,EAAE,EAAC,eAAe;IAAAS,QAAA,GACxBjB,YAAY,EACZsB,aAAa;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACK,GAAA,GApCuB9B,KAAK;AAAA,IAAAL,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAA+B,GAAA;AAAAC,YAAA,CAAApC,EAAA;AAAAoC,YAAA,CAAAlC,GAAA;AAAAkC,YAAA,CAAAhC,GAAA;AAAAgC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}