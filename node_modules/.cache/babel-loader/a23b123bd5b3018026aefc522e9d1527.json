{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _axios = _interopRequireDefault(require(\"axios\"));\nvar _errors = _interopRequireDefault(require(\"@twreporter/errors\"));\nvar _events = _interopRequireDefault(require(\"events\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n *  @typedef {'error'|'councilMember'|'mayor'|'president'|'legislater'|'referendum'} SupportEventType\n *  @typedef {import('../react-components/votes-comparison/typedef').CouncilMemberElection} CouncilMemberElection\n *  @typedef {import('../react-components/votes-comparison/typedef').CountyMayorElection} CountyMayorElection\n *  @typedef {import('../react-components/votes-comparison/typedef').LegislatorElection} LegislatorElection\n *  @typedef {import('../react-components/votes-comparison/typedef').LegislatorPartyElection} LegislatorPartyElection\n *  @typedef {import('../react-components/votes-comparison/typedef').PresidentElection} PresidentElection\n *  @typedef {import('../react-components/votes-comparison/typedef').ReferendumElection} ReferendumElection\n */\n\n/**\n *  Example: 抓 2018 年台北市市議員的選舉結果\n *\n *  let dataLoader = new Loader({\n *    apiUrl: 'https://whoareyou-gcs.readr.tw/elections',\n *    version: 'v2',\n *  })\n *\n *  // For server side rendering,\n *  // load data once.\n *  try {\n *    // fetch data once\n *    const data =  await dataLoader.loadCouncilMemberData({\n *      year: '2018',\n *      district: 'taipeiCity',\n *    })\n *  } catch(err) {\n *    // handle error\n *  }\n *\n *  // For client side rendering,\n *  // load data periodically and make React component re-render\n *  useEffect(() => {\n *    const handleError = (err) => {\n *      // do something for loading error\n *    }\n *\n *    const handleData = (data) => {\n *      // call React component `setState`\n *      setState(data)\n *    }\n *\n *    dataLoader.addEventListener('error', handleError)\n *    dataLoader.addEventListener('councilMember', setState)\n *\n *    // after register event listener\n *    // start to load data periodically\n *    dataLoader.loadCouncilMemberData({\n *      year: '2018',\n *      district: 'taipeiCity',\n *      toLoadPeriodically: true,\n *      loadInterval: 300, // seconds\n *    })\n *\n *    return () => {\n *      dataLoader.removeEventListener('error', handleError)\n *      dataLoader.removeEventListener('councilMember', setState)\n *      dataLoader = null\n *    }\n *  }, [])\n *\n */\nlet Loader = /*#__PURE__*/function () {\n  /** @type events.EventEmitter */\n\n  /**\n   *  @constructor\n   *  @param {Object} props\n   *  @param {string} [props.apiUrl='https://whoareyou-gcs.readr.tw']\n   *  @param {string} [props.version=v2]\n   */\n  function Loader(_ref) {\n    let {\n      apiUrl = 'https://whoareyou-gcs.readr.tw/elections',\n      version = 'v2'\n    } = _ref;\n    _classCallCheck(this, Loader);\n    _defineProperty(this, \"eventEmitter\", null);\n    _defineProperty(this, \"apiUrl\", 'https://whoareyou-gcs.readr.tw/elections');\n    _defineProperty(this, \"version\", 'v2');\n    _defineProperty(this, \"timers\", {});\n    this.eventEmitter = new _events.default.EventEmitter();\n    this.apiUrl = apiUrl;\n    this.version = version === 'v1' ? '' : version;\n  }\n  /**\n   *  Load data from web service.\n   *  @param {Object} props\n   *  @param {string} props.year\n   *  @param {string} props.type\n   *  @param {string} props.district\n   *  @throws Error\n   *  @returns {Promise<Object>}\n   */\n\n  _createClass(Loader, [{\n    key: \"loadData\",\n    value: async function loadData(_ref2) {\n      let {\n        year,\n        type,\n        district\n      } = _ref2;\n      try {\n        const axiosRes = await _axios.default.get(`${this.apiUrl}/${this.version}/${year}/${type}/${district}.json`);\n        return axiosRes === null || axiosRes === void 0 ? void 0 : axiosRes.data;\n      } catch (err) {\n        const annotatedErr = _errors.default.helpers.annotateAxiosError(err);\n        throw annotatedErr;\n      }\n    }\n    /**\n     *  @typedef {'all'|'normal'|'indigenous'|'mountainIndigenous'|'plainIndigenous'} CouncilMemberType\n     */\n\n    /**\n     *  Load data from web service.\n     *  @param {Object} props\n     *  @param {string} props.year\n     *  @param {string} props.district - county/city name, see `Loader.electionDistricts` for more info\n     *  @param {CouncilMemberType[]} [props.includes=['all']]\n     *  @param {number} [props.periodicalLoading=-1]\n     *  @throws Error\n     *  @returns {Promise<CouncilMemberElection>}\n     */\n  }, {\n    key: \"loadCouncilMemberDataForElectionMapProject\",\n    value: async function loadCouncilMemberDataForElectionMapProject(_ref3) {\n      let {\n        year,\n        district,\n        includes: _includes = ['all']\n      } = _ref3;\n      var _includes2, _data, _data$districts;\n      let data;\n      data = await this.loadData({\n        type: 'councilMember',\n        year,\n        district\n      });\n      let includes = _includes;\n      if (((_includes2 = includes) === null || _includes2 === void 0 ? void 0 : _includes2.indexOf('all')) > -1) {\n        includes = ['normal', 'indigenous', 'mountainIndigenous', 'plainIndigenous'];\n      }\n      const districts = [];\n      (_data = data) === null || _data === void 0 ? void 0 : (_data$districts = _data.districts) === null || _data$districts === void 0 ? void 0 : _data$districts.forEach(d => {\n        if (includes.indexOf(d === null || d === void 0 ? void 0 : d.type) > -1) {\n          switch (d === null || d === void 0 ? void 0 : d.type) {\n            case 'plainIndigenous':\n              {\n                d.districtName = `第${d.districtName}選區（平地）`;\n                d.fullDistrictName = d.districtName;\n                districts.push(d);\n                break;\n              }\n            case 'mountainIndigenous':\n              {\n                d.districtName = `第${d.districtName}選區（山地）`;\n                d.fullDistrictName = d.districtName;\n                districts.push(d);\n                break;\n              }\n            case 'indigenous':\n            case 'normal':\n              {\n                d.districtName = `第${d.districtName}選區`;\n                d.fullDistrictName = d.districtName;\n                districts.push(d);\n                break;\n              }\n            default:\n              {// do nothing\n              }\n          }\n        }\n      });\n      data.districts = districts;\n      return data;\n    }\n    /**\n     *  Load data from web service.\n     *  @param {Object} props\n     *  @param {string} props.year\n     *  @param {string} props.district - county/city name, see `Loader.electionDistricts` for more info\n     *  @param {boolean} [props.toLoadPeriodically=false]\n     *  @param {number} [props.loadInterval] - available only when `toLoadPeriodically=true`, and its value must be greater than 30. Unit is second.\n     *  @throws Error\n     *  @returns {Promise<void|CouncilMemberElection>}\n     */\n  }, {\n    key: \"loadCouncilMemberData\",\n    value: function loadCouncilMemberData(_ref4) {\n      let {\n        year,\n        district,\n        toLoadPeriodically = false,\n        loadInterval\n      } = _ref4;\n      if (toLoadPeriodically) {\n        return this.loadDataPeriodically({\n          type: 'councilMember',\n          year,\n          district,\n          interval: loadInterval\n        });\n      }\n      return this.loadData({\n        type: 'councilMember',\n        year,\n        district\n      });\n    }\n    /**\n     *  @param {Object} props\n     *  @param {string} props.year\n     *  @param {'indigenous'|'party'|'district'} props.type\n     *  @param {string} [props.district] - avaliable only when `type` is `district`\n     *  @param {boolean} [props.toLoadPeriodically=false]\n     *  @param {number} [props.loadInterval] - available only when `toLoadPeriodically=true`, and its value must be greater than 30. Unit is second.\n     *  @throws Error\n     *  @returns {Promise<void|LegislatorElection|LegislatorPartyElection>}\n     */\n  }, {\n    key: \"loadLegislaterData\",\n    value: function loadLegislaterData(_ref5) {\n      let {\n        year,\n        type,\n        district: _district,\n        toLoadPeriodically = false,\n        loadInterval\n      } = _ref5;\n      let district = '';\n      switch (type) {\n        case 'indigenous':\n          {\n            district = 'indigenous';\n            break;\n          }\n        case 'party':\n          {\n            district = 'party';\n            break;\n          }\n        case 'district':\n          {\n            district = _district;\n          }\n        default:\n          {\n            throw new Error('type should be either \"indigenous\", \"party\" or \"district\"');\n          }\n      }\n      if (toLoadPeriodically) {\n        return this.loadDataPeriodically({\n          type: 'legislater',\n          year,\n          district,\n          interval: loadInterval\n        });\n      }\n      return this.loadData({\n        type: 'legislater',\n        year,\n        district\n      });\n    }\n    /**\n     *  @param {Object} props\n     *  @param {string} props.year\n     *  @param {boolean} [props.toLoadPeriodically=false]\n     *  @param {number} [props.loadInterval] - available only when `toLoadPeriodically=true`, and its value must be greater than 30. Unit is second.\n     *  @throws Error\n     *  @returns {Promise<void|PresidentElection>}\n     */\n  }, {\n    key: \"loadPresidentData\",\n    value: function loadPresidentData(_ref6) {\n      let {\n        year,\n        toLoadPeriodically = false,\n        loadInterval\n      } = _ref6;\n      if (toLoadPeriodically) {\n        return this.loadDataPeriodically({\n          type: 'presidenet',\n          year,\n          district: 'all',\n          interval: loadInterval\n        });\n      }\n      return this.loadData({\n        type: 'president',\n        year,\n        district: 'all'\n      });\n    }\n    /**\n     *  @param {Object} props\n     *  @param {string} props.year\n     *  @param {boolean} [props.toLoadPeriodically=false]\n     *  @param {number} [props.loadInterval] - available only when `toLoadPeriodically=true`, and its value must be greater than 30. Unit is second.\n     *  @throws Error\n     *  @returns {Promise<void|CountyMayorElection>}\n     */\n  }, {\n    key: \"loadMayorData\",\n    value: function loadMayorData(_ref7) {\n      let {\n        year,\n        toLoadPeriodically = false,\n        loadInterval\n      } = _ref7;\n      if (toLoadPeriodically) {\n        return this.loadDataPeriodically({\n          type: 'mayor',\n          year,\n          district: 'all',\n          interval: loadInterval\n        });\n      }\n      return this.loadData({\n        type: 'mayor',\n        year,\n        district: 'all'\n      });\n    }\n    /**\n     *  @param {Object} props\n     *  @param {string} props.year\n     *  @param {boolean} [props.toLoadPeriodically=false]\n     *  @param {number} [props.loadInterval] - available only when `toLoadPeriodically=true`, and its value must be greater than 30. Unit is second.\n     *  @throws Error\n     *  @returns {Promise<void|ReferendumElection>}\n     */\n  }, {\n    key: \"loadReferendumData\",\n    value: function loadReferendumData(_ref8) {\n      let {\n        year,\n        toLoadPeriodically = false,\n        loadInterval\n      } = _ref8;\n      if (toLoadPeriodically) {\n        return this.loadDataPeriodically({\n          type: 'referendum',\n          year,\n          district: 'all',\n          interval: loadInterval\n        });\n      }\n      return this.loadData({\n        type: 'referendum',\n        year,\n        district: 'all'\n      });\n    }\n    /**\n     *  Load data from web service,\n     *  and take advantage of event emitter to pass data to the event subscribers.\n     *  This function will take `props.interval` first.\n     *  If `props.interval` not provided, the function\n     *  will take web service response header `Cache-Control`'s `max-age` into account.\n     *  Value of `max-age` will be used to `setTimeout` a timer.\n     *  When time is up, the timer will load data,\n     *  and emit it again.\n     *  if `max-age` is not defined, the default timeout will be 3600.\n     *\n     *  @param {Object} props\n     *  @param {string} props.year\n     *  @param {string} props.type\n     *  @param {string} props.district\n     *  @param {number} [props.interval]\n     *  @returns {Promise<void>}\n     */\n  }, {\n    key: \"loadDataPeriodically\",\n    value: async function loadDataPeriodically(_ref9) {\n      let {\n        year,\n        type,\n        district,\n        interval\n      } = _ref9;\n      const url = `${this.apiUrl}/${this.version}/${year}/${type}/${district}.json`;\n      let axiosRes;\n      let annotatedErr;\n      try {\n        axiosRes = await _axios.default.get(url);\n      } catch (err) {\n        annotatedErr = _errors.default.helpers.annotateAxiosError(err);\n        annotatedErr = _errors.default.helpers.wrap(annotatedErr, 'DataLoaderError', `Error to load data from ${url}`);\n      }\n      const minimumInterval = 0; // seconds\n\n      const defaultMaxAge = 3600; // seconds\n\n      let maxAge = defaultMaxAge;\n      if (annotatedErr) {\n        this.eventEmitter.emit('error', annotatedErr);\n      } else {\n        var _axiosRes, _axiosRes2, _axiosRes2$headers, _cacheControl$match;\n        this.eventEmitter.emit(type, (_axiosRes = axiosRes) === null || _axiosRes === void 0 ? void 0 : _axiosRes.data);\n        const cacheControl = (_axiosRes2 = axiosRes) === null || _axiosRes2 === void 0 ? void 0 : (_axiosRes2$headers = _axiosRes2.headers) === null || _axiosRes2$headers === void 0 ? void 0 : _axiosRes2$headers['cache-control'];\n        maxAge = interval > minimumInterval ? interval : parseInt((_cacheControl$match = cacheControl.match(/max-age=([\\d]+)/)) === null || _cacheControl$match === void 0 ? void 0 : _cacheControl$match[1]);\n        if (isNaN(maxAge)) {\n          maxAge = defaultMaxAge;\n        }\n      }\n      this.timers[type] = setTimeout(async () => {\n        await this.loadDataPeriodically({\n          year,\n          type,\n          district,\n          interval\n        });\n      }, maxAge * 1000);\n    }\n  }, {\n    key: \"clearTimer\",\n    value: function clearTimer(eventType) {\n      var _this$timers;\n      if ((_this$timers = this.timers) !== null && _this$timers !== void 0 && _this$timers.hasOwnProperty(eventType)) {\n        clearTimeout(this.timers[eventType]);\n        delete this.timers[eventType];\n      }\n    }\n    /**\n     *  @param {SupportEventType} eventType\n     *  @param {(...args: any[]) => void} cb\n     *  @returns void\n     */\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(eventType, cb) {\n      if (Loader.supportTypes.indexOf(eventType) > -1) {\n        this.eventEmitter.addListener(eventType, cb);\n      }\n    }\n    /**\n     *  @param {SupportEventType} eventType\n     *  @param {(...args: any[]) => void} cb\n     *  @returns void\n     */\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(eventType, cb) {\n      if (Loader.supportTypes.indexOf(eventType) > -1) {\n        this.eventEmitter.removeListener(eventType, cb);\n        if (this.eventEmitter.listenerCount(eventType) === 0) {\n          this.clearTimer(eventType);\n        }\n      }\n    }\n  }]);\n  return Loader;\n}(); // Event support types could be added or removed if necessarily\n\nexports.default = Loader;\nLoader.supportTypes = ['error', 'councilMember', 'mayor', 'president', 'legislater', 'referendum'];\nLoader.electionTypes = ['president',\n// 總統\n'legislator',\n// 立法委員\n'mayor',\n// 縣市首長\n'councilMember' // 縣市議員\n];\n\nLoader.electionYears = ['1994', '1997', '1998', '2001', '2002', '2005', '2006', '2009', '2010', '2012', '2014', '2016', '2018', '2020', '2022'];\nLoader.electionDistricts = ['taipeiCity', 'newTaipeiCity', 'taoyuanCity', 'taichungCity', 'tainanCity', 'kaohsiungCity', 'hsinchuCounty', 'miaoliCounty', 'changhuaCounty', 'nantouCounty', 'yunlinCounty', 'chiayiCounty', 'pingtungCounty', 'yilanCounty', 'hualienCounty', 'taitungCounty', 'penghuCounty', 'kinmenCounty', 'lienchiangCounty', 'keelungCity', 'hsinchuCity', 'chiayiCity'];","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_axios","_interopRequireDefault","require","_errors","_events","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","_defineProperty","Loader","_ref","apiUrl","version","eventEmitter","EventEmitter","loadData","_ref2","year","type","district","axiosRes","get","data","err","annotatedErr","helpers","annotateAxiosError","loadCouncilMemberDataForElectionMapProject","_ref3","includes","_includes","_includes2","_data","_data$districts","indexOf","districts","forEach","d","districtName","fullDistrictName","push","loadCouncilMemberData","_ref4","toLoadPeriodically","loadInterval","loadDataPeriodically","interval","loadLegislaterData","_ref5","_district","Error","loadPresidentData","_ref6","loadMayorData","_ref7","loadReferendumData","_ref8","_ref9","url","wrap","minimumInterval","defaultMaxAge","maxAge","emit","_axiosRes","_axiosRes2","_axiosRes2$headers","_cacheControl$match","cacheControl","headers","parseInt","match","isNaN","timers","setTimeout","clearTimer","eventType","_this$timers","hasOwnProperty","clearTimeout","addEventListener","cb","supportTypes","addListener","removeEventListener","removeListener","listenerCount","electionTypes","electionYears","electionDistricts"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/node_modules/@readr-media/react-election-widgets/lib/votes-comparison/data-loader.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _errors = _interopRequireDefault(require(\"@twreporter/errors\"));\n\nvar _events = _interopRequireDefault(require(\"events\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n *  @typedef {'error'|'councilMember'|'mayor'|'president'|'legislater'|'referendum'} SupportEventType\n *  @typedef {import('../react-components/votes-comparison/typedef').CouncilMemberElection} CouncilMemberElection\n *  @typedef {import('../react-components/votes-comparison/typedef').CountyMayorElection} CountyMayorElection\n *  @typedef {import('../react-components/votes-comparison/typedef').LegislatorElection} LegislatorElection\n *  @typedef {import('../react-components/votes-comparison/typedef').LegislatorPartyElection} LegislatorPartyElection\n *  @typedef {import('../react-components/votes-comparison/typedef').PresidentElection} PresidentElection\n *  @typedef {import('../react-components/votes-comparison/typedef').ReferendumElection} ReferendumElection\n */\n\n/**\n *  Example: 抓 2018 年台北市市議員的選舉結果\n *\n *  let dataLoader = new Loader({\n *    apiUrl: 'https://whoareyou-gcs.readr.tw/elections',\n *    version: 'v2',\n *  })\n *\n *  // For server side rendering,\n *  // load data once.\n *  try {\n *    // fetch data once\n *    const data =  await dataLoader.loadCouncilMemberData({\n *      year: '2018',\n *      district: 'taipeiCity',\n *    })\n *  } catch(err) {\n *    // handle error\n *  }\n *\n *  // For client side rendering,\n *  // load data periodically and make React component re-render\n *  useEffect(() => {\n *    const handleError = (err) => {\n *      // do something for loading error\n *    }\n *\n *    const handleData = (data) => {\n *      // call React component `setState`\n *      setState(data)\n *    }\n *\n *    dataLoader.addEventListener('error', handleError)\n *    dataLoader.addEventListener('councilMember', setState)\n *\n *    // after register event listener\n *    // start to load data periodically\n *    dataLoader.loadCouncilMemberData({\n *      year: '2018',\n *      district: 'taipeiCity',\n *      toLoadPeriodically: true,\n *      loadInterval: 300, // seconds\n *    })\n *\n *    return () => {\n *      dataLoader.removeEventListener('error', handleError)\n *      dataLoader.removeEventListener('councilMember', setState)\n *      dataLoader = null\n *    }\n *  }, [])\n *\n */\nlet Loader = /*#__PURE__*/function () {\n  /** @type events.EventEmitter */\n\n  /**\n   *  @constructor\n   *  @param {Object} props\n   *  @param {string} [props.apiUrl='https://whoareyou-gcs.readr.tw']\n   *  @param {string} [props.version=v2]\n   */\n  function Loader({\n    apiUrl = 'https://whoareyou-gcs.readr.tw/elections',\n    version = 'v2'\n  }) {\n    _classCallCheck(this, Loader);\n\n    _defineProperty(this, \"eventEmitter\", null);\n\n    _defineProperty(this, \"apiUrl\", 'https://whoareyou-gcs.readr.tw/elections');\n\n    _defineProperty(this, \"version\", 'v2');\n\n    _defineProperty(this, \"timers\", {});\n\n    this.eventEmitter = new _events.default.EventEmitter();\n    this.apiUrl = apiUrl;\n    this.version = version === 'v1' ? '' : version;\n  }\n  /**\n   *  Load data from web service.\n   *  @param {Object} props\n   *  @param {string} props.year\n   *  @param {string} props.type\n   *  @param {string} props.district\n   *  @throws Error\n   *  @returns {Promise<Object>}\n   */\n\n\n  _createClass(Loader, [{\n    key: \"loadData\",\n    value: async function loadData({\n      year,\n      type,\n      district\n    }) {\n      try {\n        const axiosRes = await _axios.default.get(`${this.apiUrl}/${this.version}/${year}/${type}/${district}.json`);\n        return axiosRes === null || axiosRes === void 0 ? void 0 : axiosRes.data;\n      } catch (err) {\n        const annotatedErr = _errors.default.helpers.annotateAxiosError(err);\n\n        throw annotatedErr;\n      }\n    }\n    /**\n     *  @typedef {'all'|'normal'|'indigenous'|'mountainIndigenous'|'plainIndigenous'} CouncilMemberType\n     */\n\n    /**\n     *  Load data from web service.\n     *  @param {Object} props\n     *  @param {string} props.year\n     *  @param {string} props.district - county/city name, see `Loader.electionDistricts` for more info\n     *  @param {CouncilMemberType[]} [props.includes=['all']]\n     *  @param {number} [props.periodicalLoading=-1]\n     *  @throws Error\n     *  @returns {Promise<CouncilMemberElection>}\n     */\n\n  }, {\n    key: \"loadCouncilMemberDataForElectionMapProject\",\n    value: async function loadCouncilMemberDataForElectionMapProject({\n      year,\n      district,\n      includes: _includes = ['all']\n    }) {\n      var _includes2, _data, _data$districts;\n\n      let data;\n      data = await this.loadData({\n        type: 'councilMember',\n        year,\n        district\n      });\n      let includes = _includes;\n\n      if (((_includes2 = includes) === null || _includes2 === void 0 ? void 0 : _includes2.indexOf('all')) > -1) {\n        includes = ['normal', 'indigenous', 'mountainIndigenous', 'plainIndigenous'];\n      }\n\n      const districts = [];\n      (_data = data) === null || _data === void 0 ? void 0 : (_data$districts = _data.districts) === null || _data$districts === void 0 ? void 0 : _data$districts.forEach(d => {\n        if (includes.indexOf(d === null || d === void 0 ? void 0 : d.type) > -1) {\n          switch (d === null || d === void 0 ? void 0 : d.type) {\n            case 'plainIndigenous':\n              {\n                d.districtName = `第${d.districtName}選區（平地）`;\n                d.fullDistrictName = d.districtName;\n                districts.push(d);\n                break;\n              }\n\n            case 'mountainIndigenous':\n              {\n                d.districtName = `第${d.districtName}選區（山地）`;\n                d.fullDistrictName = d.districtName;\n                districts.push(d);\n                break;\n              }\n\n            case 'indigenous':\n            case 'normal':\n              {\n                d.districtName = `第${d.districtName}選區`;\n                d.fullDistrictName = d.districtName;\n                districts.push(d);\n                break;\n              }\n\n            default:\n              {// do nothing\n              }\n          }\n        }\n      });\n      data.districts = districts;\n      return data;\n    }\n    /**\n     *  Load data from web service.\n     *  @param {Object} props\n     *  @param {string} props.year\n     *  @param {string} props.district - county/city name, see `Loader.electionDistricts` for more info\n     *  @param {boolean} [props.toLoadPeriodically=false]\n     *  @param {number} [props.loadInterval] - available only when `toLoadPeriodically=true`, and its value must be greater than 30. Unit is second.\n     *  @throws Error\n     *  @returns {Promise<void|CouncilMemberElection>}\n     */\n\n  }, {\n    key: \"loadCouncilMemberData\",\n    value: function loadCouncilMemberData({\n      year,\n      district,\n      toLoadPeriodically = false,\n      loadInterval\n    }) {\n      if (toLoadPeriodically) {\n        return this.loadDataPeriodically({\n          type: 'councilMember',\n          year,\n          district,\n          interval: loadInterval\n        });\n      }\n\n      return this.loadData({\n        type: 'councilMember',\n        year,\n        district\n      });\n    }\n    /**\n     *  @param {Object} props\n     *  @param {string} props.year\n     *  @param {'indigenous'|'party'|'district'} props.type\n     *  @param {string} [props.district] - avaliable only when `type` is `district`\n     *  @param {boolean} [props.toLoadPeriodically=false]\n     *  @param {number} [props.loadInterval] - available only when `toLoadPeriodically=true`, and its value must be greater than 30. Unit is second.\n     *  @throws Error\n     *  @returns {Promise<void|LegislatorElection|LegislatorPartyElection>}\n     */\n\n  }, {\n    key: \"loadLegislaterData\",\n    value: function loadLegislaterData({\n      year,\n      type,\n      district: _district,\n      toLoadPeriodically = false,\n      loadInterval\n    }) {\n      let district = '';\n\n      switch (type) {\n        case 'indigenous':\n          {\n            district = 'indigenous';\n            break;\n          }\n\n        case 'party':\n          {\n            district = 'party';\n            break;\n          }\n\n        case 'district':\n          {\n            district = _district;\n          }\n\n        default:\n          {\n            throw new Error('type should be either \"indigenous\", \"party\" or \"district\"');\n          }\n      }\n\n      if (toLoadPeriodically) {\n        return this.loadDataPeriodically({\n          type: 'legislater',\n          year,\n          district,\n          interval: loadInterval\n        });\n      }\n\n      return this.loadData({\n        type: 'legislater',\n        year,\n        district\n      });\n    }\n    /**\n     *  @param {Object} props\n     *  @param {string} props.year\n     *  @param {boolean} [props.toLoadPeriodically=false]\n     *  @param {number} [props.loadInterval] - available only when `toLoadPeriodically=true`, and its value must be greater than 30. Unit is second.\n     *  @throws Error\n     *  @returns {Promise<void|PresidentElection>}\n     */\n\n  }, {\n    key: \"loadPresidentData\",\n    value: function loadPresidentData({\n      year,\n      toLoadPeriodically = false,\n      loadInterval\n    }) {\n      if (toLoadPeriodically) {\n        return this.loadDataPeriodically({\n          type: 'presidenet',\n          year,\n          district: 'all',\n          interval: loadInterval\n        });\n      }\n\n      return this.loadData({\n        type: 'president',\n        year,\n        district: 'all'\n      });\n    }\n    /**\n     *  @param {Object} props\n     *  @param {string} props.year\n     *  @param {boolean} [props.toLoadPeriodically=false]\n     *  @param {number} [props.loadInterval] - available only when `toLoadPeriodically=true`, and its value must be greater than 30. Unit is second.\n     *  @throws Error\n     *  @returns {Promise<void|CountyMayorElection>}\n     */\n\n  }, {\n    key: \"loadMayorData\",\n    value: function loadMayorData({\n      year,\n      toLoadPeriodically = false,\n      loadInterval\n    }) {\n      if (toLoadPeriodically) {\n        return this.loadDataPeriodically({\n          type: 'mayor',\n          year,\n          district: 'all',\n          interval: loadInterval\n        });\n      }\n\n      return this.loadData({\n        type: 'mayor',\n        year,\n        district: 'all'\n      });\n    }\n    /**\n     *  @param {Object} props\n     *  @param {string} props.year\n     *  @param {boolean} [props.toLoadPeriodically=false]\n     *  @param {number} [props.loadInterval] - available only when `toLoadPeriodically=true`, and its value must be greater than 30. Unit is second.\n     *  @throws Error\n     *  @returns {Promise<void|ReferendumElection>}\n     */\n\n  }, {\n    key: \"loadReferendumData\",\n    value: function loadReferendumData({\n      year,\n      toLoadPeriodically = false,\n      loadInterval\n    }) {\n      if (toLoadPeriodically) {\n        return this.loadDataPeriodically({\n          type: 'referendum',\n          year,\n          district: 'all',\n          interval: loadInterval\n        });\n      }\n\n      return this.loadData({\n        type: 'referendum',\n        year,\n        district: 'all'\n      });\n    }\n    /**\n     *  Load data from web service,\n     *  and take advantage of event emitter to pass data to the event subscribers.\n     *  This function will take `props.interval` first.\n     *  If `props.interval` not provided, the function\n     *  will take web service response header `Cache-Control`'s `max-age` into account.\n     *  Value of `max-age` will be used to `setTimeout` a timer.\n     *  When time is up, the timer will load data,\n     *  and emit it again.\n     *  if `max-age` is not defined, the default timeout will be 3600.\n     *\n     *  @param {Object} props\n     *  @param {string} props.year\n     *  @param {string} props.type\n     *  @param {string} props.district\n     *  @param {number} [props.interval]\n     *  @returns {Promise<void>}\n     */\n\n  }, {\n    key: \"loadDataPeriodically\",\n    value: async function loadDataPeriodically({\n      year,\n      type,\n      district,\n      interval\n    }) {\n      const url = `${this.apiUrl}/${this.version}/${year}/${type}/${district}.json`;\n      let axiosRes;\n      let annotatedErr;\n\n      try {\n        axiosRes = await _axios.default.get(url);\n      } catch (err) {\n        annotatedErr = _errors.default.helpers.annotateAxiosError(err);\n        annotatedErr = _errors.default.helpers.wrap(annotatedErr, 'DataLoaderError', `Error to load data from ${url}`);\n      }\n\n      const minimumInterval = 0; // seconds\n\n      const defaultMaxAge = 3600; // seconds\n\n      let maxAge = defaultMaxAge;\n\n      if (annotatedErr) {\n        this.eventEmitter.emit('error', annotatedErr);\n      } else {\n        var _axiosRes, _axiosRes2, _axiosRes2$headers, _cacheControl$match;\n\n        this.eventEmitter.emit(type, (_axiosRes = axiosRes) === null || _axiosRes === void 0 ? void 0 : _axiosRes.data);\n        const cacheControl = (_axiosRes2 = axiosRes) === null || _axiosRes2 === void 0 ? void 0 : (_axiosRes2$headers = _axiosRes2.headers) === null || _axiosRes2$headers === void 0 ? void 0 : _axiosRes2$headers['cache-control'];\n        maxAge = interval > minimumInterval ? interval : parseInt((_cacheControl$match = cacheControl.match(/max-age=([\\d]+)/)) === null || _cacheControl$match === void 0 ? void 0 : _cacheControl$match[1]);\n\n        if (isNaN(maxAge)) {\n          maxAge = defaultMaxAge;\n        }\n      }\n\n      this.timers[type] = setTimeout(async () => {\n        await this.loadDataPeriodically({\n          year,\n          type,\n          district,\n          interval\n        });\n      }, maxAge * 1000);\n    }\n  }, {\n    key: \"clearTimer\",\n    value: function clearTimer(eventType) {\n      var _this$timers;\n\n      if ((_this$timers = this.timers) !== null && _this$timers !== void 0 && _this$timers.hasOwnProperty(eventType)) {\n        clearTimeout(this.timers[eventType]);\n        delete this.timers[eventType];\n      }\n    }\n    /**\n     *  @param {SupportEventType} eventType\n     *  @param {(...args: any[]) => void} cb\n     *  @returns void\n     */\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(eventType, cb) {\n      if (Loader.supportTypes.indexOf(eventType) > -1) {\n        this.eventEmitter.addListener(eventType, cb);\n      }\n    }\n    /**\n     *  @param {SupportEventType} eventType\n     *  @param {(...args: any[]) => void} cb\n     *  @returns void\n     */\n\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(eventType, cb) {\n      if (Loader.supportTypes.indexOf(eventType) > -1) {\n        this.eventEmitter.removeListener(eventType, cb);\n\n        if (this.eventEmitter.listenerCount(eventType) === 0) {\n          this.clearTimer(eventType);\n        }\n      }\n    }\n  }]);\n\n  return Loader;\n}(); // Event support types could be added or removed if necessarily\n\n\nexports.default = Loader;\nLoader.supportTypes = ['error', 'councilMember', 'mayor', 'president', 'legislater', 'referendum'];\nLoader.electionTypes = ['president', // 總統\n'legislator', // 立法委員\n'mayor', // 縣市首長\n'councilMember' // 縣市議員\n];\nLoader.electionYears = ['1994', '1997', '1998', '2001', '2002', '2005', '2006', '2009', '2010', '2012', '2014', '2016', '2018', '2020', '2022'];\nLoader.electionDistricts = ['taipeiCity', 'newTaipeiCity', 'taoyuanCity', 'taichungCity', 'tainanCity', 'kaohsiungCity', 'hsinchuCounty', 'miaoliCounty', 'changhuaCounty', 'nantouCounty', 'yunlinCounty', 'chiayiCounty', 'pingtungCounty', 'yilanCounty', 'hualienCounty', 'taitungCounty', 'penghuCounty', 'kinmenCounty', 'lienchiangCounty', 'keelungCity', 'hsinchuCity', 'chiayiCity'];"],"mappings":"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"},"metadata":{},"sourceType":"script"}