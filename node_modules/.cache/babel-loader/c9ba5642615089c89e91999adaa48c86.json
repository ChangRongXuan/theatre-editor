{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Feedback;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _useRecaptcha = _interopRequireDefault(require(\"./hooks/use-recaptcha\"));\nvar _form = _interopRequireDefault(require(\"./form/form\"));\nvar _themes = _interopRequireDefault(require(\"../themes\"));\nvar _styledComponents = require(\"styled-components\");\nvar _formContext = require(\"./contexts/form-context\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// eslint-disable-line\n\n/**\n * @typedef {import('../typedef').Form} Form\n *\n * @param {Object}  props\n * @param {Form[]}  props.forms\n * @param {boolean} [props.shouldUseRecaptcha=true]\n * @param {string}  [props.theme='covid19']\n * @param {string}  [props.storageKey='corvid-19-query-user-id']\n * @return {JSX.Element}\n */\nfunction Feedback(_ref) {\n  let {\n    forms = [],\n    shouldUseRecaptcha = true,\n    theme = 'covid19',\n    storageKey = 'covid-19-query-user-id'\n  } = _ref;\n  const {\n    verified\n  } = shouldUseRecaptcha ? (0, _useRecaptcha.default)() : {\n    verified: true\n  };\n  theme = Object.keys(_themes.default).includes(theme) ? theme : 'covid19';\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_formContext.StorageKeyContext.Provider, {\n    value: storageKey,\n    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledComponents.ThemeProvider, {\n      theme: _themes.default[theme],\n      children: forms.map(form => /*#__PURE__*/(0, _jsxRuntime.jsx)(_form.default, {\n        form: form,\n        verified: verified\n      }, form.id))\n    })\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","Feedback","_react","_interopRequireDefault","require","_useRecaptcha","_form","_themes","_styledComponents","_formContext","_jsxRuntime","obj","__esModule","_ref","forms","shouldUseRecaptcha","theme","storageKey","verified","keys","includes","jsx","StorageKeyContext","Provider","children","ThemeProvider","map","form","id"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/node_modules/@readr-media/react-feedback/lib/react-components/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Feedback;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _useRecaptcha = _interopRequireDefault(require(\"./hooks/use-recaptcha\"));\n\nvar _form = _interopRequireDefault(require(\"./form/form\"));\n\nvar _themes = _interopRequireDefault(require(\"../themes\"));\n\nvar _styledComponents = require(\"styled-components\");\n\nvar _formContext = require(\"./contexts/form-context\");\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eslint-disable-line\n\n/**\n * @typedef {import('../typedef').Form} Form\n *\n * @param {Object}  props\n * @param {Form[]}  props.forms\n * @param {boolean} [props.shouldUseRecaptcha=true]\n * @param {string}  [props.theme='covid19']\n * @param {string}  [props.storageKey='corvid-19-query-user-id']\n * @return {JSX.Element}\n */\nfunction Feedback({\n  forms = [],\n  shouldUseRecaptcha = true,\n  theme = 'covid19',\n  storageKey = 'covid-19-query-user-id'\n}) {\n  const {\n    verified\n  } = shouldUseRecaptcha ? (0, _useRecaptcha.default)() : {\n    verified: true\n  };\n  theme = Object.keys(_themes.default).includes(theme) ? theme : 'covid19';\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_formContext.StorageKeyContext.Provider, {\n    value: storageKey,\n    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledComponents.ThemeProvider, {\n      theme: _themes.default[theme],\n      children: forms.map(form => /*#__PURE__*/(0, _jsxRuntime.jsx)(_form.default, {\n        form: form,\n        verified: verified\n      }, form.id))\n    })\n  });\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,QAAQ;AAE1B,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;AAErD,IAAIC,aAAa,GAAGF,sBAAsB,CAACC,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAE5E,IAAIE,KAAK,GAAGH,sBAAsB,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;AAE1D,IAAIG,OAAO,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;AAE1D,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,mBAAmB,CAAC;AAEpD,IAAIK,YAAY,GAAGL,OAAO,CAAC,yBAAyB,CAAC;AAErD,IAAIM,WAAW,GAAGN,OAAO,CAAC,mBAAmB,CAAC;AAE9C,SAASD,sBAAsBA,CAACQ,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEX,OAAO,EAAEW;EAAI,CAAC;AAAE;;AAE9F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASV,QAAQA,CAAAY,IAAA,EAKd;EAAA,IALe;IAChBC,KAAK,GAAG,EAAE;IACVC,kBAAkB,GAAG,IAAI;IACzBC,KAAK,GAAG,SAAS;IACjBC,UAAU,GAAG;EACf,CAAC,GAAAJ,IAAA;EACC,MAAM;IACJK;EACF,CAAC,GAAGH,kBAAkB,GAAG,CAAC,CAAC,EAAEV,aAAa,CAACL,OAAO,EAAE,CAAC,GAAG;IACtDkB,QAAQ,EAAE;EACZ,CAAC;EACDF,KAAK,GAAGpB,MAAM,CAACuB,IAAI,CAACZ,OAAO,CAACP,OAAO,CAAC,CAACoB,QAAQ,CAACJ,KAAK,CAAC,GAAGA,KAAK,GAAG,SAAS;EACxE,OAAO,aAAa,CAAC,CAAC,EAAEN,WAAW,CAACW,GAAG,EAAEZ,YAAY,CAACa,iBAAiB,CAACC,QAAQ,EAAE;IAChFxB,KAAK,EAAEkB,UAAU;IACjBO,QAAQ,EAAE,aAAa,CAAC,CAAC,EAAEd,WAAW,CAACW,GAAG,EAAEb,iBAAiB,CAACiB,aAAa,EAAE;MAC3ET,KAAK,EAAET,OAAO,CAACP,OAAO,CAACgB,KAAK,CAAC;MAC7BQ,QAAQ,EAAEV,KAAK,CAACY,GAAG,CAACC,IAAI,IAAI,aAAa,CAAC,CAAC,EAAEjB,WAAW,CAACW,GAAG,EAAEf,KAAK,CAACN,OAAO,EAAE;QAC3E2B,IAAI,EAAEA,IAAI;QACVT,QAAQ,EAAEA;MACZ,CAAC,EAAES,IAAI,CAACC,EAAE,CAAC;IACb,CAAC;EACH,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script"}