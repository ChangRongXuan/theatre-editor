{"ast":null,"code":"// import { Transition } from 'react-transition-group'; // 提供過場效果\n// import PropTypes from 'prop-types';\n// import React from 'react';\n// import styled, { keyframes, css } from 'styled-components';\n\n// const transitionDuration = {\n//   enter: 1200,\n//   exit: 2700,\n// };\n\n// const textAnimation = keyframes`\n//   from {\n//     opacity: 1;\n//   }\n//   to {\n//     opacity: .4;\n//   }\n// `;\n\n// const Dimmer = styled.div`\n//   width: 100%;\n//   height: 100%;\n//   opacity: 0.8;\n//   background: #000;\n//   position: absolute;\n//   top: 0;\n//   left: 0;\n//   backdrop-filter: blur(5px);\n// `;\n\n// const Container = styled.div`\n//   position: absolute;\n//   top: 0;\n//   left: 0;\n//   width: 100%;\n//   height: 100%;\n//   opacity: 0;\n//   opacity: ${(props) => {\n//     switch (props.state) {\n//       case 'exited':\n//       case 'exiting': {\n//         return '0';\n//       }\n//       case 'entering':\n//       case 'entered':\n//       default: {\n//         return '1';\n//       }\n//     }\n//   }};\n//   transition: ${(props) => {\n//     switch (props.state) {\n//       case 'exiting':\n//       case 'exited': {\n//         return `opacity ${transitionDuration.exit}ms ease`;\n//       }\n//       case 'entering':\n//       case 'entered':\n//       default: {\n//         return `opacity ${transitionDuration.enter}ms ease`;\n//       }\n//     }\n//   }};\n// `;\n\n// const Text = styled.div`\n//   text-align: center;\n//   transform: translate(-50%, -50%);\n//   top: 36%;\n//   left: 50%;\n//   position: absolute;\n//   font-size: 1.8rem;\n//   width: 69%;\n//   @media screen and (max-width: 767px) {\n//     font-size: 1.5rem;\n//   }\n//   font-weight: bold;\n//   color: #fff;\n//   ${(props) =>\n//     props.shining\n//       ? css`\n//           opacity: 1;\n//           will-change: opacity;\n//           animation: ${textAnimation} 0.65s ease-in-out;\n//           animation-direction: alternate;\n//           animation-iteration-count: infinite;\n//         `\n//       : ''}\n// `;\n\n// DimmerWithMessage.propTypes = {\n//   shining: PropTypes.bool,\n//   show: PropTypes.bool,\n//   message: PropTypes.string,\n// };\n\n// // DimmerWithMessage.defaultProps = {\n// //   show: false,\n// //   message: '',\n// //   shining: false,\n// // };\n\n// export default function DimmerWithMessage({\n//   show = false,\n//   message = '',\n//   shining = false,\n// }) {\n//   return (\n//     <Transition unmountOnExit in={show} timeout={transitionDuration}>\n//       {(state) => (\n//         <Container state={state}>\n//           <Dimmer />\n//           <Text shining={shining}>{message}</Text>\n//         </Container>\n//       )}\n//     </Transition>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/dimmer-with-message.js"],"sourcesContent":["// import { Transition } from 'react-transition-group'; // 提供過場效果\n// import PropTypes from 'prop-types';\n// import React from 'react';\n// import styled, { keyframes, css } from 'styled-components';\n\n// const transitionDuration = {\n//   enter: 1200,\n//   exit: 2700,\n// };\n\n// const textAnimation = keyframes`\n//   from {\n//     opacity: 1;\n//   }\n//   to {\n//     opacity: .4;\n//   }\n// `;\n\n// const Dimmer = styled.div`\n//   width: 100%;\n//   height: 100%;\n//   opacity: 0.8;\n//   background: #000;\n//   position: absolute;\n//   top: 0;\n//   left: 0;\n//   backdrop-filter: blur(5px);\n// `;\n\n// const Container = styled.div`\n//   position: absolute;\n//   top: 0;\n//   left: 0;\n//   width: 100%;\n//   height: 100%;\n//   opacity: 0;\n//   opacity: ${(props) => {\n//     switch (props.state) {\n//       case 'exited':\n//       case 'exiting': {\n//         return '0';\n//       }\n//       case 'entering':\n//       case 'entered':\n//       default: {\n//         return '1';\n//       }\n//     }\n//   }};\n//   transition: ${(props) => {\n//     switch (props.state) {\n//       case 'exiting':\n//       case 'exited': {\n//         return `opacity ${transitionDuration.exit}ms ease`;\n//       }\n//       case 'entering':\n//       case 'entered':\n//       default: {\n//         return `opacity ${transitionDuration.enter}ms ease`;\n//       }\n//     }\n//   }};\n// `;\n\n// const Text = styled.div`\n//   text-align: center;\n//   transform: translate(-50%, -50%);\n//   top: 36%;\n//   left: 50%;\n//   position: absolute;\n//   font-size: 1.8rem;\n//   width: 69%;\n//   @media screen and (max-width: 767px) {\n//     font-size: 1.5rem;\n//   }\n//   font-weight: bold;\n//   color: #fff;\n//   ${(props) =>\n//     props.shining\n//       ? css`\n//           opacity: 1;\n//           will-change: opacity;\n//           animation: ${textAnimation} 0.65s ease-in-out;\n//           animation-direction: alternate;\n//           animation-iteration-count: infinite;\n//         `\n//       : ''}\n// `;\n\n// DimmerWithMessage.propTypes = {\n//   shining: PropTypes.bool,\n//   show: PropTypes.bool,\n//   message: PropTypes.string,\n// };\n\n// // DimmerWithMessage.defaultProps = {\n// //   show: false,\n// //   message: '',\n// //   shining: false,\n// // };\n\n// export default function DimmerWithMessage({\n//   show = false,\n//   message = '',\n//   shining = false,\n// }) {\n//   return (\n//     <Transition unmountOnExit in={show} timeout={transitionDuration}>\n//       {(state) => (\n//         <Container state={state}>\n//           <Dimmer />\n//           <Text shining={shining}>{message}</Text>\n//         </Container>\n//       )}\n//     </Transition>\n//   );\n// }\n"],"mappings},"metadata":{},"sourceType":"module"}