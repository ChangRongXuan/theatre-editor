{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-video.js\";\nimport { types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport DemoStage from '../components/demo-stage';\nimport { initialConfig } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DemoVideo(_ref) {\n  let {\n    project,\n    sheet\n  } = _ref;\n  project.ready.then(() => sheet.sequence.play({\n    iterationCount: Infinity\n  }));\n\n  // const [storedData, setStoredData] = useState([]); // data in local-storage\n\n  // useEffect(() => {\n  //   const elements = localStorage.getItem('theatre-data');\n  //   if (elements) {\n  //     setStoredData(JSON.parse(elements));\n  //   }\n  // }, []);\n\n  // // 如何修改內容？？\n  // useEffect(() => {\n  //   if (storedData.length > 0) {\n  //     //render `font` control menu\n  //     storedData\n  //       .filter((item) => item.type === 'font')\n  //       .forEach((item) => {\n  //         const menuConfig = sheet.object(item.id, {\n  //           ...initialConfig.FONT,\n  //           content: types.string(`${item.content}`),\n  //         });\n\n  //         const element = document.getElementById(item.id);\n\n  //         menuConfig.onValuesChange((newValue) => {\n  //           element.style.cssText = `\n  //             left: ${newValue.position.x}%;\n  //             top: ${newValue.position.y}修改ㄋㄨ\n  //             background: ${newValue.bgColor};\n  //             color: ${newValue.font.color};\n  //             opacity: ${newValue.opacity};\n  //             padding: ${newValue.padding}px;\n  //             display: ${newValue.visible ? 'block' : 'none'};\n  //             width: ${newValue.size.width}px;\n  //             height: ${newValue.size.height}px;\n  //             font-size: ${newValue.font.size}px;\n  //             border-radius: ${newValue.border.radius}%;\n  //             border: ${newValue.border.size}px solid ${newValue.border.color};\n  //           `;\n  //         });\n  //       });\n\n  //     //render `image` control menu\n  //     storedData\n  //       .filter((item) => item.type === 'image')\n  //       .forEach((item) => {\n  //         const menuConfig = sheet.object(item.id, {\n  //           ...initialConfig.IMAGE,\n  //           // content: types.string(`${item.content}`),\n  //         });\n\n  //         const element = document.getElementById(item.id);\n\n  //         menuConfig.onValuesChange((newValue) => {\n  //           element.style.cssText = `\n  //             left: ${newValue.position.x}%;\n  //             top: ${newValue.position.y}%;\n  //             background: ${newValue.bgColor};\n  //             color: ${newValue.font.color};\n  //             opacity: ${newValue.opacity};\n  //             padding: ${newValue.padding}px;\n  //             display: ${newValue.visible ? 'block' : 'none'};\n  //             width: ${newValue.size.width}px;\n  //             height: ${newValue.size.height}px;\n  //             font-size: ${newValue.font.size}px;\n  //             border-radius: ${newValue.border.radius}%;\n  //             border: ${newValue.border.size}px solid ${newValue.border.color};\n  //           `;\n  //         });\n  //       });\n  //   }\n  // }, [storedData]);\n\n  return /*#__PURE__*/_jsxDEV(DemoStage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n}\n_c = DemoVideo;\nvar _c;\n$RefreshReg$(_c, \"DemoVideo\");","map":{"version":3,"names":["types","useState","useEffect","DemoStage","initialConfig","jsxDEV","_jsxDEV","DemoVideo","_ref","project","sheet","ready","then","sequence","play","iterationCount","Infinity","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-video.js"],"sourcesContent":["import { types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport DemoStage from '../components/demo-stage';\nimport { initialConfig } from '../constants';\n\nexport default function DemoVideo({ project, sheet }) {\n  project.ready.then(() =>\n    sheet.sequence.play({\n      iterationCount: Infinity,\n    })\n  );\n\n  // const [storedData, setStoredData] = useState([]); // data in local-storage\n\n  // useEffect(() => {\n  //   const elements = localStorage.getItem('theatre-data');\n  //   if (elements) {\n  //     setStoredData(JSON.parse(elements));\n  //   }\n  // }, []);\n\n  // // 如何修改內容？？\n  // useEffect(() => {\n  //   if (storedData.length > 0) {\n  //     //render `font` control menu\n  //     storedData\n  //       .filter((item) => item.type === 'font')\n  //       .forEach((item) => {\n  //         const menuConfig = sheet.object(item.id, {\n  //           ...initialConfig.FONT,\n  //           content: types.string(`${item.content}`),\n  //         });\n\n  //         const element = document.getElementById(item.id);\n\n  //         menuConfig.onValuesChange((newValue) => {\n  //           element.style.cssText = `\n  //             left: ${newValue.position.x}%;\n  //             top: ${newValue.position.y}修改ㄋㄨ\n  //             background: ${newValue.bgColor};\n  //             color: ${newValue.font.color};\n  //             opacity: ${newValue.opacity};\n  //             padding: ${newValue.padding}px;\n  //             display: ${newValue.visible ? 'block' : 'none'};\n  //             width: ${newValue.size.width}px;\n  //             height: ${newValue.size.height}px;\n  //             font-size: ${newValue.font.size}px;\n  //             border-radius: ${newValue.border.radius}%;\n  //             border: ${newValue.border.size}px solid ${newValue.border.color};\n  //           `;\n  //         });\n  //       });\n\n  //     //render `image` control menu\n  //     storedData\n  //       .filter((item) => item.type === 'image')\n  //       .forEach((item) => {\n  //         const menuConfig = sheet.object(item.id, {\n  //           ...initialConfig.IMAGE,\n  //           // content: types.string(`${item.content}`),\n  //         });\n\n  //         const element = document.getElementById(item.id);\n\n  //         menuConfig.onValuesChange((newValue) => {\n  //           element.style.cssText = `\n  //             left: ${newValue.position.x}%;\n  //             top: ${newValue.position.y}%;\n  //             background: ${newValue.bgColor};\n  //             color: ${newValue.font.color};\n  //             opacity: ${newValue.opacity};\n  //             padding: ${newValue.padding}px;\n  //             display: ${newValue.visible ? 'block' : 'none'};\n  //             width: ${newValue.size.width}px;\n  //             height: ${newValue.size.height}px;\n  //             font-size: ${newValue.font.size}px;\n  //             border-radius: ${newValue.border.radius}%;\n  //             border: ${newValue.border.size}px solid ${newValue.border.color};\n  //           `;\n  //         });\n  //       });\n  //   }\n  // }, [storedData]);\n\n  return <DemoStage />;\n}\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,eAAe;AACrC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,0BAA0B;AAChD,SAASC,aAAa,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAqB;EAAA,IAApB;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAClDC,OAAO,CAACE,KAAK,CAACC,IAAI,CAAC,MACjBF,KAAK,CAACG,QAAQ,CAACC,IAAI,CAAC;IAClBC,cAAc,EAAEC;EAClB,CAAC,CACH,CAAC;;EAED;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAAOV,OAAA,CAACH,SAAS;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB;AAACC,EAAA,GAhFuBd,SAAS;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}