{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/control-panel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SettingButtons from './button/element-button';\nimport ElementButtons from './button/setting-button';\nimport FontLightBox from './lightbox/font-lightbox';\nimport JSONLightBox from './lightbox/json-lightbox';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  z-index: 10000;\n`;\nexport default function ControlPanel(_ref) {\n  _s();\n  let {\n    sheet,\n    data\n  } = _ref;\n  const [showFontLightBox, setShowFontLightBox] = useState(false);\n  const [showJSONLightBox, setShowJSONLightBox] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LightBoxWrapper, {\n      children: [showFontLightBox && /*#__PURE__*/_jsxDEV(FontLightBox, {\n        setShowFontLightBox: setShowFontLightBox,\n        setNewData: setNewData,\n        sheet: sheet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), showJSONLightBox && /*#__PURE__*/_jsxDEV(JSONLightBox, {\n        setShowJSONLightBox: setShowJSONLightBox,\n        setNewData: setNewData,\n        sheet: sheet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(SettingButtons, {\n        sheet: sheet,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ElementButtons, {\n        setShowFontLightBox: setShowFontLightBox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ControlPanel, \"pKN/QjZWB/glAw7/PMq17Ns57hs=\");\n_c = ControlPanel;\nvar _c;\n$RefreshReg$(_c, \"ControlPanel\");","map":{"version":3,"names":["React","useState","SettingButtons","ElementButtons","FontLightBox","JSONLightBox","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Wrapper","div","ControlPanel","_ref","_s","sheet","data","showFontLightBox","setShowFontLightBox","showJSONLightBox","setShowJSONLightBox","children","LightBoxWrapper","setNewData","fileName","_jsxFileName","lineNumber","columnNumber","ButtonWrapper","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/control-panel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SettingButtons from './button/element-button';\nimport ElementButtons from './button/setting-button';\nimport FontLightBox from './lightbox/font-lightbox';\nimport JSONLightBox from './lightbox/json-lightbox';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  z-index: 10000;\n`;\n\nexport default function ControlPanel({ sheet, data }) {\n  const [showFontLightBox, setShowFontLightBox] = useState(false);\n  const [showJSONLightBox, setShowJSONLightBox] = useState(true);\n\n  return (\n    <>\n      <LightBoxWrapper>\n        {showFontLightBox && (\n          <FontLightBox\n            setShowFontLightBox={setShowFontLightBox}\n            setNewData={setNewData}\n            sheet={sheet}\n          />\n        )}\n\n        {showJSONLightBox && (\n          <JSONLightBox\n            setShowJSONLightBox={setShowJSONLightBox}\n            setNewData={setNewData}\n            sheet={sheet}\n          />\n        )}\n      </LightBoxWrapper>\n\n      {/* 還缺的資料： */}\n      <ButtonWrapper>\n        <SettingButtons sheet={sheet} data={data} />\n        <ElementButtons setShowFontLightBox={setShowFontLightBox} />\n      </ButtonWrapper>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,OAAO,GAAGL,MAAM,CAACM,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAAH,IAAA;EAClD,MAAM,CAACI,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE9D,oBACEO,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACe,eAAe;MAAAD,QAAA,GACbJ,gBAAgB,iBACfV,OAAA,CAACJ,YAAY;QACXe,mBAAmB,EAAEA,mBAAoB;QACzCK,UAAU,EAAEA,UAAW;QACvBR,KAAK,EAAEA;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CACF,EAEAR,gBAAgB,iBACfZ,OAAA,CAACH,YAAY;QACXgB,mBAAmB,EAAEA,mBAAoB;QACzCG,UAAU,EAAEA,UAAW;QACvBR,KAAK,EAAEA;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc,CAAC,eAGlBpB,OAAA,CAACqB,aAAa;MAAAP,QAAA,gBACZd,OAAA,CAACN,cAAc;QAACc,KAAK,EAAEA,KAAM;QAACC,IAAI,EAAEA;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5CpB,OAAA,CAACL,cAAc;QAACgB,mBAAmB,EAAEA;MAAoB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA,eAChB,CAAC;AAEP;AAACb,EAAA,CA/BuBF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}