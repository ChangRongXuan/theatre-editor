{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/page/playground.js\",\n  _s = $RefreshSig$();\nimport studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport projectState from '../data/state.json';\nimport Stage from '../components/stage';\nimport { initialConfig } from '../constants';\nimport ControlPanel from '../components/control-panel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Playground(_ref) {\n  _s();\n  let {\n    project,\n    sheet,\n    setAnimateJSON,\n    animateJSON\n  } = _ref;\n  studio.ui.restore(); //顯示操作面板\n  project.ready.then(() => sheet.sequence.pause);\n  const [elementData, setElementData] = useState([]);\n  const [savedData, setSavedData] = useState([]);\n  console.log('elementData', elementData);\n  let localStorageData = [];\n\n  // get localStorage element data\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    console.log('有執行抓 elements', elements);\n    if (elements) {\n      localStorageData = JSON.parse(elements);\n    }\n    console.log('localStorageData', localStorageData);\n  }, []);\n\n  // useEffect(() => {\n  //   if (elementData.length > 0) {\n  //     //render font control menu\n  //     elementData\n  //       .filter((item) => item.type === 'font')\n  //       .forEach((item) => {\n  //         const menuConfig = sheet.object(item.id, initialConfig.FONT);\n  //         const element = document.getElementById(item.id);\n\n  //         menuConfig.onValuesChange((newValue) => {\n  //           element.style.left = newValue.position.x + '%';\n  //           element.style.top = newValue.position.y + '%';\n  //           element.style.background = newValue.bgColor;\n  //           element.style.color = newValue.font.color;\n  //           element.style.opacity = newValue.opacity;\n  //           element.style.padding = newValue.padding + 'px';\n  //           element.style.display = newValue.visible ? 'block' : 'none';\n  //           element.style.width = newValue.size.width + 'px';\n  //           element.style.height = newValue.size.height + 'px';\n  //           element.style.fontSize = newValue.font.size + 'px';\n  //           element.style.borderRadius = newValue.border.radius + '%';\n  //           element.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n  //         });\n  //       });\n  //   }\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ControlPanel, {\n      setElementData: setElementData,\n      elementData: elementData,\n      sheet: sheet,\n      setAnimateJSON: setAnimateJSON,\n      animateJSON: animateJSON\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stage, {\n      localStorageData: localStorageData,\n      sheet: sheet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Playground, \"4LvMHO0c4mybIgGo4l5MfGou5Wc=\");\n_c = Playground;\nvar _c;\n$RefreshReg$(_c, \"Playground\");","map":{"version":3,"names":["studio","getProject","types","useState","useEffect","projectState","Stage","initialConfig","ControlPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","Playground","_ref","_s","project","sheet","setAnimateJSON","animateJSON","ui","restore","ready","then","sequence","pause","elementData","setElementData","savedData","setSavedData","console","log","localStorageData","elements","localStorage","getItem","JSON","parse","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/page/playground.js"],"sourcesContent":["import studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport projectState from '../data/state.json';\nimport Stage from '../components/stage';\nimport { initialConfig } from '../constants';\nimport ControlPanel from '../components/control-panel';\n\nexport default function Playground({\n  project,\n  sheet,\n  setAnimateJSON,\n  animateJSON,\n}) {\n  studio.ui.restore(); //顯示操作面板\n  project.ready.then(() => sheet.sequence.pause);\n\n  const [elementData, setElementData] = useState([]);\n  const [savedData, setSavedData] = useState([]);\n\n  console.log('elementData', elementData);\n\n  let localStorageData = [];\n\n  // get localStorage element data\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n\n    console.log('有執行抓 elements', elements);\n    if (elements) {\n      localStorageData = JSON.parse(elements);\n    }\n    console.log('localStorageData', localStorageData);\n  }, []);\n\n  // useEffect(() => {\n  //   if (elementData.length > 0) {\n  //     //render font control menu\n  //     elementData\n  //       .filter((item) => item.type === 'font')\n  //       .forEach((item) => {\n  //         const menuConfig = sheet.object(item.id, initialConfig.FONT);\n  //         const element = document.getElementById(item.id);\n\n  //         menuConfig.onValuesChange((newValue) => {\n  //           element.style.left = newValue.position.x + '%';\n  //           element.style.top = newValue.position.y + '%';\n  //           element.style.background = newValue.bgColor;\n  //           element.style.color = newValue.font.color;\n  //           element.style.opacity = newValue.opacity;\n  //           element.style.padding = newValue.padding + 'px';\n  //           element.style.display = newValue.visible ? 'block' : 'none';\n  //           element.style.width = newValue.size.width + 'px';\n  //           element.style.height = newValue.size.height + 'px';\n  //           element.style.fontSize = newValue.font.size + 'px';\n  //           element.style.borderRadius = newValue.border.radius + '%';\n  //           element.style.border = `${newValue.border.size}px solid ${newValue.border.color}`;\n  //         });\n  //       });\n  //   }\n  // }, []);\n\n  return (\n    <>\n      <ControlPanel\n        setElementData={setElementData}\n        elementData={elementData}\n        sheet={sheet}\n        setAnimateJSON={setAnimateJSON}\n        animateJSON={animateJSON}\n      />\n      <Stage localStorageData={localStorageData} sheet={sheet} />\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,SAASC,UAAU,EAAEC,KAAK,QAAQ,eAAe;AACjD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,aAAa,QAAQ,cAAc;AAC5C,OAAOC,YAAY,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAK/B;EAAAC,EAAA;EAAA,IALgC;IACjCC,OAAO;IACPC,KAAK;IACLC,cAAc;IACdC;EACF,CAAC,GAAAL,IAAA;EACCd,MAAM,CAACoB,EAAE,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;EACrBL,OAAO,CAACM,KAAK,CAACC,IAAI,CAAC,MAAMN,KAAK,CAACO,QAAQ,CAACC,KAAK,CAAC;EAE9C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAE9C2B,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEL,WAAW,CAAC;EAEvC,IAAIM,gBAAgB,GAAG,EAAE;;EAEzB;EACA5B,SAAS,CAAC,MAAM;IACd,MAAM6B,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAErDL,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEE,QAAQ,CAAC;IACtC,IAAIA,QAAQ,EAAE;MACZD,gBAAgB,GAAGI,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC;IACzC;IACAH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,gBAAgB,CAAC;EACnD,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEtB,OAAA,CAAAE,SAAA;IAAA0B,QAAA,gBACE5B,OAAA,CAACF,YAAY;MACXmB,cAAc,EAAEA,cAAe;MAC/BD,WAAW,EAAEA,WAAY;MACzBT,KAAK,EAAEA,KAAM;MACbC,cAAc,EAAEA,cAAe;MAC/BC,WAAW,EAAEA;IAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFhC,OAAA,CAACJ,KAAK;MAAC0B,gBAAgB,EAAEA,gBAAiB;MAACf,KAAK,EAAEA;IAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC3D,CAAC;AAEP;AAAC3B,EAAA,CAlEuBF,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}