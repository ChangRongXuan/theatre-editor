{"ast":null,"code":"import { initialConfig } from '../constants/index';\nimport { types } from '@theatre/core';\nimport studio from '@theatre/studio';\nconst isEmptyObject = obj => {\n  return Object.keys(obj).length === 0;\n};\nconst renderFontObject = function () {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let sheet = arguments.length > 1 ? arguments[1] : undefined;\n  data.filter(item => item.type === 'FONT').forEach(item => {\n    const object = sheet.object(item.id, {\n      ...initialConfig.FONT,\n      content: types.string(`${item.content}`)\n    });\n    const element = document.getElementById(item.id);\n    element.addEventListener('click', () => {\n      studio.setSelection([object]);\n    });\n    object.onValuesChange(newValue => {\n      element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          background: ${newValue.bgColor};\n          color: ${newValue.font.color};\n          opacity: ${newValue.opacity};\n          padding: ${newValue.padding}px;\n          display: ${newValue.visible ? 'block' : 'none'};\n          width: ${newValue.size.width}px;\n          font-size: ${newValue.font.size}px;\n          border-radius: ${newValue.border.radius}px;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          font-weight: ${newValue.font.weight};\n          letter-spacing: ${newValue.font.spacing}px;\n          line-height: ${newValue.lineHeight}px;\n          text-align: ${newValue.textAlign};\n          z-index: ${newValue.zIndex};\n          transform: scale(${newValue.scale});\n        `;\n    });\n  });\n};\nconst renderImageObject = function () {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let sheet = arguments.length > 1 ? arguments[1] : undefined;\n  data.filter(item => item.type === 'IMAGE').forEach(item => {\n    const object = sheet.object(item.id, {\n      ...initialConfig.IMAGE,\n      url: types.string(`${item.url}`)\n    });\n    const element = document.getElementById(item.id);\n    object.onValuesChange(newValue => {\n      element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          width: ${newValue.size.width}px;\n          height: ${newValue.size.height}px;\n          border-radius: ${newValue.border.radius}%;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          background: ${newValue.bgColor};\n          opacity: ${newValue.opacity};\n          display: ${newValue.visible ? 'block' : 'none'};\n          background-image = url(${newValue.url});\n          transform: scale(${newValue.scale});\n          z-index: ${newValue.zIndex};\n        `;\n    });\n  });\n};\nconst renderBgObject = function () {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let sheet = arguments.length > 1 ? arguments[1] : undefined;\n  data.filter(item => item.type === 'BACKGROUND').forEach(item => {\n    const object = sheet.object(item.id, {\n      ...initialConfig.BACKGROUND,\n      url: types.string(`${item.url}`)\n    });\n    const element = document.getElementById(item.id);\n    object.onValuesChange(newValue => {\n      element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          border-radius: ${newValue.border.radius}%;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          background: ${newValue.bgColor};\n          opacity: ${newValue.opacity};\n          display: ${newValue.visible ? 'block' : 'none'};\n          background-image = url(${newValue.url});\n          transform: scale(${newValue.scale});\n          z-index: ${newValue.zIndex};\n        `;\n    });\n  });\n};\nexport { isEmptyObject, renderFontObject, renderImageObject, renderBgObject };","map":{"version":3,"names":["initialConfig","types","studio","isEmptyObject","obj","Object","keys","length","renderFontObject","data","arguments","undefined","sheet","filter","item","type","forEach","object","id","FONT","content","string","element","document","getElementById","addEventListener","setSelection","onValuesChange","newValue","style","cssText","position","x","y","bgColor","font","color","opacity","padding","visible","size","width","border","radius","weight","spacing","lineHeight","textAlign","zIndex","scale","renderImageObject","IMAGE","url","height","renderBgObject","BACKGROUND"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/utils/index.js"],"sourcesContent":["import { initialConfig } from '../constants/index';\nimport { types } from '@theatre/core';\nimport studio from '@theatre/studio';\n\nconst isEmptyObject = (obj) => {\n  return Object.keys(obj).length === 0;\n};\n\nconst renderFontObject = (data = [], sheet) => {\n  data\n    .filter((item) => item.type === 'FONT')\n    .forEach((item) => {\n      const object = sheet.object(item.id, {\n        ...initialConfig.FONT,\n        content: types.string(`${item.content}`),\n      });\n\n      const element = document.getElementById(item.id);\n\n      element.addEventListener('click', () => {\n        studio.setSelection([object]);\n      });\n\n      object.onValuesChange((newValue) => {\n        element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          background: ${newValue.bgColor};\n          color: ${newValue.font.color};\n          opacity: ${newValue.opacity};\n          padding: ${newValue.padding}px;\n          display: ${newValue.visible ? 'block' : 'none'};\n          width: ${newValue.size.width}px;\n          font-size: ${newValue.font.size}px;\n          border-radius: ${newValue.border.radius}px;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          font-weight: ${newValue.font.weight};\n          letter-spacing: ${newValue.font.spacing}px;\n          line-height: ${newValue.lineHeight}px;\n          text-align: ${newValue.textAlign};\n          z-index: ${newValue.zIndex};\n          transform: scale(${newValue.scale});\n        `;\n      });\n    });\n};\n\nconst renderImageObject = (data = [], sheet) => {\n  data\n    .filter((item) => item.type === 'IMAGE')\n    .forEach((item) => {\n      const object = sheet.object(item.id, {\n        ...initialConfig.IMAGE,\n        url: types.string(`${item.url}`),\n      });\n\n      const element = document.getElementById(item.id);\n\n      object.onValuesChange((newValue) => {\n        element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          width: ${newValue.size.width}px;\n          height: ${newValue.size.height}px;\n          border-radius: ${newValue.border.radius}%;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          background: ${newValue.bgColor};\n          opacity: ${newValue.opacity};\n          display: ${newValue.visible ? 'block' : 'none'};\n          background-image = url(${newValue.url});\n          transform: scale(${newValue.scale});\n          z-index: ${newValue.zIndex};\n        `;\n      });\n    });\n};\n\nconst renderBgObject = (data = [], sheet) => {\n  data\n    .filter((item) => item.type === 'BACKGROUND')\n    .forEach((item) => {\n      const object = sheet.object(item.id, {\n        ...initialConfig.BACKGROUND,\n        url: types.string(`${item.url}`),\n      });\n\n      const element = document.getElementById(item.id);\n\n      object.onValuesChange((newValue) => {\n        element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          border-radius: ${newValue.border.radius}%;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          background: ${newValue.bgColor};\n          opacity: ${newValue.opacity};\n          display: ${newValue.visible ? 'block' : 'none'};\n          background-image = url(${newValue.url});\n          transform: scale(${newValue.scale});\n          z-index: ${newValue.zIndex};\n        `;\n      });\n    });\n};\n\nexport { isEmptyObject, renderFontObject, renderImageObject, renderBgObject };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}