{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/stage.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { defaultFontStyle, defaultImageStyle, defaultBgStyle } from '../shared-style/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100vw;\n  min-width: 100vw;\n  max-width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n`;\n_c = Wrapper;\nconst FontElement = styled.div`\n  ${defaultFontStyle}\n`;\n_c2 = FontElement;\nconst ImageElement = styled.div`\n  ${defaultImageStyle}\n  background-image: url(${props => props.url});\n`;\n_c3 = ImageElement;\nconst BgElement = styled.div`\n  ${defaultBgStyle}\n  background-image: url(${props => props.url});\n`;\n_c4 = BgElement;\nexport default function Stage(_ref) {\n  let {\n    storedData\n  } = _ref;\n  const fontElements = storedData.filter(data => data.type === 'FONT').map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(FontElement, {\n      id: data.id,\n      children: data.content\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  });\n  const imageElements = storedData.filter(data => data.type === 'IMAGE').map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(ImageElement, {\n      id: data.id,\n      url: data.url\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, this);\n  });\n  const bgElements = storedData.filter(data => data.type === 'BACKGROUND').map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(BgElement, {\n      id: data.id,\n      url: data.url\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: \"theatre-stage\",\n    children: [fontElements, imageElements, bgElements]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c5 = Stage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"FontElement\");\n$RefreshReg$(_c3, \"ImageElement\");\n$RefreshReg$(_c4, \"BgElement\");\n$RefreshReg$(_c5, \"Stage\");","map":{"version":3,"names":["React","styled","defaultFontStyle","defaultImageStyle","defaultBgStyle","jsxDEV","_jsxDEV","Wrapper","div","_c","FontElement","_c2","ImageElement","props","url","_c3","BgElement","_c4","Stage","_ref","storedData","fontElements","filter","data","type","map","index","id","children","content","fileName","_jsxFileName","lineNumber","columnNumber","imageElements","bgElements","_c5","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/stage.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {\n  defaultFontStyle,\n  defaultImageStyle,\n  defaultBgStyle,\n} from '../shared-style/index';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  min-width: 100vw;\n  max-width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst FontElement = styled.div`\n  ${defaultFontStyle}\n`;\n\nconst ImageElement = styled.div`\n  ${defaultImageStyle}\n  background-image: url(${(props) => props.url});\n`;\n\nconst BgElement = styled.div`\n  ${defaultBgStyle}\n  background-image: url(${(props) => props.url});\n`;\n\nexport default function Stage({ storedData }) {\n  const fontElements = storedData\n    .filter((data) => data.type === 'FONT')\n    .map((data, index) => {\n      return (\n        <FontElement key={index} id={data.id}>\n          {data.content}\n        </FontElement>\n      );\n    });\n\n  const imageElements = storedData\n    .filter((data) => data.type === 'IMAGE')\n    .map((data, index) => {\n      return <ImageElement key={index} id={data.id} url={data.url} />;\n    });\n\n  const bgElements = storedData\n    .filter((data) => data.type === 'BACKGROUND')\n    .map((data, index) => {\n      return <BgElement key={index} id={data.id} url={data.url} />;\n    });\n\n  return (\n    <Wrapper id='theatre-stage'>\n      {fontElements}\n      {imageElements}\n      {bgElements}\n    </Wrapper>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SACEC,gBAAgB,EAChBC,iBAAiB,EACjBC,cAAc,QACT,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,OAAO,GAAGN,MAAM,CAACO,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIF,OAAO;AASb,MAAMG,WAAW,GAAGT,MAAM,CAACO,GAAI;AAC/B,IAAIN,gBAAiB;AACrB,CAAC;AAACS,GAAA,GAFID,WAAW;AAIjB,MAAME,YAAY,GAAGX,MAAM,CAACO,GAAI;AAChC,IAAIL,iBAAkB;AACtB,0BAA2BU,KAAK,IAAKA,KAAK,CAACC,GAAI;AAC/C,CAAC;AAACC,GAAA,GAHIH,YAAY;AAKlB,MAAMI,SAAS,GAAGf,MAAM,CAACO,GAAI;AAC7B,IAAIJ,cAAe;AACnB,0BAA2BS,KAAK,IAAKA,KAAK,CAACC,GAAI;AAC/C,CAAC;AAACG,GAAA,GAHID,SAAS;AAKf,eAAe,SAASE,KAAKA,CAAAC,IAAA,EAAiB;EAAA,IAAhB;IAAEC;EAAW,CAAC,GAAAD,IAAA;EAC1C,MAAME,YAAY,GAAGD,UAAU,CAC5BE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,MAAM,CAAC,CACtCC,GAAG,CAAC,CAACF,IAAI,EAAEG,KAAK,KAAK;IACpB,oBACEpB,OAAA,CAACI,WAAW;MAAaiB,EAAE,EAAEJ,IAAI,CAACI,EAAG;MAAAC,QAAA,EAClCL,IAAI,CAACM;IAAO,GADGH,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CAAC;EAElB,CAAC,CAAC;EAEJ,MAAMC,aAAa,GAAGd,UAAU,CAC7BE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC,CACvCC,GAAG,CAAC,CAACF,IAAI,EAAEG,KAAK,KAAK;IACpB,oBAAOpB,OAAA,CAACM,YAAY;MAAae,EAAE,EAAEJ,IAAI,CAACI,EAAG;MAACb,GAAG,EAAES,IAAI,CAACT;IAAI,GAAlCY,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+B,CAAC;EACjE,CAAC,CAAC;EAEJ,MAAME,UAAU,GAAGf,UAAU,CAC1BE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,YAAY,CAAC,CAC5CC,GAAG,CAAC,CAACF,IAAI,EAAEG,KAAK,KAAK;IACpB,oBAAOpB,OAAA,CAACU,SAAS;MAAaW,EAAE,EAAEJ,IAAI,CAACI,EAAG;MAACb,GAAG,EAAES,IAAI,CAACT;IAAI,GAAlCY,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+B,CAAC;EAC9D,CAAC,CAAC;EAEJ,oBACE3B,OAAA,CAACC,OAAO;IAACoB,EAAE,EAAC,eAAe;IAAAC,QAAA,GACxBP,YAAY,EACZa,aAAa,EACbC,UAAU;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACG,GAAA,GA9BuBlB,KAAK;AAAA,IAAAT,EAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAE,GAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAA1B,GAAA;AAAA0B,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}