{"ast":null,"code":"import { initialConfig } from '../constants/index.js';\nimport studio from '@theatre/studio';\nconst isEmptyObject = obj => {\n  return Object.keys(obj).length === 0;\n};\nconst renderFontObject = function () {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let sheet = arguments.length > 1 ? arguments[1] : undefined;\n  data.filter(item => item.type === 'FONT').forEach(item => {\n    const object = sheet.object(item.id, {\n      ...initialConfig.FONT\n    });\n    const element = document.getElementById(item.id);\n    element.addEventListener('click', () => {\n      studio.setSelection([object]);\n    });\n    object.onValuesChange(newValue => {\n      element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          background: ${newValue.bgColor};\n          color: ${newValue.font.color};\n          opacity: ${newValue.opacity};\n          padding: ${newValue.padding}px;\n          display: ${newValue.visible ? 'block' : 'none'};\n          width: ${newValue.size.width}px;\n          font-size: ${newValue.font.size}px;\n          border-radius: ${newValue.border.radius}px;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          font-weight: ${newValue.font.weight};\n          letter-spacing: ${newValue.font.spacing}px;\n          line-height: ${newValue.lineHeight}px;\n          text-align: ${newValue.textAlign};\n          z-index: ${newValue.zIndex};\n          transform: scale(${newValue.scale});\n        `;\n      element.textContent = newValue.content;\n    });\n  });\n};\nconst renderImageObject = function () {\n  var _s = $RefreshSig$();\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let sheet = arguments.length > 1 ? arguments[1] : undefined;\n  data.filter(item => item.type === 'IMAGE').forEach(_s(item => {\n    _s();\n    const object = sheet.object(item.id, {\n      ...initialConfig.IMAGE\n    });\n    const element = document.getElementById(item.id);\n    element.addEventListener('click', () => {\n      studio.setSelection([object]);\n    });\n    const imageElement = element.querySelector('img');\n    const dragOpts = useMemo(() => {\n      let scrub;\n      let initial;\n      let firstOnDragCalled = false;\n      return {\n        onDragStart() {\n          scrub = studio.scrub();\n          initial = object.value;\n          firstOnDragCalled = false;\n        },\n        onDrag(x, y) {\n          if (!firstOnDragCalled) {\n            studio.setSelection([object]);\n            firstOnDragCalled = true;\n          }\n          scrub.capture(_ref => {\n            let {\n              set\n            } = _ref;\n            set(object.props, {\n              x: x + initial.x,\n              y: y + initial.y\n            });\n          });\n        },\n        onDragEnd(dragHappened) {\n          if (dragHappened) {\n            scrub.commit();\n          } else {\n            scrub.discard();\n          }\n        },\n        lockCursorTo: 'move'\n      };\n    }, []);\n    useDrag(element, dragOpts);\n    object.onValuesChange(newValue => {\n      element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          width: ${newValue.size.width}px;\n          height: ${newValue.size.height}px;\n          border-radius: ${newValue.border.radius}%;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          background: ${newValue.bgColor};\n          opacity: ${newValue.opacity};\n          display: ${newValue.visible ? 'block' : 'none'};\n          background-image = url(${newValue.url});\n          transform: scale(${newValue.scale});\n          z-index: ${newValue.zIndex};\n        `;\n      imageElement.src = newValue.url;\n    });\n  }, \"kumZQ2lKI/gw4ge7yB93S335hyo=\", true));\n};\nconst renderBgObject = function () {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let sheet = arguments.length > 1 ? arguments[1] : undefined;\n  data.filter(item => item.type === 'BACKGROUND').forEach(item => {\n    const object = sheet.object(item.id, {\n      ...initialConfig.BACKGROUND\n    });\n    const element = document.getElementById(item.id);\n    element.addEventListener('click', () => {\n      studio.setSelection([object]);\n    });\n    const imageElement = element.querySelector('img');\n    object.onValuesChange(newValue => {\n      element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          border-radius: ${newValue.border.radius}%;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          background: ${newValue.bgColor};\n          opacity: ${newValue.opacity};\n          display: ${newValue.visible ? 'block' : 'none'};\n          background-image = url(${newValue.url});\n          transform: scale(${newValue.scale});\n          z-index: ${newValue.zIndex};\n        `;\n      imageElement.src = newValue.url;\n    });\n  });\n};\nexport { isEmptyObject, renderFontObject, renderImageObject, renderBgObject };","map":{"version":3,"names":["initialConfig","studio","isEmptyObject","obj","Object","keys","length","renderFontObject","data","arguments","undefined","sheet","filter","item","type","forEach","object","id","FONT","element","document","getElementById","addEventListener","setSelection","onValuesChange","newValue","style","cssText","position","x","y","bgColor","font","color","opacity","padding","visible","size","width","border","radius","weight","spacing","lineHeight","textAlign","zIndex","scale","textContent","content","renderImageObject","_s","$RefreshSig$","IMAGE","imageElement","querySelector","dragOpts","useMemo","scrub","initial","firstOnDragCalled","onDragStart","value","onDrag","capture","_ref","set","props","onDragEnd","dragHappened","commit","discard","lockCursorTo","useDrag","height","url","src","renderBgObject","BACKGROUND"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/utils/index.js"],"sourcesContent":["import { initialConfig } from '../constants/index.js';\nimport studio from '@theatre/studio';\n\nconst isEmptyObject = (obj) => {\n  return Object.keys(obj).length === 0;\n};\n\nconst renderFontObject = (data = [], sheet) => {\n  data\n    .filter((item) => item.type === 'FONT')\n    .forEach((item) => {\n      const object = sheet.object(item.id, {\n        ...initialConfig.FONT,\n      });\n\n      const element = document.getElementById(item.id);\n\n      element.addEventListener('click', () => {\n        studio.setSelection([object]);\n      });\n\n      object.onValuesChange((newValue) => {\n        element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          background: ${newValue.bgColor};\n          color: ${newValue.font.color};\n          opacity: ${newValue.opacity};\n          padding: ${newValue.padding}px;\n          display: ${newValue.visible ? 'block' : 'none'};\n          width: ${newValue.size.width}px;\n          font-size: ${newValue.font.size}px;\n          border-radius: ${newValue.border.radius}px;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          font-weight: ${newValue.font.weight};\n          letter-spacing: ${newValue.font.spacing}px;\n          line-height: ${newValue.lineHeight}px;\n          text-align: ${newValue.textAlign};\n          z-index: ${newValue.zIndex};\n          transform: scale(${newValue.scale});\n        `;\n\n        element.textContent = newValue.content;\n      });\n    });\n};\n\nconst renderImageObject = (data = [], sheet) => {\n  data\n    .filter((item) => item.type === 'IMAGE')\n    .forEach((item) => {\n      const object = sheet.object(item.id, {\n        ...initialConfig.IMAGE,\n      });\n\n      const element = document.getElementById(item.id);\n\n      element.addEventListener('click', () => {\n        studio.setSelection([object]);\n      });\n\n      const imageElement = element.querySelector('img');\n\n      const dragOpts = useMemo(() => {\n        let scrub;\n        let initial;\n        let firstOnDragCalled = false;\n        return {\n          onDragStart() {\n            scrub = studio.scrub();\n            initial = object.value;\n            firstOnDragCalled = false;\n          },\n          onDrag(x, y) {\n            if (!firstOnDragCalled) {\n              studio.setSelection([object]);\n              firstOnDragCalled = true;\n            }\n            scrub.capture(({ set }) => {\n              set(object.props, { x: x + initial.x, y: y + initial.y });\n            });\n          },\n          onDragEnd(dragHappened) {\n            if (dragHappened) {\n              scrub.commit();\n            } else {\n              scrub.discard();\n            }\n          },\n          lockCursorTo: 'move',\n        };\n      }, []);\n\n      useDrag(element, dragOpts);\n\n      object.onValuesChange((newValue) => {\n        element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          width: ${newValue.size.width}px;\n          height: ${newValue.size.height}px;\n          border-radius: ${newValue.border.radius}%;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          background: ${newValue.bgColor};\n          opacity: ${newValue.opacity};\n          display: ${newValue.visible ? 'block' : 'none'};\n          background-image = url(${newValue.url});\n          transform: scale(${newValue.scale});\n          z-index: ${newValue.zIndex};\n        `;\n\n        imageElement.src = newValue.url;\n      });\n    });\n};\n\nconst renderBgObject = (data = [], sheet) => {\n  data\n    .filter((item) => item.type === 'BACKGROUND')\n    .forEach((item) => {\n      const object = sheet.object(item.id, {\n        ...initialConfig.BACKGROUND,\n      });\n\n      const element = document.getElementById(item.id);\n\n      element.addEventListener('click', () => {\n        studio.setSelection([object]);\n      });\n\n      const imageElement = element.querySelector('img');\n\n      object.onValuesChange((newValue) => {\n        element.style.cssText = `\n          left: ${newValue.position.x}%;\n          top: ${newValue.position.y}%;\n          border-radius: ${newValue.border.radius}%;\n          border: ${newValue.border.size}px solid ${newValue.border.color};\n          background: ${newValue.bgColor};\n          opacity: ${newValue.opacity};\n          display: ${newValue.visible ? 'block' : 'none'};\n          background-image = url(${newValue.url});\n          transform: scale(${newValue.scale});\n          z-index: ${newValue.zIndex};\n        `;\n\n        imageElement.src = newValue.url;\n      });\n    });\n};\n\nexport { isEmptyObject, renderFontObject, renderImageObject, renderBgObject };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}