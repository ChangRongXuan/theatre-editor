{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/elements/font.js\",\n  _s = $RefreshSig$();\nimport studio from '@theatre/studio';\nimport React, { useMemo, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport useDrag from '../../hooks/use-drag';\nimport { initialConfig } from '../../constants';\nimport { defaultFontStyle } from '../../shared-style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FontWrapper = styled.div`\n  ${defaultFontStyle}\n`;\n\n//結合 utils 的功能，這邊處理單一個文字元件的 render（交給 stage 做 map)\n_c = FontWrapper;\nexport default function FontElement(_ref) {\n  _s();\n  let {\n    id,\n    sheet\n  } = _ref;\n  // const [pos, setPos] = useState({ x: 0, y: 0 });\n  const [divRef, setDivRef] = useState(null);\n  const [style, setStyle] = useState({}); // 新增一個狀態來追踪 style 變化\n\n  // console.log('divRef', divRef);\n\n  // 這邊是舊資料 ----------------\n\n  const object = sheet.object(id, {\n    ...initialConfig.FONT\n  });\n  console.log(' object.value', object.value);\n  console.log(' object.props', object.props);\n  const dragOpts = useMemo(() => {\n    let scrub;\n    let initial;\n    let firstOnDragCalled = false;\n    return {\n      onDragStart() {\n        scrub = studio.scrub();\n        initial = object.value;\n        firstOnDragCalled = false;\n      },\n      onDrag(x, y) {\n        if (!firstOnDragCalled) {\n          studio.setSelection([object]);\n          firstOnDragCalled = true;\n        }\n        scrub.capture(_ref2 => {\n          let {\n            set\n          } = _ref2;\n          set(object.props, {\n            x: x + initial.x,\n            y: y + initial.y\n          });\n        });\n      },\n      onDragEnd(dragHappened) {\n        if (dragHappened) {\n          scrub.commit();\n        } else {\n          scrub.discard();\n        }\n      },\n      lockCursorTo: 'move'\n    };\n  });\n  useDrag(divRef, dragOpts);\n  useEffect(() => {\n    object.onValuesChange(newValue => {\n      setStyle({\n        left: `${newValue.position.x}%`,\n        top: `${newValue.position.y}%`,\n        background: `${newValue.bgColor}`,\n        color: `${newValue.font.color}`,\n        opacity: ` ${newValue.opacity}`,\n        padding: `${newValue.padding}px`,\n        display: `${newValue.visible ? 'block' : 'none'}`,\n        width: `${newValue.size.width}px`,\n        fontSize: `${newValue.font.size}px`,\n        borderRadius: `${newValue.border.radius}px`,\n        border: `${newValue.border.size}px solid ${newValue.border.color}`,\n        fontWeight: `${newValue.font.weight}`,\n        letterSpacing: `{newValue.font.spacing}px`,\n        lineHeight: `{newValue.lineHeight}px`,\n        textAlign: `${newValue.textAlign}`,\n        zIndex: `${newValue.zIndex}`,\n        transform: `scale(${newValue.scale})`\n      });\n    });\n  }, [object]);\n  return /*#__PURE__*/_jsxDEV(FontWrapper, {\n    onClick: () => {\n      studio.setSelection([object]);\n    },\n    ref: setDivRef,\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(FontElement, \"tdO5sfRPfUCyL7hDNOFtoUh/MV8=\", false, function () {\n  return [useDrag];\n});\n_c2 = FontElement;\nvar _c, _c2;\n$RefreshReg$(_c, \"FontWrapper\");\n$RefreshReg$(_c2, \"FontElement\");","map":{"version":3,"names":["studio","React","useMemo","useState","useEffect","styled","useDrag","initialConfig","defaultFontStyle","jsxDEV","_jsxDEV","FontWrapper","div","_c","FontElement","_ref","_s","id","sheet","divRef","setDivRef","style","setStyle","object","FONT","console","log","value","props","dragOpts","scrub","initial","firstOnDragCalled","onDragStart","onDrag","x","y","setSelection","capture","_ref2","set","onDragEnd","dragHappened","commit","discard","lockCursorTo","onValuesChange","newValue","left","position","top","background","bgColor","color","font","opacity","padding","display","visible","width","size","fontSize","borderRadius","border","radius","fontWeight","weight","letterSpacing","lineHeight","textAlign","zIndex","transform","scale","onClick","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/elements/font.js"],"sourcesContent":["import studio from '@theatre/studio';\nimport React, { useMemo, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport useDrag from '../../hooks/use-drag';\nimport { initialConfig } from '../../constants';\nimport { defaultFontStyle } from '../../shared-style';\n\nconst FontWrapper = styled.div`\n  ${defaultFontStyle}\n`;\n\n//結合 utils 的功能，這邊處理單一個文字元件的 render（交給 stage 做 map)\nexport default function FontElement({ id, sheet }) {\n  // const [pos, setPos] = useState({ x: 0, y: 0 });\n  const [divRef, setDivRef] = useState(null);\n  const [style, setStyle] = useState({}); // 新增一個狀態來追踪 style 變化\n\n  // console.log('divRef', divRef);\n\n  // 這邊是舊資料 ----------------\n\n  const object = sheet.object(id, {\n    ...initialConfig.FONT,\n  });\n\n  console.log(' object.value', object.value);\n  console.log(' object.props', object.props);\n\n  const dragOpts = useMemo(() => {\n    let scrub;\n    let initial;\n    let firstOnDragCalled = false;\n    return {\n      onDragStart() {\n        scrub = studio.scrub();\n        initial = object.value;\n        firstOnDragCalled = false;\n      },\n\n      onDrag(x, y) {\n        if (!firstOnDragCalled) {\n          studio.setSelection([object]);\n          firstOnDragCalled = true;\n        }\n        scrub.capture(({ set }) => {\n          set(object.props, {\n            x: x + initial.x,\n            y: y + initial.y,\n          });\n        });\n      },\n      onDragEnd(dragHappened) {\n        if (dragHappened) {\n          scrub.commit();\n        } else {\n          scrub.discard();\n        }\n      },\n      lockCursorTo: 'move',\n    };\n  });\n\n  useDrag(divRef, dragOpts);\n\n  useEffect(() => {\n    object.onValuesChange((newValue) => {\n      setStyle({\n        left: `${newValue.position.x}%`,\n        top: `${newValue.position.y}%`,\n        background: `${newValue.bgColor}`,\n        color: `${newValue.font.color}`,\n        opacity: ` ${newValue.opacity}`,\n        padding: `${newValue.padding}px`,\n        display: `${newValue.visible ? 'block' : 'none'}`,\n        width: `${newValue.size.width}px`,\n        fontSize: `${newValue.font.size}px`,\n        borderRadius: `${newValue.border.radius}px`,\n        border: `${newValue.border.size}px solid ${newValue.border.color}`,\n        fontWeight: `${newValue.font.weight}`,\n        letterSpacing: `{newValue.font.spacing}px`,\n        lineHeight: `{newValue.lineHeight}px`,\n        textAlign: `${newValue.textAlign}`,\n        zIndex: `${newValue.zIndex}`,\n        transform: `scale(${newValue.scale})`,\n      });\n    });\n  }, [object]);\n\n  return (\n    <FontWrapper\n      onClick={() => {\n        studio.setSelection([object]);\n      }}\n      ref={setDivRef}\n      style={style}\n    />\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}