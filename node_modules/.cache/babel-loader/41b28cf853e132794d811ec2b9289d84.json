{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/lightbox/json-lightbox.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { initialProperties } from '../../constants';\nimport studio from '@theatre/studio';\nimport { types } from '@theatre/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: black;\n  opacity: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10005;\n`;\n_c = Wrapper;\nconst Form = styled.div`\n  width: 50%;\n  background: white;\n  border: 10px;\n  padding: 10px 30px 30px;\n  outline: 3px solid black;\n\n  textarea {\n    width: 100%;\n    height: 200px;\n    margin-bottom: 10px;\n  }\n\n  button {\n    padding: 5px;\n    background: black;\n    color: white;\n    outline: none;\n    cursor: pointer;\n    margin-top: 10px;\n    margin-right: 10px;\n  }\n`;\n_c2 = Form;\nexport default function JSONLightBox(_ref) {\n  let {\n    setShowJSONLightBox,\n    sheet,\n    setPreviousData,\n    previousData,\n    setAnimateJSON,\n    animateJSON\n  } = _ref;\n  // 1. 更新得到的 positionJSON 給 previousData\n  // 2. 更新得到的 animateJSON 直接讓 project 讀取\n  // 3. 如果都沒資料，就使用預設值 --> 空白頁面\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u65B0\\u589E JSON \\u8CC7\\u6599\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"\\u5143\\u4EF6JSON\",\n        value: previousData,\n        onChange: e => setPreviousData(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"\\u52D5\\u614BJSON\",\n        value: animateJSON,\n        onChange: e => setAnimateJSON(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowJSONLightBox(false);\n        },\n        children: \"\\u78BA\\u8A8D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowJSONLightBox(false);\n          setAnimateJSON({});\n          const elements = localStorage.getItem('theatre-data');\n          if (elements) {\n            setPreviousData(JSON.parse(elements));\n          }\n        },\n        children: \"skip\\uFF0Cuse default project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_c3 = JSONLightBox;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"JSONLightBox\");","map":{"version":3,"names":["React","useState","useEffect","styled","initialProperties","studio","types","jsxDEV","_jsxDEV","Wrapper","div","_c","Form","_c2","JSONLightBox","_ref","setShowJSONLightBox","sheet","setPreviousData","previousData","setAnimateJSON","animateJSON","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","elements","localStorage","getItem","JSON","parse","_c3","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/lightbox/json-lightbox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { initialProperties } from '../../constants';\nimport studio from '@theatre/studio';\nimport { types } from '@theatre/core';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: black;\n  opacity: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10005;\n`;\n\nconst Form = styled.div`\n  width: 50%;\n  background: white;\n  border: 10px;\n  padding: 10px 30px 30px;\n  outline: 3px solid black;\n\n  textarea {\n    width: 100%;\n    height: 200px;\n    margin-bottom: 10px;\n  }\n\n  button {\n    padding: 5px;\n    background: black;\n    color: white;\n    outline: none;\n    cursor: pointer;\n    margin-top: 10px;\n    margin-right: 10px;\n  }\n`;\n\nexport default function JSONLightBox({\n  setShowJSONLightBox,\n  sheet,\n  setPreviousData,\n  previousData,\n  setAnimateJSON,\n  animateJSON,\n}) {\n  // 1. 更新得到的 positionJSON 給 previousData\n  // 2. 更新得到的 animateJSON 直接讓 project 讀取\n  // 3. 如果都沒資料，就使用預設值 --> 空白頁面\n\n  return (\n    <Wrapper>\n      <Form>\n        <h2>新增 JSON 資料</h2>\n\n        <textarea\n          placeholder='元件JSON'\n          value={previousData}\n          onChange={(e) => setPreviousData(e.target.value)}\n        />\n\n        <textarea\n          placeholder='動態JSON'\n          value={animateJSON}\n          onChange={(e) => setAnimateJSON(e.target.value)}\n        />\n\n        <button\n          onClick={() => {\n            setShowJSONLightBox(false);\n          }}\n        >\n          確認\n        </button>\n\n        <button\n          onClick={() => {\n            setShowJSONLightBox(false);\n            setAnimateJSON({});\n\n            const elements = localStorage.getItem('theatre-data');\n            if (elements) {\n              setPreviousData(JSON.parse(elements));\n            }\n          }}\n        >\n          skip，use default project\n        </button>\n      </Form>\n    </Wrapper>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,iBAAiB,QAAQ,iBAAiB;AACnD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,GAAGN,MAAM,CAACO,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAZIF,OAAO;AAcb,MAAMG,IAAI,GAAGT,MAAM,CAACO,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAtBID,IAAI;AAwBV,eAAe,SAASE,YAAYA,CAAAC,IAAA,EAOjC;EAAA,IAPkC;IACnCC,mBAAmB;IACnBC,KAAK;IACLC,eAAe;IACfC,YAAY;IACZC,cAAc;IACdC;EACF,CAAC,GAAAN,IAAA;EACC;EACA;EACA;;EAEA,oBACEP,OAAA,CAACC,OAAO;IAAAa,QAAA,eACNd,OAAA,CAACI,IAAI;MAAAU,QAAA,gBACHd,OAAA;QAAAc,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEnBlB,OAAA;QACEmB,WAAW,EAAC,kBAAQ;QACpBC,KAAK,EAAET,YAAa;QACpBU,QAAQ,EAAGC,CAAC,IAAKZ,eAAe,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eAEFlB,OAAA;QACEmB,WAAW,EAAC,kBAAQ;QACpBC,KAAK,EAAEP,WAAY;QACnBQ,QAAQ,EAAGC,CAAC,IAAKV,cAAc,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eAEFlB,OAAA;QACEwB,OAAO,EAAEA,CAAA,KAAM;UACbhB,mBAAmB,CAAC,KAAK,CAAC;QAC5B,CAAE;QAAAM,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETlB,OAAA;QACEwB,OAAO,EAAEA,CAAA,KAAM;UACbhB,mBAAmB,CAAC,KAAK,CAAC;UAC1BI,cAAc,CAAC,CAAC,CAAC,CAAC;UAElB,MAAMa,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;UACrD,IAAIF,QAAQ,EAAE;YACZf,eAAe,CAACkB,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC,CAAC;UACvC;QACF,CAAE;QAAAX,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACY,GAAA,GArDuBxB,YAAY;AAAA,IAAAH,EAAA,EAAAE,GAAA,EAAAyB,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAA1B,GAAA;AAAA0B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}