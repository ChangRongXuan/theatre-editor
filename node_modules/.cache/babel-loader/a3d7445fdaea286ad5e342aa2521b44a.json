{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/demo-stage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\n// import { initialConfig } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n_c = Wrapper;\nconst FontElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c2 = FontElement;\nconst ImageElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\n// 如何讓透過 local-storage 裡 render 的資料可以被選取？\n// 注意：但純 render，要被轉換成 embedded 的不需要\n_c3 = ImageElement;\nexport default function DemoStage() {\n  _s();\n  const [storedData, setStoredData] = useState([]); // data in local-storage\n\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setStoredData(JSON.parse(elements));\n    }\n  }, []);\n\n  // 如何修改內容？？\n  useEffect(() => {\n    if (storedData.length > 0) {\n      //render `font` control menu\n      storedData.filter(item => item.type === 'font').forEach(item => {\n        const menuConfig = sheet.object(item.id, {\n          ...initialConfig.FONT,\n          content: types.string(`${item.content}`)\n        });\n        const element = document.getElementById(item.id);\n        menuConfig.onValuesChange(newValue => {\n          element.style.cssText = `\n              left: ${newValue.position.x}%;\n              top: ${newValue.position.y}修改ㄋㄨ\n              background: ${newValue.bgColor};\n              color: ${newValue.font.color};\n              opacity: ${newValue.opacity};\n              padding: ${newValue.padding}px;\n              display: ${newValue.visible ? 'block' : 'none'};\n              width: ${newValue.size.width}px;\n              height: ${newValue.size.height}px;\n              font-size: ${newValue.font.size}px;\n              border-radius: ${newValue.border.radius}%;\n              border: ${newValue.border.size}px solid ${newValue.border.color};\n            `;\n        });\n      });\n\n      //render `image` control menu\n      storedData.filter(item => item.type === 'image').forEach(item => {\n        const menuConfig = sheet.object(item.id, {\n          ...initialConfig.IMAGE\n          // content: types.string(`${item.content}`),\n        });\n\n        const element = document.getElementById(item.id);\n        menuConfig.onValuesChange(newValue => {\n          element.style.cssText = `\n              left: ${newValue.position.x}%;\n              top: ${newValue.position.y}%;\n              background: ${newValue.bgColor};\n              color: ${newValue.font.color};\n              opacity: ${newValue.opacity};\n              padding: ${newValue.padding}px;\n              display: ${newValue.visible ? 'block' : 'none'};\n              width: ${newValue.size.width}px;\n              height: ${newValue.size.height}px;\n              font-size: ${newValue.font.size}px;\n              border-radius: ${newValue.border.radius}%;\n              border: ${newValue.border.size}px solid ${newValue.border.color};\n            `;\n        });\n      });\n    }\n  }, [storedData]);\n  const fontElements = storedData.filter(data => data.type === 'font').map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(FontElement, {\n      id: data.id,\n      children: data.content\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this);\n  });\n  const imageElements = storedData.filter(data => data.type === 'image').map((data, index) => {\n    const style = {\n      backgroundImage: `url(${data.url})`\n    };\n    return /*#__PURE__*/_jsxDEV(ImageElement, {\n      id: data.id,\n      style: style\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: \"theatre-stage\",\n    children: [fontElements, imageElements]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(DemoStage, \"3BWFAgJBhjvuMRyDP6l5VsmCKIE=\");\n_c4 = DemoStage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"FontElement\");\n$RefreshReg$(_c3, \"ImageElement\");\n$RefreshReg$(_c4, \"DemoStage\");","map":{"version":3,"names":["React","useEffect","styled","jsxDEV","_jsxDEV","Wrapper","div","_c","FontElement","_c2","ImageElement","_c3","DemoStage","_s","storedData","setStoredData","useState","elements","localStorage","getItem","JSON","parse","length","filter","item","type","forEach","menuConfig","sheet","object","id","initialConfig","FONT","content","types","string","element","document","getElementById","onValuesChange","newValue","style","cssText","position","x","y","bgColor","font","color","opacity","padding","visible","size","width","height","border","radius","IMAGE","fontElements","data","map","index","children","fileName","_jsxFileName","lineNumber","columnNumber","imageElements","backgroundImage","url","_c4","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/demo-stage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\n// import { initialConfig } from '../constants';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n\nconst FontElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ImageElement = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\n// 如何讓透過 local-storage 裡 render 的資料可以被選取？\n// 注意：但純 render，要被轉換成 embedded 的不需要\nexport default function DemoStage() {\n  const [storedData, setStoredData] = useState([]); // data in local-storage\n\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setStoredData(JSON.parse(elements));\n    }\n  }, []);\n\n  // 如何修改內容？？\n  useEffect(() => {\n    if (storedData.length > 0) {\n      //render `font` control menu\n      storedData\n        .filter((item) => item.type === 'font')\n        .forEach((item) => {\n          const menuConfig = sheet.object(item.id, {\n            ...initialConfig.FONT,\n            content: types.string(`${item.content}`),\n          });\n\n          const element = document.getElementById(item.id);\n\n          menuConfig.onValuesChange((newValue) => {\n            element.style.cssText = `\n              left: ${newValue.position.x}%;\n              top: ${newValue.position.y}修改ㄋㄨ\n              background: ${newValue.bgColor};\n              color: ${newValue.font.color};\n              opacity: ${newValue.opacity};\n              padding: ${newValue.padding}px;\n              display: ${newValue.visible ? 'block' : 'none'};\n              width: ${newValue.size.width}px;\n              height: ${newValue.size.height}px;\n              font-size: ${newValue.font.size}px;\n              border-radius: ${newValue.border.radius}%;\n              border: ${newValue.border.size}px solid ${newValue.border.color};\n            `;\n          });\n        });\n\n      //render `image` control menu\n      storedData\n        .filter((item) => item.type === 'image')\n        .forEach((item) => {\n          const menuConfig = sheet.object(item.id, {\n            ...initialConfig.IMAGE,\n            // content: types.string(`${item.content}`),\n          });\n\n          const element = document.getElementById(item.id);\n\n          menuConfig.onValuesChange((newValue) => {\n            element.style.cssText = `\n              left: ${newValue.position.x}%;\n              top: ${newValue.position.y}%;\n              background: ${newValue.bgColor};\n              color: ${newValue.font.color};\n              opacity: ${newValue.opacity};\n              padding: ${newValue.padding}px;\n              display: ${newValue.visible ? 'block' : 'none'};\n              width: ${newValue.size.width}px;\n              height: ${newValue.size.height}px;\n              font-size: ${newValue.font.size}px;\n              border-radius: ${newValue.border.radius}%;\n              border: ${newValue.border.size}px solid ${newValue.border.color};\n            `;\n          });\n        });\n    }\n  }, [storedData]);\n\n  const fontElements = storedData\n    .filter((data) => data.type === 'font')\n    .map((data, index) => {\n      return (\n        <FontElement key={index} id={data.id}>\n          {data.content}\n        </FontElement>\n      );\n    });\n\n  const imageElements = storedData\n    .filter((data) => data.type === 'image')\n    .map((data, index) => {\n      const style = { backgroundImage: `url(${data.url})` };\n      return <ImageElement key={index} id={data.id} style={style} />;\n    });\n\n  return (\n    <Wrapper id='theatre-stage'>\n      {fontElements}\n      {imageElements}\n    </Wrapper>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}