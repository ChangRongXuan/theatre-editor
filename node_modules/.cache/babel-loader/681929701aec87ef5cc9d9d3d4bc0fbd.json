{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-video.js\",\n  _s = $RefreshSig$();\nimport studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { onChange, val } from '@theatre/core';\nimport Stage from '../components/stage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  outline: 5px solid red;\n  z-index: -1;\n  overflow: hidden;\n`;\nconst BasicBox = styled.div`\n  position: absolute;\n  width: 300px;\n  height: 20px;\n  background: white;\n  outline: 3px solid black;\n  z-index: 10000;\n  padding: 20px;\n`;\nexport default function DemoVideo(_ref) {\n  _s();\n  let {\n    project,\n    sheet\n  } = _ref;\n  const [elementJSON, setElementJSON] = useState([]);\n  const [animateData, setAnimateData] = useState([]);\n  console.log('elementJSON', elementJSON);\n  console.log('animateData', animateData);\n\n  // get localStorage data\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setElementJSON(JSON.parse(elements));\n    }\n    const animates = localStorage.getItem('theatre-0.4.persistent');\n    if (animates) {\n      setAnimateData(animates);\n    }\n  }, []);\n\n  // ------------------------------------------\n\n  // studio.initialize();\n  // const project = getProject('Demo: Video', { state: animateData });\n  // const sheet = project.sheet('Scene', 'default');\n  studio.ui.hide();\n  project.ready.then(() => sheet.sequence.play());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Stage, {\n      sheet: sheet,\n      savedData: elementJSON\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(DemoVideo, \"vrjI/0IQ7nrhU6PTK9FjX80Tf1w=\");\n_c = DemoVideo;\nvar _c;\n$RefreshReg$(_c, \"DemoVideo\");","map":{"version":3,"names":["studio","getProject","types","useState","useEffect","styled","onChange","val","Stage","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","BasicBox","DemoVideo","_ref","_s","project","sheet","elementJSON","setElementJSON","animateData","setAnimateData","console","log","elements","localStorage","getItem","JSON","parse","animates","ui","hide","ready","then","sequence","play","children","savedData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-video.js"],"sourcesContent":["import studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { onChange, val } from '@theatre/core';\nimport Stage from '../components/stage';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  outline: 5px solid red;\n  z-index: -1;\n  overflow: hidden;\n`;\n\nconst BasicBox = styled.div`\n  position: absolute;\n  width: 300px;\n  height: 20px;\n  background: white;\n  outline: 3px solid black;\n  z-index: 10000;\n  padding: 20px;\n`;\n\nexport default function DemoVideo({ project, sheet }) {\n  const [elementJSON, setElementJSON] = useState([]);\n  const [animateData, setAnimateData] = useState([]);\n\n  console.log('elementJSON', elementJSON);\n  console.log('animateData', animateData);\n\n  // get localStorage data\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n\n    if (elements) {\n      setElementJSON(JSON.parse(elements));\n    }\n\n    const animates = localStorage.getItem('theatre-0.4.persistent');\n    if (animates) {\n      setAnimateData(animates);\n    }\n  }, []);\n\n  // ------------------------------------------\n\n  // studio.initialize();\n  // const project = getProject('Demo: Video', { state: animateData });\n  // const sheet = project.sheet('Scene', 'default');\n  studio.ui.hide();\n  project.ready.then(() => sheet.sequence.play());\n\n  return (\n    <>\n      <Stage sheet={sheet} savedData={elementJSON} />\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,SAASC,UAAU,EAAEC,KAAK,QAAQ,eAAe;AACjD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,EAAEC,GAAG,QAAQ,eAAe;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,QAAQ,GAAGV,MAAM,CAACS,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASE,SAASA,CAAAC,IAAA,EAAqB;EAAAC,EAAA;EAAA,IAApB;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAAH,IAAA;EAClD,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAElDsB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEL,WAAW,CAAC;EACvCI,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,WAAW,CAAC;;EAEvC;EACAnB,SAAS,CAAC,MAAM;IACd,MAAMuB,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAErD,IAAIF,QAAQ,EAAE;MACZL,cAAc,CAACQ,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC,CAAC;IACtC;IAEA,MAAMK,QAAQ,GAAGJ,YAAY,CAACC,OAAO,CAAC,wBAAwB,CAAC;IAC/D,IAAIG,QAAQ,EAAE;MACZR,cAAc,CAACQ,QAAQ,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA;EACA;EACA;EACAhC,MAAM,CAACiC,EAAE,CAACC,IAAI,CAAC,CAAC;EAChBf,OAAO,CAACgB,KAAK,CAACC,IAAI,CAAC,MAAMhB,KAAK,CAACiB,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;EAE/C,oBACE5B,OAAA,CAAAE,SAAA;IAAA2B,QAAA,eACE7B,OAAA,CAACF,KAAK;MAACY,KAAK,EAAEA,KAAM;MAACoB,SAAS,EAAEnB;IAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC/C,CAAC;AAEP;AAAC1B,EAAA,CAlCuBF,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}