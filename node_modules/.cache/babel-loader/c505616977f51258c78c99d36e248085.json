{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-video.js\",\n  _s = $RefreshSig$();\nimport studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { onChange, val } from '@theatre/core';\nimport Stage from '../components/stage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  outline: 5px solid red;\n  z-index: -1;\n  overflow: hidden;\n`;\nconst BasicBox = styled.div`\n  position: absolute;\n  width: 300px;\n  height: 20px;\n  background: white;\n  outline: 3px solid black;\n  z-index: 10000;\n  padding: 20px;\n`;\nexport default function DemoVideo() {\n  _s();\n  studio.initialize();\n  const project = getProject('Demo: Video', {});\n  const sheet = project.sheet('Scene', 'default');\n  studio.ui.hide();\n  project.ready.then(() => sheet.sequence.play());\n\n  // ------------------------------------------\n\n  const [elementJSON, setElementJSON] = useState([]);\n  const [animateData, setAnimateData] = useState([]);\n\n  // get localStorage data\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n    if (elements) {\n      setElementJSON(JSON.parse(elements));\n    }\n    const animates = localStorage.getItem('theatre-0.4.persistent');\n    if (animates) {\n      setAnimateData(JSON.parse(animates));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Stage, {\n      sheet: sheet,\n      savedData: elementJSON\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(DemoVideo, \"vrjI/0IQ7nrhU6PTK9FjX80Tf1w=\");\n_c = DemoVideo;\nvar _c;\n$RefreshReg$(_c, \"DemoVideo\");","map":{"version":3,"names":["studio","getProject","types","useState","useEffect","styled","onChange","val","Stage","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","BasicBox","DemoVideo","_s","initialize","project","sheet","ui","hide","ready","then","sequence","play","elementJSON","setElementJSON","animateData","setAnimateData","elements","localStorage","getItem","JSON","parse","animates","children","savedData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo-video.js"],"sourcesContent":["import studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { onChange, val } from '@theatre/core';\nimport Stage from '../components/stage';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  outline: 5px solid red;\n  z-index: -1;\n  overflow: hidden;\n`;\n\nconst BasicBox = styled.div`\n  position: absolute;\n  width: 300px;\n  height: 20px;\n  background: white;\n  outline: 3px solid black;\n  z-index: 10000;\n  padding: 20px;\n`;\n\nexport default function DemoVideo() {\n  studio.initialize();\n  const project = getProject('Demo: Video', {});\n  const sheet = project.sheet('Scene', 'default');\n  studio.ui.hide();\n  project.ready.then(() => sheet.sequence.play());\n\n  // ------------------------------------------\n\n  const [elementJSON, setElementJSON] = useState([]);\n  const [animateData, setAnimateData] = useState([]);\n\n  // get localStorage data\n  useEffect(() => {\n    const elements = localStorage.getItem('theatre-data');\n\n    if (elements) {\n      setElementJSON(JSON.parse(elements));\n    }\n\n    const animates = localStorage.getItem('theatre-0.4.persistent');\n    if (animates) {\n      setAnimateData(JSON.parse(animates));\n    }\n  }, []);\n\n  return (\n    <>\n      <Stage sheet={sheet} savedData={elementJSON} />\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,SAASC,UAAU,EAAEC,KAAK,QAAQ,eAAe;AACjD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,EAAEC,GAAG,QAAQ,eAAe;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,QAAQ,GAAGV,MAAM,CAACS,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASE,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClCjB,MAAM,CAACkB,UAAU,CAAC,CAAC;EACnB,MAAMC,OAAO,GAAGlB,UAAU,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;EAC7C,MAAMmB,KAAK,GAAGD,OAAO,CAACC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC;EAC/CpB,MAAM,CAACqB,EAAE,CAACC,IAAI,CAAC,CAAC;EAChBH,OAAO,CAACI,KAAK,CAACC,IAAI,CAAC,MAAMJ,KAAK,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;;EAE/C;;EAEA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd,MAAM2B,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAErD,IAAIF,QAAQ,EAAE;MACZH,cAAc,CAACM,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC,CAAC;IACtC;IAEA,MAAMK,QAAQ,GAAGJ,YAAY,CAACC,OAAO,CAAC,wBAAwB,CAAC;IAC/D,IAAIG,QAAQ,EAAE;MACZN,cAAc,CAACI,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,CAAC;IACtC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE1B,OAAA,CAAAE,SAAA;IAAAyB,QAAA,eACE3B,OAAA,CAACF,KAAK;MAACY,KAAK,EAAEA,KAAM;MAACkB,SAAS,EAAEX;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC/C,CAAC;AAEP;AAACzB,EAAA,CA/BuBD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}