{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/components/elements/background.js\",\n  _s = $RefreshSig$();\nimport studio from '@theatre/studio';\nimport React, { useMemo, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport useDrag from '../../hooks/use-drag';\nimport { initialConfig } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BgWrapper = styled.div`\n  position: absolute;\n  display: block;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  outline: 3px solid blue;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    /* object-fit: contain; */\n    display: block;\n    outline: 3px solid red;\n    object-position: top center;\n  }\n`;\n_c = BgWrapper;\nexport default function BackgroundElement(_ref) {\n  _s();\n  let {\n    id,\n    sheet,\n    stageSize,\n    draggable = true,\n    onLoad,\n    onError\n  } = _ref;\n  const object = sheet.object(id, {\n    ...initialConfig.BACKGROUND\n  });\n\n  // Drag setting ----------------------\n  const [divRef, setDivRef] = useState(null);\n  const dragOpts = useMemo(() => {\n    let scrub;\n    let initial;\n    let firstOnDragCalled = false;\n    return {\n      onDragStart() {\n        scrub = studio.scrub();\n        initial = object.value;\n        firstOnDragCalled = false;\n      },\n      onDrag(x, y) {\n        const percentX = x / stageSize.width * 100;\n        const percentY = y / stageSize.height * 100;\n        if (!firstOnDragCalled) {\n          studio.setSelection([object]);\n          firstOnDragCalled = true;\n        }\n        scrub.capture(_ref2 => {\n          let {\n            set\n          } = _ref2;\n          set(object.props, {\n            ...initial,\n            position: {\n              x: percentX + initial.position.x,\n              y: percentY + initial.position.y\n            }\n          });\n        });\n      },\n      onDragEnd(dragHappened) {\n        if (dragHappened) {\n          scrub.commit();\n        } else {\n          scrub.discard();\n        }\n      },\n      lockCursorTo: 'move'\n    };\n  }, []);\n  draggable && useDrag(divRef, dragOpts);\n\n  // Style setting ----------------------\n\n  const [style, setStyle] = useState({});\n  const [imageUrl, setImageUrl] = useState('/default-image.png');\n  useEffect(() => {\n    object.onValuesChange(newValue => {\n      setImageUrl(newValue.url);\n      setStyle({\n        left: `${newValue.position.x}%`,\n        top: `${newValue.position.y}%`,\n        width: `${newValue.size.width}px`,\n        height: `${newValue.size.height}px`,\n        borderRadius: `${newValue.border.radius}%`,\n        border: `${newValue.border.size}px solid ${newValue.border.color}`,\n        background: `${newValue.bgColor}`,\n        opacity: `${newValue.opacity}`,\n        display: `${newValue.visible ? 'block' : 'none'}`,\n        transform: `scale(${newValue.scale}) translate(-50%, -50%)`,\n        zIndex: `${newValue.zIndex}`\n      });\n    });\n  }, [object]);\n  return /*#__PURE__*/_jsxDEV(BgWrapper, {\n    onClick: () => {\n      studio.setSelection([object]);\n    },\n    ref: setDivRef,\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: id,\n      onLoad: onLoad,\n      onError: e => {\n        e.target.src = '/error-warning.png';\n        onError();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(BackgroundElement, \"ZEN4b9qRfJfUnL9Alx2oyKfvOrI=\", false, function () {\n  return [useDrag];\n});\n_c2 = BackgroundElement;\nvar _c, _c2;\n$RefreshReg$(_c, \"BgWrapper\");\n$RefreshReg$(_c2, \"BackgroundElement\");","map":{"version":3,"names":["studio","React","useMemo","useState","useEffect","styled","useDrag","initialConfig","jsxDEV","_jsxDEV","BgWrapper","div","_c","BackgroundElement","_ref","_s","id","sheet","stageSize","draggable","onLoad","onError","object","BACKGROUND","divRef","setDivRef","dragOpts","scrub","initial","firstOnDragCalled","onDragStart","value","onDrag","x","y","percentX","width","percentY","height","setSelection","capture","_ref2","set","props","position","onDragEnd","dragHappened","commit","discard","lockCursorTo","style","setStyle","imageUrl","setImageUrl","onValuesChange","newValue","url","left","top","size","borderRadius","border","radius","color","background","bgColor","opacity","display","visible","transform","scale","zIndex","onClick","ref","children","src","alt","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/components/elements/background.js"],"sourcesContent":["import studio from '@theatre/studio';\nimport React, { useMemo, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport useDrag from '../../hooks/use-drag';\nimport { initialConfig } from '../../constants';\n\nconst BgWrapper = styled.div`\n  position: absolute;\n  display: block;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  outline: 3px solid blue;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    /* object-fit: contain; */\n    display: block;\n    outline: 3px solid red;\n    object-position: top center;\n  }\n`;\n\nexport default function BackgroundElement({\n  id,\n  sheet,\n  stageSize,\n  draggable = true,\n  onLoad,\n  onError,\n}) {\n  const object = sheet.object(id, {\n    ...initialConfig.BACKGROUND,\n  });\n\n  // Drag setting ----------------------\n  const [divRef, setDivRef] = useState(null);\n\n  const dragOpts = useMemo(() => {\n    let scrub;\n    let initial;\n    let firstOnDragCalled = false;\n    return {\n      onDragStart() {\n        scrub = studio.scrub();\n        initial = object.value;\n        firstOnDragCalled = false;\n      },\n\n      onDrag(x, y) {\n        const percentX = (x / stageSize.width) * 100;\n        const percentY = (y / stageSize.height) * 100;\n\n        if (!firstOnDragCalled) {\n          studio.setSelection([object]);\n          firstOnDragCalled = true;\n        }\n        scrub.capture(({ set }) => {\n          set(object.props, {\n            ...initial,\n            position: {\n              x: percentX + initial.position.x,\n              y: percentY + initial.position.y,\n            },\n          });\n        });\n      },\n      onDragEnd(dragHappened) {\n        if (dragHappened) {\n          scrub.commit();\n        } else {\n          scrub.discard();\n        }\n      },\n      lockCursorTo: 'move',\n    };\n  }, []);\n\n  draggable && useDrag(divRef, dragOpts);\n\n  // Style setting ----------------------\n\n  const [style, setStyle] = useState({});\n  const [imageUrl, setImageUrl] = useState('/default-image.png');\n\n  useEffect(() => {\n    object.onValuesChange((newValue) => {\n      setImageUrl(newValue.url);\n      setStyle({\n        left: `${newValue.position.x}%`,\n        top: `${newValue.position.y}%`,\n        width: `${newValue.size.width}px`,\n        height: `${newValue.size.height}px`,\n        borderRadius: `${newValue.border.radius}%`,\n        border: `${newValue.border.size}px solid ${newValue.border.color}`,\n        background: `${newValue.bgColor}`,\n        opacity: `${newValue.opacity}`,\n        display: `${newValue.visible ? 'block' : 'none'}`,\n        transform: `scale(${newValue.scale}) translate(-50%, -50%)`,\n        zIndex: `${newValue.zIndex}`,\n      });\n    });\n  }, [object]);\n\n  return (\n    <BgWrapper\n      onClick={() => {\n        studio.setSelection([object]);\n      }}\n      ref={setDivRef}\n      style={style}\n    >\n      <img\n        src={imageUrl}\n        alt={id}\n        onLoad={onLoad}\n        onError={(e) => {\n          e.target.src = '/error-warning.png';\n          onError();\n        }}\n      />\n    </BgWrapper>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}