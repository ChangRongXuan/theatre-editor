{"ast":null,"code":"import { types } from '@theatre/core';\nexport const BACKGROUND = {\n  position: types.compound({\n    x: types.number(0, {\n      range: [-500, 500],\n      nudgeMultiplier: 0.5\n    }),\n    y: types.number(0, {\n      range: [-500, 500],\n      nudgeMultiplier: 0.5\n    })\n  }),\n  // size: types.compound({\n  //   width: types.number(200, {\n  //     range: [0, 1200],\n  //     nudgeMultiplier: 1,\n  //   }),\n  //   height: types.number(100, {\n  //     range: [0, 1200],\n  //     nudgeMultiplier: 1,\n  //   }),\n  // }),\n  scale: types.number(1, {\n    range: [0, 100],\n    nudgeMultiplier: 0.1\n  }),\n  border: types.compound({\n    size: types.number(0),\n    color: types.rgba({\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1\n    }),\n    radius: types.number(0, {\n      range: [0, 100],\n      nudgeMultiplier: 1\n    })\n  }),\n  url: types.string('/default-image.png'),\n  opacity: types.number(1, {\n    range: [0, 1],\n    nudgeMultiplier: 0.05\n  }),\n  visible: types.boolean(true),\n  zIndex: types.stringLiteral('bottom', {\n    bottom: '-10',\n    0: '0',\n    10: '10',\n    100: '100',\n    1000: '1000',\n    10000: '10000'\n  })\n};","map":{"version":3,"names":["types","BACKGROUND","position","compound","x","number","range","nudgeMultiplier","y","scale","border","size","color","rgba","r","g","b","a","radius","url","string","opacity","visible","boolean","zIndex","stringLiteral","bottom"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/constants/background.js"],"sourcesContent":["import { types } from '@theatre/core';\n\nexport const BACKGROUND = {\n  position: types.compound({\n    x: types.number(0, {\n      range: [-500, 500],\n      nudgeMultiplier: 0.5,\n    }),\n    y: types.number(0, {\n      range: [-500, 500],\n      nudgeMultiplier: 0.5,\n    }),\n  }),\n  // size: types.compound({\n  //   width: types.number(200, {\n  //     range: [0, 1200],\n  //     nudgeMultiplier: 1,\n  //   }),\n  //   height: types.number(100, {\n  //     range: [0, 1200],\n  //     nudgeMultiplier: 1,\n  //   }),\n  // }),\n  scale: types.number(1, { range: [0, 100], nudgeMultiplier: 0.1 }),\n  border: types.compound({\n    size: types.number(0),\n    color: types.rgba({ r: 0, g: 0, b: 0, a: 1 }),\n    radius: types.number(0, {\n      range: [0, 100],\n      nudgeMultiplier: 1,\n    }),\n  }),\n  url: types.string('/default-image.png'),\n  opacity: types.number(1, {\n    range: [0, 1],\n    nudgeMultiplier: 0.05,\n  }),\n  visible: types.boolean(true),\n  zIndex: types.stringLiteral('bottom', {\n    bottom: '-10',\n    0: '0',\n    10: '10',\n    100: '100',\n    1000: '1000',\n    10000: '10000',\n  }),\n};\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,eAAe;AAErC,OAAO,MAAMC,UAAU,GAAG;EACxBC,QAAQ,EAAEF,KAAK,CAACG,QAAQ,CAAC;IACvBC,CAAC,EAAEJ,KAAK,CAACK,MAAM,CAAC,CAAC,EAAE;MACjBC,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;MAClBC,eAAe,EAAE;IACnB,CAAC,CAAC;IACFC,CAAC,EAAER,KAAK,CAACK,MAAM,CAAC,CAAC,EAAE;MACjBC,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;MAClBC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC,CAAC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAE,KAAK,EAAET,KAAK,CAACK,MAAM,CAAC,CAAC,EAAE;IAAEC,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;IAAEC,eAAe,EAAE;EAAI,CAAC,CAAC;EACjEG,MAAM,EAAEV,KAAK,CAACG,QAAQ,CAAC;IACrBQ,IAAI,EAAEX,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC;IACrBO,KAAK,EAAEZ,KAAK,CAACa,IAAI,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC;IAC7CC,MAAM,EAAElB,KAAK,CAACK,MAAM,CAAC,CAAC,EAAE;MACtBC,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;MACfC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC,CAAC;EACFY,GAAG,EAAEnB,KAAK,CAACoB,MAAM,CAAC,oBAAoB,CAAC;EACvCC,OAAO,EAAErB,KAAK,CAACK,MAAM,CAAC,CAAC,EAAE;IACvBC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACbC,eAAe,EAAE;EACnB,CAAC,CAAC;EACFe,OAAO,EAAEtB,KAAK,CAACuB,OAAO,CAAC,IAAI,CAAC;EAC5BC,MAAM,EAAExB,KAAK,CAACyB,aAAa,CAAC,QAAQ,EAAE;IACpCC,MAAM,EAAE,KAAK;IACb,CAAC,EAAE,GAAG;IACN,EAAE,EAAE,IAAI;IACR,GAAG,EAAE,KAAK;IACV,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE;EACT,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}