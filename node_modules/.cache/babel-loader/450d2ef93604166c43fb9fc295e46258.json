{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo.js\",\n  _s = $RefreshSig$();\nimport studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport EmbeddedCode from '../embedded';\nimport styled from 'styled-components';\nimport EmbeddedBox from '../components/embedded-box';\nimport FontBox from '../components/font-box';\nimport ReactDOM from 'react-dom';\nimport Font from '../components/font';\nimport projectState from '../json/state.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  min-width: 100%;\n  position: relative;\n  outline: 5px solid red;\n  z-index: -1;\n`;\n_c = Container;\nconst BasicBox = styled.div`\n  position: absolute;\n  width: 300px;\n  height: 20px;\n  background: white;\n  outline: 3px solid black;\n  z-index: 10000;\n  padding: 20px;\n`;\n\n//重新整理後，必帶最近一次舊資料\n//抓資料：先從 CMS 調用，沒資料再看 local-storage 有沒有資料\n//存資料：CMS 跟 local-storage 都存\n_c2 = BasicBox;\nexport default function DemoPage() {\n  _s();\n  studio.initialize();\n  // const config = {}; // the config can be empty when starting a new project\n  const project = getProject('deepfake demo', {\n    state: projectState\n  });\n  const sheet = project.sheet('Scene', 'default');\n  studio.ui.hide();\n  const [preData, setPreData] = useState([]); //上一筆舊資料，要與 local-storage 一致\n\n  //從 local-storage 取得舊資料\n  useEffect(() => {\n    const storedBoxes = localStorage.getItem('theatre-data');\n    if (storedBoxes) {\n      setPreData(JSON.parse(storedBoxes));\n    }\n  }, []);\n\n  //render 出既有的元件\n  useEffect(() => {\n    preData.filter(item => item.type === 'box').forEach(item => {\n      const box = sheet.object(item.id, {\n        position: {\n          x: 0,\n          y: 0\n        },\n        bgColor: types.string('#ffffff')\n      });\n      const element = document.getElementById(item.id);\n      console.log('element', element);\n      box.onValuesChange(newValue => {\n        element.style.left = newValue.position.x + 'px';\n        element.style.top = newValue.position.y + 'px';\n        element.style.backgroundColor = newValue.bgColor;\n      });\n    });\n  });\n\n  //這邊處理轉換 embedded-code\n  // const embedCodeWebpackAssets = embedCodeGen.loadWebpackAssets(); //取得靜態資料\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      id: \"item-container\",\n      children: preData.map((box, index) => /*#__PURE__*/_jsxDEV(BasicBox, {\n        id: box.id,\n        style: box.style,\n        children: box.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(DemoPage, \"W2ON3BoH97zYSDgHMLTVr3KFBoE=\");\n_c3 = DemoPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"BasicBox\");\n$RefreshReg$(_c3, \"DemoPage\");","map":{"version":3,"names":["studio","getProject","types","useState","useEffect","EmbeddedCode","styled","EmbeddedBox","FontBox","ReactDOM","Font","projectState","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","BasicBox","_c2","DemoPage","_s","initialize","project","state","sheet","ui","hide","preData","setPreData","storedBoxes","localStorage","getItem","JSON","parse","filter","item","type","forEach","box","object","id","position","x","y","bgColor","string","element","document","getElementById","console","log","onValuesChange","newValue","style","left","top","backgroundColor","children","map","index","content","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/deepfake-demo/src/page/demo.js"],"sourcesContent":["import studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState, useEffect } from 'react';\nimport EmbeddedCode from '../embedded';\nimport styled from 'styled-components';\nimport EmbeddedBox from '../components/embedded-box';\nimport FontBox from '../components/font-box';\nimport ReactDOM from 'react-dom';\nimport Font from '../components/font';\nimport projectState from '../json/state.json';\n\nconst Container = styled.div`\n  min-width: 100%;\n  position: relative;\n  outline: 5px solid red;\n  z-index: -1;\n`;\n\nconst BasicBox = styled.div`\n  position: absolute;\n  width: 300px;\n  height: 20px;\n  background: white;\n  outline: 3px solid black;\n  z-index: 10000;\n  padding: 20px;\n`;\n\n//重新整理後，必帶最近一次舊資料\n//抓資料：先從 CMS 調用，沒資料再看 local-storage 有沒有資料\n//存資料：CMS 跟 local-storage 都存\n\nexport default function DemoPage() {\n  studio.initialize();\n  // const config = {}; // the config can be empty when starting a new project\n  const project = getProject('deepfake demo', { state: projectState });\n  const sheet = project.sheet('Scene', 'default');\n\n  studio.ui.hide();\n\n  const [preData, setPreData] = useState([]); //上一筆舊資料，要與 local-storage 一致\n\n  //從 local-storage 取得舊資料\n  useEffect(() => {\n    const storedBoxes = localStorage.getItem('theatre-data');\n    if (storedBoxes) {\n      setPreData(JSON.parse(storedBoxes));\n    }\n  }, []);\n\n  //render 出既有的元件\n  useEffect(() => {\n    preData\n      .filter((item) => item.type === 'box')\n      .forEach((item) => {\n        const box = sheet.object(item.id, {\n          position: {\n            x: 0,\n            y: 0,\n          },\n          bgColor: types.string('#ffffff'),\n        });\n\n        const element = document.getElementById(item.id);\n\n        console.log('element', element);\n\n        box.onValuesChange((newValue) => {\n          element.style.left = newValue.position.x + 'px';\n          element.style.top = newValue.position.y + 'px';\n          element.style.backgroundColor = newValue.bgColor;\n        });\n      });\n  });\n\n  //這邊處理轉換 embedded-code\n  // const embedCodeWebpackAssets = embedCodeGen.loadWebpackAssets(); //取得靜態資料\n\n  return (\n    <>\n      {/* 只 render local-storage 的舊資料 */}\n      <Container id='item-container'>\n        {preData.map((box, index) => (\n          <BasicBox key={index} id={box.id} style={box.style}>\n            {box.content}\n          </BasicBox>\n        ))}\n      </Container>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}